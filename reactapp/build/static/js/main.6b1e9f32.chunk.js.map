{"version":3,"sources":["logo.svg","Page/Shop/Products.js","Page/Form.js","Functions/allOptions.js","Functions/useLocalStore.js","Functions/headCount.js","Functions/checkIfExist.js","Page/Login.js","Page/Logout.js","Nav/Header.js","Page/Change.js","Page/Slide.js","Page/HomePage.js","Page/About.js","Page/CollecSlide.js","Page/CollectionFW20.js","Functions/roundNum.js","Page/Shop/Cart.js","Components/PopUpAddProduct.js","Page/ProductSlide.js","Page/Shop/ProductCard.js","Components/PopUpMsgSent.js","Page/Contact.js","Page/Checkout/Checkout.js","Page/Checkout/ShippingInfo.js","Functions/formatDate.js","Page/Account/MyAccount.js","Page/Account/MySettings.js","Components/MyCheckoutForm.js","Components/CheckoutShipForm.js","Page/Checkout/Payment.js","Page/Account/SettingsForm.js","Page/Account/UpdatePassword.js","Page/Checkout/Success.js","App.js","serviceWorker.js","Reducers/user.reducer.js","index.js","Reducers/shop.reducer.js","Reducers/count.reducer.js","Reducers/order.reducer.js"],"names":["module","exports","Product","props","useState","productList","setproductList","storeId","setstoreId","useEffect","a","fetch","then","response","json","products","catch","error","console","log","fetchData","goToProdCard","arg","prodList","map","product","i","style","float","className","key","onClick","e","target","id","_id","src","img","ref","name","price","to","Form","type","enabled","setproduct","redirect","setredirect","newProduct","preventDefault","method","headers","body","margin","placeholder","onChange","value","required","allOptions","undefined","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","headCount","temp","tempcount","length","quantity","checkIfExist","connect","dispatch","newUser","userToSend","user","newCount","countToSend","count","newBasket","basketToSend","basket","newOrder","orderToSend","order","firstname","lastname","email","password","setuser","orderID","guestID","olduser","setolduser","isLogged","setisLogged","setuserToSend","pathname","onSubmit","data","status","removeItem","update","alert","loginUser","login","state","userName","isExpanded","setisExpanded","tempUser","handleToggle","exact","icon","faShoppingBag","faBars","faTimes","Change","updateProduct","setupdateProduct","location","idProduct","proprietes","duration","transitionDuration","infinite","indicators","arrows","Slideshow","picList","slideList","imgSource","alt","paddingTop","Slide","href","About","CollecSlide","fw19picList","ss20picList","collectionToShowValue","setcount","listToCheck","collectionToShowID","goNext","goBack","setshow","faChevronLeft","faChevronRight","Collection","showCollection","setshowCollection","fullScreen","setfullScreen","imgToPass","setimgToPass","showFullScreen","fw19List","ss20List","faBolt","auMillieme","nombre","Math","round","userID","totalCart","settotalCart","totalProdQty","settotalProdQty","deleteproduct","updateQty","qty","size","faMinus","faPlus","class","faTrashAlt","display","justifyContent","flexDirection","PopUp","toShop","settoShop","toCart","settoCart","text","ProductSlide","arrayToDisplay","currentBasket","setcurrentBasket","imgToDisplay","setimgToDisplay","productID","productToBasket","setproductToBasket","showPopup","setshowPopup","match","params","description","addProduct","faArrowLeft","PopUpMsg","faPaperPlane","Contact","message","form","setform","msgSend","setmsgSend","height","fontSize","marginLeft","handleForm","guest_id","userAssociate","setuserAssociate","userEmail","popUp","setpopUp","address","optional","zipcode","city","phone","newsletter","guest","setguest","setguestID","sendForm","pattern","checked","formatDate","date","birthday","Date","date1","getDate","date2","getMonth","date3","getFullYear","orders","setorders","setname","getOrder","document","getElementById","showLess","orderList","fontWeight","validationdate","totalorder","billingaddress","marginBottom","marginTop","compagnyname","billingoptional","billingzipcode","billingcity","billingstate","faArrowRight","MySettings","showBilling","setshowBilling","gender","billingname","statut","inscription","subscribe","CARD_ELEMENT_OPTIONS","base","color","fontFamily","fontSmoothing","invalid","iconColor","stripeTokenHandler","token","paymentData","stripe","useStripe","elements","useElements","cardElement","setcardElement","handleSubmit","event","card","getElement","CardElement","createToken","result","retourBack","updateData","setPaymentValid","options","disabled","CheckoutShipForm","showFormShip","setshowFormShip","showFormBill","setshowFormBill","noship","setnoShip","storeFormShip","setstoreFormShip","storeFormBill","setstoreFormBill","submitFormShipping","typeForm","setnewUser","setValidShowPayment","submitFormAddress","stripePromise","loadStripe","finalBasket","setfinalBasket","showPayment","setshowPayment","payValid","setpayValid","MyCheckoutForm","SettingsForm","isSend","setisSend","submitForm","valueAsDate","UpdatePassword","current","new","confirm","setpassword","nomatch","setnomatch","nomatchCurrent","setnomatchCurrent","library","add","fas","countBasket","setcountBasket","path","component","HomePage","Products","Logout","Login","Cart","ProductCard","Checkout","ShippingInfo","MyAccount","Payment","Success","Boolean","hostname","store","createStore","combineReducers","action","push","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b1e9f32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\n\n// function mapStateToProps(state) {\n//   console.log('home page get user', state)\n//   return { userName: state.user }\n// }\nconst Product = (props) => {\n\n  const [productList, setproductList] = useState([]);\n\n  // const [basketList, setbasketList] = useState([]);\n\n  const [storeId, setstoreId] = useState('');\n\n  //je recupere ma liste de produits\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('/api/product')\n        .then(response => response.json())\n        .then(response => setproductList(response.products))\n        .catch(error => console.log(\"erreur fetch\", error))\n    }\n    fetchData()\n  }, []);\n\n  //j'ajoute un produit dans mon panier\n  // var addProduct = async (arg) => {\n  //   let basket = [...basketList];\n  //   basket.push(arg);\n  //   setbasketList(basket);\n  //   console.log(basketList);\n  //   await props.newProduct(basketList);\n  // };\n  let goToProdCard = async (arg) => {\n    setstoreId(arg);\n  };\n\n\n  var prodList = productList.map((product, i) => {\n\n    return (\n      <span style={{ float: \"left\" }} className='products' key={i}  >\n        <img onClick={(e) => { console.log(e.target.id); goToProdCard((e.target.id)) }} id={product._id} className=\"productPic\" src={product.img[0].ref} />\n        <h4>{product.name}</h4>\n        <span>\n          <h5>{product.price}€</h5>\n          {/* <h5>Type de produit : {product.type}</h5> */}\n        </span>\n        {/* <div>\n          <button className='change-btn' onClick={(e) => { addProduct(e.target.value) }} value={product._id}>Ajouter au panier</button>\n        </div> */}\n      </span >\n    )\n  });\n\n  if (storeId === '') {\n    return (\n      <div className=\"blocProduct content\">\n        {/* <div>\n          <h3 className=\"user\">Bienvenue {props.userName}</h3>\n        </div> */}\n        {prodList}\n      </div >\n    );\n  } else {\n    return (\n      <Redirect to={`/prodcard/${storeId}`} />\n    )\n  }\n\n};\n\n\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     newProduct: function (productsToSend) {\n//       console.log('jes suis dans le mapdispatch', productsToSend)\n//       dispatch({ type: 'setBasket', product: productsToSend })\n//     }\n//   }\n// }\n\n//export default connect(mapStateToProps, mapDispatchToProps)(Product);\nexport default Product;\n\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Form = (props) => {\n\n\tconst [product, setproduct] = useState({\n\t\tname: '',\n\t\tprice: 0,\n\t\ttype: '',\n\t\tenabled: true\n\t});\n\tconst [redirect, setredirect] = useState(true);\n\n\t//j'ajoute un nouveau produit dans ma bdd : \n\tconst newProduct = async (e) => {\n\n\t\te.preventDefault();\n\t\tlet url = '/api/addproduct';\n\n\t\tawait fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n\t\t\tbody: `name=${product.name}&price=${product.price}&type=${product.type}&enabled=${product.enabled}`\n\t\t}).then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\treturn <Redirect to={`/`} />;\n\t\t\t})\n\t\tsetredirect(false);\n\t\tconsole.log(\"j'ajoute ce produit : \", product);\n\t};\n\n\n\tif (redirect) {\n\t\treturn (\n\t\t\t<div id=\"form\">\n\t\t\t\t<form className=\"new-product\">\n\t\t\t\t\t<h2 style={{ margin: 30 }}>Ajouter un produit</h2>\n\t\t\t\t\t<div className='form'>\n\n\t\t\t\t\t\t<h5 className='inputname'>Nom :</h5>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"Product-input\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tplaceholder=\"Nom du produit\"\n\t\t\t\t\t\t\tonChange={(e) => setproduct({ ...product, name: e.target.value })}\n\t\t\t\t\t\t\tvalue={product.name}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<h5 className='inputname' >Prix :</h5>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tclassName=\"Product-input\"\n\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\tplaceholder=\"Prix du produit\"\n\t\t\t\t\t\t\tonChange={(e) => setproduct({ ...product, price: e.target.value })}\n\t\t\t\t\t\t\tvalue={product.price}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<h5 className='inputname' >Type :</h5>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"Product-input\"\n\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\tplaceholder=\"Type de produit\"\n\t\t\t\t\t\t\tonChange={(e) => setproduct({ ...product, type: e.target.value })}\n\t\t\t\t\t\t\tvalue={product.type}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<input className='button' type=\"submit\" method=\"post\" value=\"Ajouter Produit\" onClick={(e) => newProduct(e)} />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div >\n\t\t);\n\t} else {\n\t\t//si mon produit est bien ajouté je retourne sur le listing :\n\t\treturn <Redirect to=\"/\" />\n\t}\n};\n\nexport default Form;\n\n","\nexport default function allOptions(name) {\n\n    return (name === 'undefined' || name === null || name === undefined || name === '');\n\n}","import React, { useState, useEffect } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};\n\nexport default useLocalStorage;","export default function headCount(temp) {\n    if (temp != null && temp != []) {\n        //console.log('je suis la =', temp)\n        let tempcount = 0;\n        for (var i = 0; i < temp.length; i++) {\n            tempcount = tempcount + temp[i].quantity;\n        }\n        return tempcount;\n    } else {\n        //console.log('je suis ici =', temp)\n        return 0;\n    }\n}","\nexport default function checkIfExist(name) {\n    if (name === 'undefined' || name === null || name === undefined || name === '' || name === false || name === []) {\n        return false;\n    } else {\n        return true;\n    }\n};","import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport allOptions from '../Functions/allOptions';\nimport useLocalStorage from '../Functions/useLocalStore';\nimport headCount from '../Functions/headCount';\nimport checkIfExist from '../Functions/checkIfExist';\n\nconst Login = (props) => {\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n    });\n\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n\n    const [olduser, setolduser] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [isLogged, setisLogged] = useState(false);\n\n    const [userToSend, setuserToSend] = useState('');\n\n    // je cree un nouvel user\n    const login = (e) => {\n        e.preventDefault();\n\n        let url = '/api/newuser';\n        // let body = `orderID=${orderID}&email=${user.email}&password=${user.password}&statut=user`\n        // if (allOptions(orderID)) {\n        //     body = `email=${user.email}&password=${user.password}&statut=user&order=${orderID}`\n        // }\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, //encodage\n            //body: `firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&password=${user.password}`\n            body: `email=${user.email}&password=${user.password}&statut=user&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('hello ============', data.status)\n                if (data.status) {\n                    const update = async () => {\n                        await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        await props.newUser(data.id);\n                        if (checkIfExist(guestID)) {\n                            await window.localStorage.removeItem('guest');\n                        }\n                    }\n\n                    update();\n                    setisLogged(true);\n                } else {\n                    function myFunction() {\n                        alert(\"Un compte est déjà associé à cet email\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n    //je me connecte\n    const loginUser = (e) => {\n        e.preventDefault();\n        let url = '/api/login';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `email=${olduser.email}&password=${olduser.password}&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"hello ======\", data)\n                if (data.status) {\n                    const update = async () => {\n                        await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        await localStorage.setItem('order', JSON.stringify(data.order));\n                        await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                        props.newUser(data.id);\n                        props.newOrder(data.order);\n                        props.newBasket(data.basket);\n                        props.newCount(headCount(data.basket));\n                        if (checkIfExist(guestID)) {\n                            await window.localStorage.removeItem('guest');\n                        }\n                    }\n                    update();\n                    setisLogged(true);\n                } else {\n                    function myFunction() {\n                        alert(\"le mot de passe et l'email ne correspondent pas\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n    if (isLogged) {\n        return <Redirect to={{ pathname: '/', user: userToSend }} />;\n    } else {\n        return (\n            <div className=\"blocSignIn content\">\n                <form className=\"form\" onSubmit={(e) => loginUser(e)}>\n                    <h2>LOG IN</h2>\n                    <span className=\"logContent\">\n                        <label>Email</label>\n                        <input\n                            type=\"email\"\n                            className=\"Login-input\"\n                            name=\"login_email\"\n                            placeholder=\"Votre email\"\n                            onChange={(e) => setolduser({ ...olduser, email: e.target.value })}\n                            value={olduser.email}\n                            required\n                        />\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"Login-input\"\n                            name=\"login_password\"\n                            placeholder=\"Votre mot de passe\"\n                            onChange={(e) => setolduser({ ...olduser, password: e.target.value })}\n                            value={olduser.password}\n                            required\n                        />\n                        <Link className=\"resetPass\">Forgot your password ?</Link>\n                    </span>\n                    <input className=\"button log\" type=\"submit\" method=\"post\" value=\"LOG IN\" />\n                </form>\n                <form className=\"form\" onSubmit={(e) => login(e)}>\n                    <h2>REGISTER</h2>\n                    <span className=\"logContent\">\n                        <h5>If you still don't have a Squillace account, <br></br>use this registration form to join in.</h5>\n                        {/* <label>First Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"firstname\"\n                            placeholder=\"your first name\"\n                            onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                            value={user.firstname}\n                            required\n                        />\n                        <label>Last Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"lastname\"\n                            placeholder=\"your last name\"\n                            onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                            value={user.lastname}\n                            required\n                        /> */}\n                        <label>Email</label>\n                        <input\n                            type=\"email\"\n                            className=\"Login-input\"\n                            name=\"login_email\"\n                            placeholder=\"Votre email\"\n                            onChange={(e) => setuser({ ...user, email: e.target.value })}\n                            value={user.email}\n                            required\n                        />\n                        <label>Password\n                    </label>\n                        <input\n                            type=\"password\"\n                            className=\"Login-input\"\n                            name=\"login_password\"\n                            placeholder=\"Votre mot de passe\"\n                            onChange={(e) => setuser({ ...user, password: e.target.value })}\n                            value={user.password}\n                            required\n                        />\n                    </span>\n                    <input className=\"button log\" type=\"submit\" method=\"post\" value='CREATE ACCOUNT' />\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","import React, { useState, useEffect } from 'react';\n//import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nconst Logout = (props) => {\n\n    useEffect(() => {\n        props.newUser('')\n        window.localStorage.removeItem('user');\n    })\n\n    return (\n\n        <div className='content'>\n            <form className=\"form logoutBloc\">\n                <h2>You're logged Out !</h2>\n                <Link to='/products'>Back to Shopping</Link>\n                <img className=\"slide logout\" id='homeSlide0' src='home/homepic1.jpg'></img>\n            </form>\n        </div>\n    );\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/fontawesome-free-solid';\nimport { faMitten, faTimes, faShoppingBag } from '@fortawesome/free-solid-svg-icons'\nimport checkIfExist from '../Functions/checkIfExist';\n\n\nfunction mapStateToProps(state) {\n    //console.log('home page get user', state)\n    return { userName: state.user }\n}\n\nconst Header = (props) => {\n    const [isExpanded, setisExpanded] = useState(false);\n    const [signModal, setsignModal] = useState(false);\n    const [count, setcount] = useState(0);\n    const [user, setuser] = useState('');\n\n\n    useEffect(() => {\n        let tempUser = JSON.parse(window.localStorage.getItem('user'));\n        console.log('user ==========', JSON.parse(window.localStorage.getItem('user')))\n        if (tempUser != null) {\n            setuser(tempUser);\n        }\n    }, []);\n\n    let handleToggle = (e) => {\n        e.preventDefault();\n        setisExpanded(!isExpanded);\n\n    }\n\n    let signInUp = (e) => {\n        setsignModal(!signModal);\n    }\n\n    return (\n        <header className='header'>\n            <div className='title'>\n                <Link to=\"/\" exact>\n                    <img className=\"logo\" src='/logo.png' />\n                    {/* <h2>Martina Squillace</h2> */}\n                </Link>\n            </div>\n            <div className=\"linksWeb\">\n                <ul className='lienweb'>\n                    {/* <FontAwesomeIcon className=\"linksPhone\" icon={faMitten} /> */}\n                    <li className=\"linkHeader\" ><Link to=\"/about\">About </Link></li>\n                    <li className=\"linkHeader\"\n                    //onClick={e => signInUp(e)}\n                    ><Link to='/collection'>Collection</Link></li>\n                    {/* <span className={`${signModal ? \"signModal\" : \"collapsedModal\"}`} onMouseLeave={e => signInUp(e)}>\n                        <li className=\"linkHeader\" onClick={e => signInUp(e)}><Link>Collection</Link></li>\n                        <Link to=\"/myaccount\" style={{ fontSize: 12 }}>Spring/Summer 20</Link>\n                        <Link to=\"/myaccount\" style={{ fontSize: 12 }}>Fall/Winter 19</Link>\n                    </span> */}\n                    <li className=\"linkHeader\" ><Link to=\"/products\">Shop</Link></li>\n                    <li className=\"linkHeader\" ><Link to=\"/contact\">Contact</Link></li>\n                    {props.user ?\n                        <span className=\"linkHeader\">\n                            <li className=\"linkHeader\" >\n                                <Link to=\"/myaccount\">My Account</Link></li>\n                        </span>\n                        :\n                        <li className=\"linkHeader\" ><Link to=\"/signin\">Sign In</Link></li>}\n                    {/* <li className=\"linkHeader\" ><Link to=\"/signout\">My Account</Link></li> */}\n                    {/* <span className=\"linkHeader\" >\n                            <li className=\"linkHeader\" onMouseOver={e => signInUp(e)} >My Account</li>\n                            <span className={`${signModal ? \"signModal\" : \"collapsedModal\"}`} onMouseLeave={e => signInUp(e)}>\n                                <Link to=\"/myaccount\" style={{ fontSize: 12 }}>My Account</Link>\n                                <Link to=\"/myaccount\" style={{ fontSize: 12 }}>Wishlist</Link>\n                                <Link to=\"/signout\" style={{ fontSize: 12 }}>Log Out</Link>\n                            </span>\n                        </span> */}\n\n                    <li className=\"linkHeader\" onClick={e => handleToggle(e)}>\n                        <Link to=\"/cart\">\n                            <FontAwesomeIcon icon={faShoppingBag} /> ({props.count})\n                        </Link>\n                    </li>\n                    {/* <Link to=\"/form\">\n                        <h2>Ajouter des Produits</h2>\n                    </Link> */}\n                </ul>\n            </div>\n            <nav className=\"linksMobil\" >\n                {!isExpanded ? <FontAwesomeIcon icon={faBars}\n                    className=\"fa-2x menuToogle\"\n                    onClick={e => handleToggle(e)}\n                /> : null}\n                {/* <img src=\"fabar.png\"\n                        className=\"menuToogle\"\n                        onClick={e => handleToggle(e)}\n                    />class=\"fa fa-circle fa-stack-2x\" */}\n                {isExpanded ? <FontAwesomeIcon icon={faTimes}\n                    className=\"fa-2x menuToogle\"\n                    onClick={e => handleToggle(e)}\n                /> : null}\n                {isExpanded ?\n                    <ul className=\"is-expanded\">\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/about\">About </Link></li>\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/collection\">Collection</Link></li>\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/products\">Shop</Link></li>\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/contact\">Contact</Link></li>\n                        {props.user ?\n                            <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/myaccount\">My Account</Link></li>\n                            :\n                            <li className=\"linkHeader\" ><Link to=\"/signin\">Sign In</Link></li>}\n                        {/* <li className=\"linkHeader\" onMouseOver={e => signInUp(e)} >My Account</li>\n                        <span className={`${signModal ? \"signModal\" : \"collapsedModal\"}`} onMouseLeave={e => signInUp(e)}>\n                            <Link to=\"/myaccount\">My Account</Link>\n                            <Link to=\"/signout\" style={{ fontSize: 12 }}>Log Out</Link>\n                        </span> */}\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}>\n                            <Link to=\"/cart\">\n                                <FontAwesomeIcon icon={faShoppingBag} /> ({props.count})\n                        </Link>\n                        </li>\n\n                    </ul> : null}\n            </nav>\n        </header >\n    )\n\n}\n\nexport default connect(mapStateToProps, null)(Header);","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Change = (props) => {\n\n    const [product, setproduct] = useState({\n        id: '',\n        name: '',\n        price: 0,\n        type: ''\n    });\n    const [updateProduct, setupdateProduct] = useState([]);\n    const [redirect, setredirect] = useState(true);\n\n    // je recupere le produit a modifier\n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch(`/api/get-one-product?id=${props.location.idProduct}`)\n                .then(response => response.json())\n                .then(response => {\n                    setproduct({ id: response.products._id, name: response.products.name, price: response.products.price, type: response.products.type })\n                    setupdateProduct({ ...updateProduct, id: response.products._id })\n                })\n                .catch(error => console.log(\"erreur fetch\", error))\n        }\n        fetchData()\n    }, []);\n\n    //je change mon produit\n    var changeProduct = () => {\n        fetch(`/api/changeproduct`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${updateProduct.id}&name=${updateProduct.name}&price=${updateProduct.price}&type=${updateProduct.type}`\n        }).then(response => { setredirect(false) })\n            .catch(error => console.log(\"erreur fetch\", error))\n    }\n    if (redirect) {\n        return (\n            <div id=\"blocHome content\">\n                <div>\n                    <div className='products'>\n                        <div>\n                            <h3>{product.name}</h3>\n                            <h5>Prix : {product.price}€</h5>\n                            <h5>Type de produit : {product.type}</h5>\n                        </div>\n                        <div>\n                            <h5>Remplacer le nom du produit par :</h5>\n                            <input\n                                type=\"text\"\n                                className=\"Product-input\"\n                                name=\"name\"\n                                placeholder={product.name}\n                                onChange={(e) => setupdateProduct({ ...updateProduct, name: e.target.value })}\n                                value={updateProduct.name}\n                            />\n                            <h5>Remplacer le prix du produit par :</h5>\n                            <input\n                                type=\"number\"\n                                className=\"Product-input\"\n                                name=\"price\"\n                                placeholder={product.price}\n                                onChange={(e) => setupdateProduct({ ...updateProduct, price: e.target.value })}\n                                value={updateProduct.price}\n                            />\n                            <h5>Remplacer le type du produit par :</h5>\n                            <input\n                                type=\"text\"\n                                className=\"Product-input\"\n                                name=\"type\"\n                                placeholder={product.type}\n                                onChange={(e) => setupdateProduct({ ...updateProduct, type: e.target.value })}\n                                value={updateProduct.type}\n                            />\n                            <div >\n                                <button className='change-btn'\n                                    onClick={(e) => { changeProduct(e.target.value) }}\n                                    value={product.id}>Modifier Produit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n\n            </div>\n        );\n    } else {\n        return <Redirect to=\"/\" />\n    }\n};\n\nexport default Change;\n","import React, { useState, useEffect } from 'react';\nimport { Slide, slideRef } from 'react-slideshow-image';\n// import img1 from \"../../public/homepic.jpg\";\n// import img2 from \"../../public/homepic1.jpg\";\n// import img3 from \"../../public/homepic2.jpg\";\nconst proprietes = {\n    duration: 5000,\n    transitionDuration: 500,\n    infinite: true,\n    indicators: true,\n    arrows: true\n}\n\nconst Slideshow = () => {\n    const [picList, setpicList] = useState([\n        'homepic.png', 'homepic1.jpg', 'homepic2.jpg', 'homepic3.jpg', 'homepic4.jpg', 'homepic5.jpg', 'homepic6.jpg',\n        //'homepic7.jpg', 'homepic8.jpg',\n        //'homepic9.jpg', 'homepic10.jpg'\n    ]);\n\n    var slideList = picList.map((imgSource, i) => {\n\n        return (\n            <div className=\"each-slide\">\n                <div className=\"containerSlide\">\n                    {/* <div className=\"testSlideLeft\" onClick={(e) => { e.slideRef.goBack() }}> </div>\n                    <div className=\"testSlideRight\" onClick={(e) => { e.slideRef.goNext() }}> </div> */}\n                    <img className=\"slide\" src={`home/${imgSource}`} alt=\"img1\" />\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div >\n\n            <Slide {...proprietes} >\n                {slideList}\n            </Slide>\n        </div>\n    )\n}\n\nexport default Slideshow;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Slideshow from './Slide';\n// import { useMediaQuery } from 'react-responsive';\n\nfunction mapStateToProps(state) {\n    console.log('home page get user HOME', state)\n    return { userName: state.user }\n}\nconst HomePage = (props) => {\n\n    const [picList, setpicList] = useState([\n        'homepic.png', 'homepic1.jpg', 'homepic2.jpg', 'homepic3.jpg', 'homepic4.jpg', 'homepic5.jpg', 'homepic6.jpg',\n        //'homepic7.jpg', 'homepic8.jpg',\n        //'homepic9.jpg', 'homepic10.jpg'\n    ]);\n\n    const [count, setcount] = useState(0);\n    // const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\n    // const isBigScreen = useMediaQuery({ minDeviceWidth: 1824 })\n    // const isTabletOrMobile = useMediaQuery({ maxWidth: 1224 })\n    // const isTabletOrMobileDevice = useMediaQuery({ maxDeviceWidth: 1224 })\n    // const isPortrait = useMediaQuery({ orientation: 'portrait' })\n    // const isRetina = useMediaQuery({ minResolution: '2dppx' })\n    //je passe les photos\n\n    // useEffect(() => {\n    //     var i = 0;\n    //     // var images = { picList };\n    //     var time = 2000;\n    //     changeImg(picList, time, i);\n    // }, []);\n\n\n    let changeImg = (images, time, i) => {\n        document.getElementById(\"slide\").src = images[i];\n        //document.slide.src = images[i];\n        if (i < (images.length - 1)) {\n            i++;\n        } else {\n            i = 0;\n        }\n        setTimeout(changeImg(), time);\n    }\n    var nextPic = (arg) => {\n        if (count <= (picList.length - 2)) {\n            setcount(count + 1)\n        } else {\n            setcount(0);\n        }\n    }\n\n    var prevPic = (arg) => {\n        if (count > 1) {\n            setcount(count - 1)\n        } else {\n            setcount((picList.length - 1))\n        }\n    }\n\n\n    return (\n        <div style={{ paddingTop: 90 }}>\n\n            {/* <div className='slideshow'  > */}\n            <Slideshow />\n            {/* <div className=\"testSlideLeft\" onClick={(e) => { prevPic(e.target.value) }}> </div>\n                <div className=\"testSlideRight\" onClick={(e) => { nextPic(e.target.value) }}> </div>\n                <img className=\"slide\" id='homeSlide0' src={picList[count]}></img> */}\n            {/* </div> */}\n\n            <div className=\"footer\">\n                <a href=\"https://www.facebook.com/martina.squillacedesigner\" target=\"_blanck\" alt=''>\n                    <img src=\"logofbk.png\" className=\"socMedia\" alt='' />\n                </a>\n                <a href=\"https://www.pinterest.it/martinasquillac/\" target=\"_blanck\" alt=''>\n                    <img src=\"logopinterest.png\" className=\"socMedia\" alt='' />\n                </a>\n                <a href=\"https://www.instagram.com/martinasquillace/?hl=fr\" target=\"_blanck\" alt=''>\n                    <img src=\"logoinsta.png\" className=\"socMedia\" alt='' />\n                </a>\n                <a href=\"/contact\" target=\"_blanck\" alt=''>\n                    <img src=\"logomail.png\" className=\"socMedia\" alt='' />\n                </a>\n            </div>\n        </div >\n    );\n\n};\n\nexport default connect(mapStateToProps, null)(HomePage);\n\n","\nimport React, { useState, useEffect } from 'react';\n\nconst About = (props) => {\n\n    // const [picList, setpicList] = useState([\n    //     'homepic.png', 'homepic1.png', 'homepic2.png', 'homepic3.png', 'homepic4.png', 'homepic5.png', 'homepic6.png', 'homepic7.png', 'homepic8.jpg', 'homepic9.jpg', 'homepic10.jpg'\n    // ]);\n\n    // const [count, setcount] = useState(0);\n\n    // var nextPic = (arg) => {\n    //     if (count <= (picList.length - 2)) {\n    //         setcount(count + 1)\n    //     } else {\n    //         setcount(0);\n    //     }\n    // }\n\n    return (\n        <div className=\"about content\">\n            <div className=\"aboutSub\">\n                <img className=\"aboutPic\" src=\"martina.jpg\" alt='' />\n            </div>\n            <div className=\"aboutSub\">\n                <h5 className=\"aboutText\">\n                    Martina Squillace is an Italian Art Director and Stylist based in Paris.<br /><br />\n\n                    After her fashion design studies she has worked with numerous brands troughtout design and commercial departements, where she learned the importance of visual communication, which has become her passion and her work through styling and art direction.<br /><br />\n\n                    Her style, which is characterized by a savage instinct and also an elegant attitude, is the result of continuous cultural and spiritual research.\n                </h5>\n            </div>\n        </div>\n\n    );\n\n};\n\nexport default About;\n\n\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { set } from 'mongoose';\nimport { faShower } from '@fortawesome/fontawesome-free-solid';\n\nconst CollecSlide = (props) => {\n\n    const [fw19picList, setfw19picList] = useState([\n        \"fw19/1.jpg\", \"fw19/2.jpg\", \"fw19/3.jpg\", \"fw19/4.jpg\", \"fw19/5.jpg\", \"fw19/6.jpg\", \"fw19/7.jpg\", \"fw19/8.jpg\", \"fw19/9.jpg\", \"fw19/10.jpg\", \"fw19/11.jpg\", \"fw19/12.jpg\", \"fw19/13.jpg\", \"fw19/14.jpg\", \"fw19/15.jpg\", \"fw19/16.jpg\"\n    ]);\n    const [ss20picList, setss20picList] = useState([\n        \"ss20/1.jpg\", \"ss20/2.jpg\", \"ss20/3.jpg\", \"ss20/4.jpg\", \"ss20/5.jpg\", \"ss20/6.jpg\", \"ss20/7.jpg\", \"ss20/8.jpg\", \"ss20/9.jpg\", \"ss20/10.jpg\", \"ss20/11.jpg\", \"ss20/12.jpg\", \"ss20/13.jpg\", \"ss20/14.jpg\", \"ss20/15.jpg\", \"ss20/16.jpg\"\n    ]);\n    const [count, setcount] = useState(props.collectionToShowValue);\n\n    let listToCheck = props.collectionToShowID === \"fw19\" ? fw19picList : ss20picList\n\n    let goNext = () => {\n        if (count < listToCheck.length - 1) {\n            setcount(count + 1);\n        } else {\n            setcount(0);\n        }\n    }\n    let goBack = () => {\n        if (count !== 0) {\n            setcount(count - 1);\n        } else {\n            setcount(listToCheck.length - 1);\n        }\n    }\n    //const func = (event) => console.log('move', event.type, event.movementX);\n\n    return (\n\n\n        <div className='popupcollec'>\n            <div className='popupinnercollec'>\n                {props.collectionToShowID === \"fw19\" ?\n                    <div>\n                        <FontAwesomeIcon className=\"fa-2x closeIcone\" icon={faTimes} onClick={(e) => props.setshow(false)} />\n                        <FontAwesomeIcon className=\"fa-2x leftIcone\" icon={faChevronLeft} onClick={(e) => goBack()} />\n                        <FontAwesomeIcon className=\"fa-2x rightIcone\" icon={faChevronRight} onClick={(e) => goNext()} />\n                        <img className=\"slidecollec\" src={fw19picList[count]} alt=\"img1\" onClick={(e) => goNext()} />\n                    </div>\n                    : props.collectionToShowID === \"ss20\" ?\n                        <div>\n                            <FontAwesomeIcon className=\"fa-2x closeIcone\" icon={faTimes} onClick={(e) => props.setshow(false)} />\n                            <FontAwesomeIcon className=\"fa-2x leftIcone\" icon={faChevronLeft} onClick={(e) => goBack()} />\n                            <FontAwesomeIcon className=\"fa-2x rightIcone\" icon={faChevronRight} onClick={(e) => goNext()} />\n                            <img className=\"slidecollec\" src={ss20picList[count]} alt=\"img1\"\n                                //onMouseMove={func}\n                                onClick={(e) => goNext()} />\n                        </div>\n                        : null}\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default CollecSlide;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBolt } from '@fortawesome/fontawesome-free-solid';\nimport CollecSlide from './CollecSlide';\n\nconst Collection = (props) => {\n    const [showCollection, setshowCollection] = useState(false)\n    const [fullScreen, setfullScreen] = useState(false)\n    const [imgToPass, setimgToPass] = useState({\n        value: '',\n        id: ''\n    })\n\n    const [fw19picList, setfw19picList] = useState([\n        \"fw19/1.jpg\", \"fw19/2.jpg\", \"fw19/3.jpg\", \"fw19/4.jpg\", \"fw19/5.jpg\", \"fw19/6.jpg\", \"fw19/7.jpg\", \"fw19/8.jpg\", \"fw19/9.jpg\", \"fw19/10.jpg\", \"fw19/11.jpg\", \"fw19/12.jpg\", \"fw19/13.jpg\", \"fw19/14.jpg\", \"fw19/15.jpg\", \"fw19/16.jpg\"\n    ]);\n    const [ss20picList, setss20picList] = useState([\n        \"ss20/1.jpg\", \"ss20/2.jpg\", \"ss20/3.jpg\", \"ss20/4.jpg\", \"ss20/5.jpg\", \"ss20/6.jpg\", \"ss20/7.jpg\", \"ss20/8.jpg\", \"ss20/9.jpg\", \"ss20/10.jpg\", \"ss20/11.jpg\", \"ss20/12.jpg\", \"ss20/13.jpg\", \"ss20/14.jpg\", \"ss20/15.jpg\", \"ss20/16.jpg\"\n    ]);\n\n    let showFullScreen = (id, value) => {\n        console.log(id, value)\n        setimgToPass({ value: value, id: id });\n        setfullScreen(true);\n    }\n\n\n    let fw19List = fw19picList.map((imgSource, i) => {\n        return (\n            <img className=\"collecPic\" src={imgSource} alt='' onClick={(e) => showFullScreen(\"fw19\", i)} />\n        )\n    })\n\n    let ss20List = ss20picList.map((imgSource, i) => {\n        return (\n            <img className=\"collecPic\" src={imgSource} alt='' onClick={(e) => showFullScreen(\"ss20\", i)} />\n        )\n    })\n    return (\n        <div className=\"collection content\">\n            <div className=\"collecSeason\">\n                <h5 className=\"season\" value=\"fw19\" onClick={(e) => { setshowCollection(true) }}>Fall/Winter 19</h5>\n                <FontAwesomeIcon className=\"season\" icon={faBolt} />\n                <h5 className=\"season\" value=\"ss20\" onClick={(e) => { setshowCollection(false) }}>Spring/Summer 20</h5>\n            </div>\n\n            {showCollection ?\n                <div>\n                    {fw19List}\n                </div>\n                : <div>\n                    {ss20List}\n                </div>}\n            {fullScreen ? <CollecSlide collectionToShowID={imgToPass.id} collectionToShowValue={imgToPass.value} setshow={setfullScreen} /> : null}\n\n            {/* <div>\n                <img className=\"collecPic\" src=\"marti1.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti2.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti3.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti4.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti5.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti6.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti7.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti8.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti9.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti10.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti11.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti12.jpg\" alt='' />\n            </div> */}\n        </div >\n\n    );\n\n};\n\nexport default Collection;\n\n\n","function auMillieme(nombre) {\n    return Math.round(1000 * nombre) / 1000;\n};\n\nexport default auMillieme;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport auMillieme from '../../Functions/roundNum';\nimport updatePriceQty from '../../Functions/updateCart';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport headCount from '../../Functions/headCount';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPlus, faMinus } from '@fortawesome/fontawesome-free-solid';\n\nfunction mapStateToProps(state) {\n    //console.log('Cart get user', state)\n    return { basket: state.basket }\n}\n\nconst Cart = (props) => {\n    const [productList, setproductList] = useState([]);\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [totalCart, settotalCart] = useState(0);\n    const [totalProdQty, settotalProdQty] = useState(0);\n\n    const [storeId, setstoreId] = useState('');\n\n    useEffect(() => {\n        //console.log('PROPS', props.prodList)\n        //setproductList(props.basket)\n        //console.log('JE RECOIS DANS LE CART', productList);\n        //console.log('calcul prix', totalProdQty)\n\n        const fetchData = async () => {\n\n            let url = `/api/cart`\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `orderID=${orderID}`\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status) {\n                        setproductList(data.basket);\n                        //settotalCart(data.totalCart);\n                        console.log('je verifie que je recupere le bon panier: ', data.basket)\n                        settotalCart(data.totalCart);\n                        settotalProdQty(headCount(data.basket));\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                })\n                .catch(error => console.log(\"erreur fetch\", error));\n        }\n        fetchData();\n    }, []);\n\n    //supprimer du panier \n    let deleteproduct = async (id) => {\n        let url = `/api/delete-product-from-order`\n        await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `orderID=${orderID}&_id=${id}`\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === true) {\n                    //settotalCart(data.totalCart);\n                    console.log('je verifie le retour du back : ', data)\n                    setproductList(data.basket);\n                    settotalCart(data.totalCart);\n                    settotalProdQty(headCount(data.basket));\n                    props.newBasket(data.basket);\n                    props.newCount(headCount(data.basket));\n\n                    localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                    // } else if (data.status === 'deleteorder') {\n                    //     console.log('je passe dans elseif : ', data)\n                    //     setproductList(data.basket);\n                    //     settotalCart(data.totalCart);\n                    //     settotalProdQty(headCount(data.basket));\n                    //     props.newBasket(data.basket);\n                    //     props.newCount(headCount(data.basket));\n                    //     localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                    //     localStorage.removeItem('order');\n                } else {\n                    console.log('error')\n                    //CREER UN MESSAGE DERREUR\n\n                }\n            });\n\n    }\n\n    // mettre a jour la quantité d'un article\n    let updateQty = async (qty, id, size) => {\n        console.log(qty, id, size)\n        let url = `/api/update-qty-to-order`\n        await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `orderID=${orderID}&_id=${id}&qty=${qty}&size=${size}`\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status) {\n                    //settotalCart(data.totalCart);\n                    console.log('je verifie que mes prix concordent ici le retour du back : ', data)\n                    setproductList(data.basket);\n                    settotalCart(data.totalCart);\n                    settotalProdQty(headCount(data.basket));\n                    props.newBasket(data.basket);\n                    props.newCount(headCount(data.basket));\n\n                    localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                } else {\n                    setproductList([])\n                    console.log('error')\n\n                    //CREER UN MESSAGE DERREUR\n                }\n            });\n\n    }\n\n    var prodList = productList.map((product, i) => {\n        return (\n            <div className='productsCart' key={i}>\n                <div className='productsCartPicTitle'>\n                    <img className=\"collecPic cartPic\" src={product.img} />\n\n                    <h5 className='productsNameCart'>{product.name}</h5>\n                </div>\n                <div className='productsCartSub'>\n                    <div>\n                        <h5 className='productsDetailL'>Price :</h5>\n                        <h5 className='productsDetailR'>{product.price / product.quantity}€</h5>\n                    </div>\n                    <div>\n                        <h5 className='productsDetailL'>Size :</h5>\n                        <h5 className='productsDetailR'>{product.size}</h5>\n                    </div>\n                    <div className='productsQty'>\n                        <h5 className='productsDetailL'>Quantity :</h5>\n                        <div className='productsDetailRQty'>\n                            <FontAwesomeIcon\n                                icon={faMinus} className='qty-btn less' onClick={(e) => updateQty(\"less\", product._id, product.size)} />\n                            <h5 className='productsDetailQty'>{product.quantity} </h5>\n                            <FontAwesomeIcon\n                                icon={faPlus} className='qty-btn add' onClick={(e) => updateQty(\"add\", product._id, product.size)} />\n                        </div>\n                    </div>\n\n                </div>\n\n                <h5 className='productsTotalPrice'>Total : {product.price}€</h5>\n                <i class=\"far fa-trash-alt\"></i>\n                <FontAwesomeIcon className='delete-btn'\n                    icon={faTrashAlt}\n                    onClick={(e) => deleteproduct(product._id)}\n                    value={product._id} />\n                {/* <button className='delete-btn'\n                    onClick={(e) => deleteproduct(e.target.value)}\n                    value={product._id}>Delete Article</button> */}\n            </div >\n        )\n\n    });\n\n    if (productList.length > 0) {\n        return (\n            <div className=\"Cart content\">\n                <div className=\"blocCart\">\n                    {prodList}\n                    {/* <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                        <h5>{totalProdQty} items</h5>\n                        <h3>Total : {totalCart}€</h3>\n                    </div> */}\n                </div >\n                <div className=\"totalCart\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <h5 className=\"marg\">SHOPPING BAG TOTAL ({totalProdQty} items)</h5>\n                    {checkIfExist(userID) ? null :\n                        <div>\n                            <h5 className=\"marg\">Log in to order with your account</h5>\n                            <Link to=\"/signin\" className=\"cartLink\">\n                                <button className=\"btnCart\" >SIGN IN</button>\n                            </Link>\n                        </div>\n                    }\n                    <div className=\"totalCartElments\">\n                        <div className=\"totalCartElmt L\">\n                            <h5 className=\"marg\" >Order value :</h5>\n                            <h5 className=\"marg\" >Shipping :</h5>\n                            <h5 className=\"marg\" >TOTAL :</h5>\n                        </div>\n                        <div className=\"totalCartElmt R\">\n                            <h5 className=\"marg\" >{auMillieme(totalCart)}€</h5>\n                            <h5 className=\"marg\" >FREE</h5>\n                            <h5 className=\"marg\" >{auMillieme(totalCart)}€</h5>\n                        </div>\n                    </div>\n                    <Link to={(checkIfExist(userID) || checkIfExist(guestID)) ? \"/payment\" : \"/checkout\"} className=\"cartLink\">\n                        <button className=\"btnCart checkBtn\">CONTINUE TO CHECKOUT</button>\n                    </Link>\n                </div>\n            </div >\n        );\n    } else {\n        return (\n            <div className='content' style={{ flexDirection: 'column', margin: 20 }}>\n                <h3 className='emptyCart'>YOUR SHOPPING BAG IS EMPTY!<br></br><br></br>\n                    Sign in to save or access saved items in your shopping bag.</h3>\n                <Link to=\"/signin\">\n                    <h3 style={{ margin: 20 }} >Sign In</h3>\n                </Link>\n                <img className=\"emptyCartPic\" src='home/homepic1.jpg' />\n            </div >\n        )\n    }\n\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        //   newUser: function (userToSend) {\n        //     console.log('je suis dans le NEW USER REDUCER', userToSend)\n        //     dispatch({ type: 'setUser', user: userToSend })\n        //   },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        // newOrder: function (orderToSend) {\n        //     console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n        //     dispatch({ type: 'setOrder', order: orderToSend })\n        // }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n//export default Cart;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PopUp = (props) => {\n    const [toShop, settoShop] = useState(false);\n    const [toCart, settoCart] = useState(false);\n\n    if (toShop) {\n        return (\n            <Redirect to='/products' />\n        );\n    } else if (toCart) {\n        return (\n            <Redirect to='/cart' />\n        );\n    } else {\n        return (\n            <div className='popup'>\n                <div className='popupinner'>\n                    <h4>{props.text}</h4>\n                    <p>was successfully added to your shopping cart</p>\n                    <div>\n                        <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>CONTINUE SHOPPING</button>\n                        <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default PopUp;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { set } from 'mongoose';\nimport { faShower } from '@fortawesome/fontawesome-free-solid';\n\nconst ProductSlide = (props) => {\n\n    const [picList, setpicList] = useState(props.arrayToDisplay);\n\n    const [count, setcount] = useState(props.collectionToShowID);\n\n    let goNext = () => {\n        if (count < picList.length - 1) {\n            setcount(count + 1);\n        } else {\n            setcount(0);\n        }\n    }\n    let goBack = () => {\n        if (count !== 0) {\n            setcount(count - 1);\n        } else {\n            setcount(picList.length - 1);\n        }\n    }\n\n    return (\n\n\n        <div className='popupprod'>\n            <div>\n                <FontAwesomeIcon className=\"fa-2x closeIcone\" icon={faTimes} onClick={(e) => props.setshow(false)} />\n                <FontAwesomeIcon className=\"fa-2x leftIcone\" icon={faChevronLeft} onClick={(e) => goBack()} />\n                <FontAwesomeIcon className=\"fa-2x rightIcone\" icon={faChevronRight} onClick={(e) => goNext()} />\n                <img className=\"slideproduct\" src={`/${picList[count].ref}`} alt=\"img1\" onClick={(e) => goNext()} />\n            </div>\n        </div>\n    )\n}\n\nexport default ProductSlide;","import React, { useState, useEffect } from 'react';\nimport Popup from '../../Components/PopUpAddProduct';\n// import { Redirect } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport headCount from '../../Functions/headCount';\nimport ProductSlide from '../ProductSlide';\n//import { Slide, slideRef } from 'react-slideshow-image';\n// const proprietes = {\n//     duration: 10000,\n//     transitionDuration: 500,\n//     infinite: true,\n//     indicators: true,\n//     // arrows: true\n// }\n\n// function mapStateToProps(state) {\n//     console.log('shop page get store', state)\n//     return { orderID: state.orderID }\n// }\n\nconst ProductCard = (props) => {\n\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    //const [orderID, setorderID] = useState(props.orderID);\n\n    const [product, setproduct] = useState({\n        id: '',\n        name: '',\n        price: 0,\n        type: '',\n        img: '',\n    });\n    const [currentBasket, setcurrentBasket] = useState([]);\n    const [count, setcount] = useState(0);\n    const [imgToDisplay, setimgToDisplay] = useState([\n        { ref: '' }\n    ]);\n    const [productToBasket, setproductToBasket] = useState({\n\n        productID: '',\n        name: '',\n        price: 0,\n        type: '',\n        img: '',\n        quantity: 1,\n        size: ''\n    });\n    const [showPopup, setshowPopup] = useState(false);\n\n    const [fullScreen, setfullScreen] = useState(false)\n    const [imgToPass, setimgToPass] = useState('')\n\n    //je recupere mon produit\n    useEffect(() => {\n        // for (var i = 0; i > props.basket.length; i++) {\n        //     setcurrentBasket([...currentBasket, props.basket[i]]);\n        //     console.log(\"update etat store\", currentBasket)\n        // }\n        //setcurrentBasket(JSON.parse(window.localStorage.getItem('order')));\n\n        // props.newOrder(orderID)\n        const fetchData = async () => {\n\n            let url = `/api/get-one-product`\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${props.match.params.id}&orderID=${orderID}`\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('retour de get one', data)\n                    // let arrayTemp = data.products.img\n                    // let array = arrayTemp.split(' ');\n                    setimgToDisplay(data.products.img);\n                    // console.log('arary', array)\n                    setproduct({ productID: data.products._id, name: data.products.name, price: data.products.price, description: data.products.description, type: data.products.type, img: data.products.img })\n                    setproductToBasket({ ...productToBasket, productID: data.products._id, name: data.products.name, type: data.products.type, description: data.products.description, img: data.products.img[0].ref, price: data.products.price })\n                    if (data.orderID === null) {\n                        console.log('test', imgToDisplay[count])\n\n                        setcurrentBasket(null);\n                    } else {\n                        console.log('ce que jenregistre comme panier en cours', data.basket)\n\n                        //await localStorage.setItem('order', JSON.stringify(data.orderID));\n                        setcurrentBasket(data.basket);\n                    }\n                })\n                .catch(error => console.log(\"erreur fetch\", error));\n        }\n        fetchData();\n    }, []);\n\n    var addProduct = async (e) => {\n        e.preventDefault();\n\n        if (checkIfExist(currentBasket)) {\n            //j'ai un panier en cours, j'udpate la quantité et le prix de mon product ==== UPDATE ORDER\n            let url = '/api/add-product-to-order';\n            console.log('click')\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}&orderID=${orderID}&tempStore=${JSON.stringify(productToBasket)}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data)\n                    if (data.status) {\n\n                        //await localStorage.setItem('user', JSON.stringify(data.id));\n                        localStorage.setItem('order', JSON.stringify(data.orderID));\n                        localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                        //props.newUser(data.id);\n                        props.newOrder(data.orderID);\n                        props.newBasket(data.basket);\n                        props.newCount(headCount(data.basket));\n\n                        //localStorage.setItem('order', JSON.stringify(data.orderID));\n                        setshowPopup(!showPopup);\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                });\n\n        } else {\n            //je crée un order =========== CREATE NEW ORDER\n            let url = '/api/createorder';\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}&productID=${productToBasket.productID}&name=${productToBasket.name}&price=${productToBasket.price}&type=${productToBasket.type}&img=${productToBasket.img}&quantity=${productToBasket.quantity}&size=${productToBasket.size}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data.status)\n                    if (data.status) {\n                        const update = async () => {\n                            //await localStorage.setItem('user', JSON.stringify(data.id));\n                            await localStorage.setItem('order', JSON.stringify(data.orderID));\n                            await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                            // props.newUser(data.id);\n                            await props.newOrder(data.orderID);\n                            await props.newBasket(data.basket);\n                            await props.newCount(headCount(data.basket));\n                            setshowPopup(!showPopup);\n                        }\n                        update();\n\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                });\n        }\n    };\n\n    let goNext = () => {\n        if (count < imgToDisplay.length - 1) {\n            setcount(count + 1);\n        } else {\n            setcount(0);\n        }\n    }\n    let goBack = () => {\n        if (count !== 0) {\n            setcount(count - 1);\n        } else {\n            setcount(imgToDisplay.length - 1);\n        }\n    }\n\n    let showFullScreen = (id) => {\n        setimgToPass(id);\n        setfullScreen(true);\n    }\n\n    // var slideList = imgToDisplay.map((imgSource, i) => {\n\n    //     return (\n\n\n    //         <img className=\"productsPic\" src={`/${imgSource.ref}`} alt=\"img1\" onClick={(e) => showFullScreen(i)} />\n\n\n    //         //      <div className=\"each-slide\">\n    //         //      <div >\n    //         //          {/* <div className=\"testSlideLeft\" onClick={(e) => { e.slideRef.goBack() }}> </div>\n    //         //          <div className=\"testSlideRight\" onClick={(e) => { e.slideRef.goNext() }}> </div> */}\n    //         //          <img className=\"productsPic\" src={`/${imgSource}`} alt=\"img1\" />\n    //         //      </div>\n    //         //  </div>\n    //     )\n    // })\n\n    return (\n        <div className='content'>\n            {fullScreen ? <ProductSlide className=\"hideOnPhone\" collectionToShowID={count} setshow={setfullScreen} arrayToDisplay={imgToDisplay} /> : null}\n\n            <a href='/products' className=\"backToSearch\">\n                <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                <h5 className=\"backCollec\" >Back to Collection</h5>\n            </a>\n\n            <div className=\"productCard\">\n                <FontAwesomeIcon className=\"fa-2x leftProdCard\" icon={faChevronLeft} onClick={(e) => goBack()} />\n                <img className='productsPic' src={`/${imgToDisplay[count].ref}`} onClick={(e) => showFullScreen(`/${imgToDisplay[count].ref}`)} />\n                {/* {checkIfExist(imgToDisplay[count + 1]) ? <img className='productsPic' src={`/${imgToDisplay[count + 1]}`} /> : null} */}\n                <FontAwesomeIcon className=\"fa-2x rightProdCard\" icon={faChevronRight} onClick={(e) => goNext()} />\n                {/* <Slide {...proprietes} className=\"productSlide\">\n                    {slideList}\n                </Slide> */}\n                {/* <div className=\"productSlide\">\n                    {slideList}\n                </div> */}\n                {showPopup ?\n                    <Popup\n                        text={product.name}\n                    />\n                    : null\n                }\n\n                <div className='productsText'>\n                    <h3>{product.name}</h3>\n                    <div>\n                        <h5>{product.price}€</h5>\n                        <h5>{product.type}</h5>\n                        <h5>{product.description}</h5>\n                        <form onSubmit={(e) => addProduct(e)} value=\"Add to cart\">\n                            <label className='sizeInput'>Size : </label>\n                            <select\n                                onChange={(e) => setproductToBasket({ ...productToBasket, size: e.target.value })} required>\n                                <option value=\"\">--</option>\n                                <option value=\"S\">S</option>\n                                <option value=\"M\">M</option>\n                                <option value=\"L\">L</option>\n                            </select>\n                            {/* <label>Quantity :</label> */}\n                            {/* <input className='inputCard' type='hidden' min=\"0\" placeholder='1'\n                                onSubmit={(e) => {\n                                    console.log(e.target.value);\n                                    setproductToBasket({ ...productToBasket, quantity: parseFloat(e.target.value), price: auMillieme(e.target.value * product.price) })\n                                }}\n                                value=\"1\" required></input> */}\n                            <input type=\"submit\" className='add-btn' value=\"Add to Cart\" />\n                        </form>\n                    </div>\n\n                </div >\n            </div >\n        </div>\n    );\n\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        //   newUser: function (userToSend) {\n        //     console.log('je suis dans le NEW USER REDUCER', userToSend)\n        //     dispatch({ type: 'setUser', user: userToSend })\n        //   },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n}\nexport default connect(null, mapDispatchToProps)(ProductCard);\n//export default ProductCard;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst PopUpMsg = (props) => {\n    const [toShop, settoShop] = useState(false);\n    const [toCart, settoCart] = useState(false);\n\n    if (toShop) {\n        return (\n            <Redirect to='/' />\n        );\n        // } else if (toCart) {\n        //     return (\n        //         <Redirect to='/cart' />\n        //     );\n    } else {\n        return (\n            <div className='popup'>\n                <div className='popupinner'>\n                    <div className=\"popupmsg\" style={{ display: \"flex\" }}>\n                        <FontAwesomeIcon className=\"fa-2x icon\" icon={faPaperPlane} />\n                        <p>Thank You ! We will answer you shortly</p>\n                        <FontAwesomeIcon className=\"fa-2x icon\" icon={faPaperPlane} />\n                    </div>\n                    <div>\n                        <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>OK</button>\n                        {/* <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button> */}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default PopUpMsg;","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PopUpMsg from '../Components/PopUpMsgSent';\n\nconst Contact = () => {\n\n    const [form, setform] = useState({\n        name: '',\n        email: '',\n        message: ''\n    });\n\n    const [msgSend, setmsgSend] = useState(false);\n\n    var handleForm = (e) => {\n        e.preventDefault();\n        // if (form.name === '' || form.email === '' || form.message === '') {\n        //     setshowPopupFail({ show: true, field: 'contact' })\n        // } else {\n        console.log('envoi formulaire', form);\n        fetch('/api/contact', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `name=${form.name}&email=${form.email}&message=${form.message}`\n        }).then(function (data) { console.log('this message is saved', data); setmsgSend(true) }).catch(function (error) { console.log('error', error) });\n        // }\n        // //<input type='button' onclick=\"self.location.href='mailto:moi@chezmoi.ici'\" value=\"vas y envoie toi un mail avec ta messagerie\" />\n    }\n    // if (msgSend) {\n    //     return <Redirect to=\"/\" />\n    // } else {\n    return (\n        <div className='content'>\n            <div className=\"contactTitle\" style={{ height: 60 }}>\n                <h3 style={{ fontSize: 20, marginLeft: 20 }}>Contact Us</h3>\n            </div>\n            <div className=\"contactBloc\">\n                <img className=\"contactPic\" src=\"/contact.jpg\" alt='' />\n                <form className=\"contactForm\" onSubmit={(e) => handleForm(e)}>\n                    {msgSend ?\n                        <PopUpMsg\n                        />\n                        : null\n                    }\n                    <input\n                        className='inputForm'\n                        type='text'\n                        placeholder='Name'\n                        onChange={(e) => setform({ ...form, name: e.target.value })}\n                        required></input>\n                    <input\n                        className='inputForm'\n                        type='email'\n                        placeholder='Email'\n                        onChange={(e) => setform({ ...form, email: e.target.value })}\n                        required></input>\n                    <textarea\n                        className='inputForm inputArea'\n                        placeholder='Message'\n                        onChange={(e) => setform({ ...form, message: e.target.value })}\n                        required />\n                    <button className='contactButton' type=\"submit\" >Send</button>\n                </form>\n            </div>\n        </div>\n    )\n    //}\n}\n\nexport default Contact;","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport headCount from '../../Functions/headCount';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport checkIfExist from '../../Functions/checkIfExist';\n\nfunction mapStateToProps(state) {\n    console.log('home page get user', state.basket)\n    return { prodList: state.basket }\n}\n\nconst Checkout = (props) => {\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n    });\n\n    const [olduser, setolduser] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [isLogged, setisLogged] = useState(false);\n\n    const [guestID, setguestID] = useState({\n        guest_id: '',\n        status: false\n    })\n    const [userAssociate, setuserAssociate] = useState();\n\n    //const [userToSend, setuserToSend] = useState('');\n\n    //je recupere mon produit\n    useEffect(() => {\n        console.log(\"je recois quoi ? ?? \", props.prodList);\n        const fetchData = async () => {\n            let url = '/api/get-user-from-order';\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `orderID=${orderID}&userID=${userID}`\n            })\n                .then((response) => response.json())\n                .then(async (data) => {\n                    if (checkIfExist(data.userEmail)) {\n                        console.log('retour checkout', data);\n                        setolduser({ ...olduser, email: data.userEmail });\n                        setuserAssociate(true);\n                    } else {\n                        setuserAssociate(false);\n                    }\n                });\n        }\n        fetchData();\n\n\n    }, []);\n\n    //je me connecte\n    //je me connecte\n    const loginUser = (e) => {\n        e.preventDefault();\n        let url = '/api/login';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `email=${olduser.email}&password=${olduser.password}&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"hello ======\", data)\n                if (data.status) {\n                    const update = async () => {\n                        //await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        await localStorage.setItem('order', JSON.stringify(data.order));\n                        await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                        props.newUser(data.id);\n                        props.newOrder(data.order);\n                        props.newBasket(data.basket);\n                        props.newCount(headCount(data.basket));\n                    }\n                    update();\n                    setisLogged(true);\n\n                } else {\n                    function myFunction() {\n                        alert(\"le mot de passe et l'email ne correspondent pas\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n    // je cree un nouvel user\n    const login = (e) => {\n        e.preventDefault();\n        let url = '/api/newuser';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, //encodage\n            //body: `firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&password=${user.password}`\n            body: `email=${user.email}&password=${user.password}&statut=user&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('hello ============', data.status)\n                if (data.status) {\n                    const update = async () => {\n                        //await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        props.newUser(data.id);\n                    }\n                    update();\n                    setisLogged(true);\n                } else {\n                    function myFunction() {\n                        alert(\"Un compte est déjà associé à cet email\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n    if (isLogged) {\n        return (\n            <Redirect to={{\n                pathname: '/payment',\n                user: { id: guestID.guest_id, status: 'user' }\n            }} />\n        )\n    } else {\n        return (\n            <div className=\"blocCheckout\">\n                <form className={userAssociate ? \"form loginCheckoutBIG\" : \"form loginCheckout\"} onSubmit={(e) => loginUser(e)} >\n\n                    {userAssociate ? <h2>Welcome Back ! <br></br><br></br>Log In</h2> : <h2>LOG IN</h2>}\n                    <span className=\"logContent\">\n                        <label>Email</label>\n                        <input\n                            className=\"Login-input\"\n                            name=\"login_email\"\n                            placeholder=\"Votre email\"\n                            onChange={(e) => setolduser({ ...olduser, email: e.target.value })}\n                            value={olduser.email}\n                            required\n                        />\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"Login-input\"\n                            name=\"login_password\"\n                            placeholder=\"Votre mot de passe\"\n                            onChange={(e) => setolduser({ ...olduser, password: e.target.value })}\n                            value={olduser.password}\n                            required\n                        />\n                        <Link className=\"resetPass\">Forgot your password ?</Link>\n                    </span>\n                    <input className=\"button log\" type=\"submit\" method=\"post\" value=\"LOG IN\" />\n                </form>\n                {userAssociate ? null :\n                    <form className=\"form loginCheckout\" onSubmit={(e) => login(e)}>\n                        <h2>REGISTER</h2>\n                        <span className=\"logContent\">\n                            <h5>If you still don't have a Squillace account, <br></br>use this registration form to join in.</h5>\n                            {/* <label>First Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"firstname\"\n                            placeholder=\"your first name\"\n                            onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                            value={user.firstname}\n                            required\n                        />\n                        <label>Last Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"lastname\"\n                            placeholder=\"your last name\"\n                            onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                            value={user.lastname}\n                            required\n                        /> */}\n                            <label>Email</label>\n                            <input\n                                type=\"email\"\n                                className=\"Login-input\"\n                                name=\"login_email\"\n                                placeholder=\"Votre email\"\n                                onChange={(e) => setuser({ ...user, email: e.target.value })}\n                                value={user.email}\n                                required\n                            />\n                            <label>Password\n                    </label>\n                            <input\n                                type=\"password\"\n                                className=\"Login-input\"\n                                name=\"login_password\"\n                                placeholder=\"Votre mot de passe\"\n                                onChange={(e) => setuser({ ...user, password: e.target.value })}\n                                value={user.password}\n                                required\n                            />\n                        </span>\n                        <input className=\"button log\" type=\"submit\" method=\"post\" value='CREATE ACCOUNT' />\n                    </form>\n                }\n                <form className=\"form guestCheckout\">\n                    <h2>SHOP AS GUEST</h2>\n                    <span className=\"logContent\">\n                        You can complete your purchase as a guest, but you will need to fill out your details to place your order.<br></br>\n\n                    You will be able to register and save your details for future purchases at the end of the order process.\n                    </span>\n                    <Link to=\"/shippinginfo\" className=\"cartLink\">\n                        <input className=\"button log\" type=\"submit\" method=\"post\" value=\"CONTINUE AS GUEST\" />\n                    </Link>\n                    {userAssociate ?\n                        <div>\n                            <h2>NEW CUSTOMER</h2>\n                            <span className=\"logContent\">\n                                Create a new account\n                            </span>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" onClick={(e) => setuserAssociate(false)} value='CREATE ACCOUNT' />\n                        </div>\n                        : null}\n                </form>\n            </div>\n        );\n    }\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport headCount from '../../Functions/headCount';\n\nfunction mapStateToProps(state) {\n    console.log('home page get user', state.basket)\n    return { basket: state.basket }\n};\n\nconst ShippingInfo = (props) => {\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [productList, setproductList] = useState([]);\n    const [popUp, setpopUp] = useState('nonUser');\n\n    const [guest, setguest] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        phone: 'Phone',\n        newsletter: true,\n        email: '',\n    });\n\n    const [guestID, setguestID] = useState({\n        guest_id: '',\n        status: false\n    })\n\n    const [totalCart, settotalCart] = useState(0);\n    const [totalProdQty, settotalProdQty] = useState(0);\n    //je recupere mon produit\n    useEffect(() => {\n        const fetchData = async () => {\n\n            let url = `/api/cart`\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `orderID=${orderID}`\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status) {\n                        setproductList(data.basket);\n                        //settotalCart(data.totalCart);\n                        console.log('je verifie que je recupere le bon panier: ', data.basket)\n                        settotalCart(data.totalCart);\n                        settotalProdQty(headCount(data.basket));\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                })\n                .catch(error => console.log(\"erreur fetch\", error));\n        }\n        fetchData();\n        // console.log(\"je recois quoi ? ?? \", props.prodList);\n        // setproductList(props.prodList);\n    }, []);\n\n    let sendForm = (e) => {\n        console.log('send guest', guest);\n        e.preventDefault();\n        let url = '/api/addguest';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `orderID=${orderID}&firstname=${guest.firstname}&lastname=${guest.lastname}&address=${guest.address}&optional=${guest.optional}&zipcode=${guest.zipcode}&city=${guest.city}&state=${guest.state}&newsletter=${guest.newsletter}&email=${guest.email}`\n        })\n            .then((response) => response.json())\n            .then(async (data) => {\n                console.log('retour du back shipping info === ', data)\n                if (data.status) {\n                    await localStorage.setItem('guest', JSON.stringify(data.guestID));\n                    setguestID({ guest_id: data.guestID, status: data.status })\n                } else {\n                    setpopUp('userExistAlready');\n                }\n            });\n    }\n\n    if (guestID.status) {\n        return <Redirect to={{\n            pathname: '/payment',\n            user: { id: guestID.guest_id, status: 'guest' }\n        }}\n        />\n    } else {\n        return (\n            <div className=\"ShipBloc content\">\n                <form className=\"checkOutForm\" onSubmit={(e) => sendForm(e)}>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"firstname\"\n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            onChange={(e) => setguest({ ...guest, firstname: e.target.value })}\n                            value={guest.firstname}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"lastname\"\n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            onChange={(e) => setguest({ ...guest, lastname: e.target.value })}\n                            value={guest.lastname}\n                            required\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"Address\"\n                            type=\"text\"\n                            placeholder=\"Address\"\n                            onChange={(e) => setguest({ ...guest, address: e.target.value })}\n                            value={guest.address}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"address2\"\n                            type=\"text\"\n                            placeholder=\"Optional\"\n                            onChange={(e) => setguest({ ...guest, optional: e.target.value })}\n                            value={guest.optional}\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"ZIP Code\"\n                            placeholder=\"ZIP Code\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setguest({ ...guest, zipcode: e.target.value })}\n                            value={guest.zipcode}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"city\"\n                            type=\"text\"\n                            placeholder=\"City/Town\"\n                            onChange={(e) => setguest({ ...guest, city: e.target.value })}\n                            value={guest.city}\n                            required\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"state\"\n                            type=\"text\"\n                            placeholder=\"State\"\n                            onChange={(e) => setguest({ ...guest, state: e.target.value })}\n                            value={guest.state}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"phone\"\n                            type=\"tel\"\n                            placeholder=\"Phone\"\n                            onChange={(e) => setguest({ ...guest, phone: e.target.value })}\n                            pattern=\"^[0-9]{10}$\"\n                            value={guest.phone}\n                            required\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            onChange={(e) => setguest({ ...guest, email: e.target.value })}\n                            value={guest.email}\n                            required\n                        ></input>\n\n                    </div>\n                    <div className=\"shipCheckbox\">\n                        <input\n                            className=\"checkboxInput\"\n                            name=\"Checkbox\"\n                            type=\"checkbox\"\n                            onChange={(e) => { setguest({ ...guest, newsletter: e.target.checked }) }}\n                            value={guest.newsletter}\n                        ></input>\n                        <label>I wish to receive Squillace's newsletter</label>\n                    </div>\n                    <div className={`shipForm ${popUp}`} >\n                        <h5 className='logLink'>There is already an account associated with this email, please : </h5>\n                        <Link className='logLink2' to='/checkout'>Log In</Link>\n                    </div>\n                    <input\n                        className=\"button log\"\n                        name=\"Checkout\"\n                        type=\"submit\"\n                        value=\"CONTINUE\"\n                    ></input>\n\n                </form>\n                <div className=\"totalCartship\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <h5 className=\"h5marg\">SHOPPING BAG TOTAL\n                ({totalProdQty} items)\n                </h5>\n                    <h5 className=\"h5marg\">Log in to order with your account</h5>\n                    <Link to=\"/checkout\" className=\"cartLink\">\n                        <button className=\"btnCart\" >SIGN IN</button>\n                    </Link>\n                    <div className=\"totalCartElments\">\n                        <div className=\"totalCartElmt L\">\n                            <h5 className=\"h5marg\" >Order value :</h5>\n                            <h5 className=\"h5marg\" >Shipping :</h5>\n                            <h5 className=\"h5marg\" >TOTAL :</h5>\n                        </div>\n                        <div className=\"totalCartElmt R\">\n                            <h5 className=\"h5marg\" >{totalCart}€</h5>\n                            <h5 className=\"h5marg\" >FREE</h5>\n                            <h5 className=\"h5marg\" >{totalCart}€</h5>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default connect(mapStateToProps, null)(ShippingInfo);\n//export default ShippingInfo;\n","\nexport default function formatDate(date) {\n    // console.log(date)\n    const birthday = new Date(date);\n    const date1 = birthday.getDate();\n    const date2 = birthday.getMonth() + 1;\n    const date3 = birthday.getFullYear();\n    if (date1 < 10 && date2 < 10) {\n        return `0${date1}/0${date2}/${date3}`;\n    } else if (date1 < 10) {\n        return `0${date1}/${date2}/${date3}`;\n    } else if (date2 < 10) {\n        return `${date1}/0${date2}/${date3}`;\n    } else {\n        return `${date1}/${date2}/${date3}`;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight, faPlus, faMinus, faMinusCircle } from '@fortawesome/fontawesome-free-solid';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport formatDate from '../../Functions/formatDate';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport headCount from '../../Functions/headCount';\n\nfunction mapStateToProps(state) {\n    console.log('Account get user', state.user)\n    return { name: state.user }\n}\n\nconst MyAccount = (props) => {\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        // address: '',\n        // optional: '',\n        // zipcode: '',\n        // state: '',\n        // city: '',\n        // newsletter: '',\n        email: '',\n        // gender: '',\n        // phone: '',\n        // compagnyname: '',\n        // billingname: '',\n        // billingaddress: '',\n        // billingoptional: '',\n        // billingzipcode: '',\n        // billingcity: '',\n        // billingstate: '',\n        // // password: '',\n        // // token: String,\n        // // salt: String,\n        // statut: '',\n        // inscription: '',\n        // birthday: '',\n        // orders: []\n    });\n    const [orders, setorders] = useState([]);\n    // const [orderToDisplay, setorderToDisplay] = useState({\n    //     id: '',\n    //     productList: [],\n    //     display: false\n    // });\n    const [name, setname] = useState(false);\n\n    //je recupere mon produit\n    useEffect(() => {\n        //console.log(\"je recois quoi ? ?? \", props.prodList);\n        const fetchData = async () => {\n            let url = '/api/myaccount';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data.user.firstname)\n                    setuser({\n                        firstname: data.user.firstname,\n                        lastname: data.user.lastname,\n                        // address: data.user.address,\n                        // optional: data.user.optional,\n                        // zipcode: data.user.zipcode,\n                        // city: data.user.city,\n                        // state: data.user.state,\n                        // newsletter: data.user.newsletter,\n                        email: data.user.email,\n                        // gender: data.user.gender,\n                        // phone: data.user.phone,\n                        // compagnyname: data.user.compagnyname,\n                        // billingname: data.user.billingname,\n                        // billingaddress: data.user.billingaddress,\n                        // billingoptional: data.user.billingoptional,\n                        // billingzipcode: data.user.billingzipcode,\n                        // billingcity: data.user.billingcity,\n                        // billingstate: data.user.billingstate,\n                        // // password: '',\n                        // // token: String,\n                        // // salt: String,\n                        // statut: data.user.statut,\n                        // inscription: data.user.inscription,\n                        // birthday: data.user.birthday,\n                        // orders: data.user.orders\n                    })\n                    setorders(data.orders);\n                    if (data.user.firstname != undefined) {\n                        setname(true);\n                    }\n                });\n        }\n        fetchData();\n    }, []);\n\n    let getOrder = async (id, key) => {\n        console.log('id a afficher', id, key)\n        // await setorderToDisplay({ ...orderToDisplay, id: id, display: true, productList: orders[key].productList })\n        // console.log('orderto display', orderToDisplay)\n        document.getElementById(`${key}`).className = \"showOrderDetails\";\n        document.getElementById(`bloc${key}`).className = \"orderCardExpand\";\n        document.getElementById(`img${key}`).className = \"hide\";\n        document.getElementById(`show${key}`).className = \"hide\";\n        document.getElementById(`OrderInfo${key}`).className = \"hide\";\n        document.getElementById(`showless${key}`).className = \"displayOrder\";\n        document.getElementById(`fullOrderInfo${key}`).className = \"fullOrderInfo\";\n        document.getElementById(`OrderTitle${key}`).className = \"orderTitles\";\n        //console.log(elt)\n    }\n\n    let showLess = async (id, key) => {\n        console.log('id a afficher', id, key)\n        // await setorderToDisplay({ ...orderToDisplay, id: id, display: false, productList: orders[key].productList })\n        // console.log('order to display', orderToDisplay)\n        document.getElementById(`${key}`).className = \"hide\";\n        document.getElementById(`bloc${key}`).className = \"orderCard\";\n        document.getElementById(`showless${key}`).className = \"hide\";\n        document.getElementById(`fullOrderInfo${key}`).className = \"hide\";\n        document.getElementById(`OrderTitle${key}`).className = \"hide\";\n\n        document.getElementById(`img${key}`).className = \"accountPic\";\n        document.getElementById(`show${key}`).className = \"displayOrder\";\n        document.getElementById(`OrderInfo${key}`).className = \"orderDetails\";\n\n        //console.log(elt)\n    }\n\n\n    var orderList = orders.map((order, i) => {\n        var productList = order.productList.map((product, i) => {\n            return (\n                <div className=\"productListAccount\">\n\n                    <img className=\"accountPic\" src={product.img} />\n                    <div className=\"prodListDetail\">\n                        <h5 style={{ fontWeight: 'bold' }}>{product.name}</h5>\n                        <h5>{product.size}</h5>\n                        <h5>{(product.price / product.quantity)}€</h5>\n                        <h5>Quantity : {product.quantity}</h5>\n                        <div className=\"prodListDetailPrice\">\n                            <h5 style={{ fontWeight: 'bold' }}>{product.price}€</h5>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n        return (\n            <div className=\"orderCard\" id={`bloc${i}`} >\n                <img className=\"accountPic\" id={`img${i}`} src={order.productList[0].img} />\n                <span className=\"orderCardSub\">\n                    <div className='hide' onClick={(e) => showLess(order._id, i)} id={`showless${i}`}>\n                        <h5 className='showdetail'>Show less</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faMinus} />\n                    </div>\n                    <h3 className='order'>Order  -  {formatDate(order.validationdate)}</h3>\n                    <span className='orderDetails' id={`OrderInfo${i}`}>\n                        <h5>Ref : {order._id}</h5>\n                        <h5>Status : fulfilled</h5>\n                        <h5>Date : {formatDate(order.validationdate)}</h5>\n                        <h5>Total : {order.totalorder}€</h5>\n                    </span>\n                    <h5 className='hide' id={`OrderTitle${i}`}>Order Details</h5>\n                    <div className=\"hide\" id={`fullOrderInfo${i}`}>\n\n                        <span className={checkIfExist(order.billingaddress) ? 'orderDetailsExpandthreeL' : 'orderDetailsExpandL'}>\n                            <h5 style={{ fontWeight: 'bold' }}>Shipping Address</h5>\n                            <h5 style={{ marginBottom: 2, }}>{order.firstname} {order.lastname}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.optional}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.address}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.zipcode} {order.city}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.state}</h5>\n                        </span>\n                        {checkIfExist(order.billingaddress) ?\n                            <span className='orderDetailsExpandM'>\n                                <h5 style={{ fontWeight: 'bold' }}>Billing Address</h5>\n                                <h5 style={{ marginBottom: 2 }}>{order.compagnyname}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingoptional}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingaddress}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingzipcode} {order.billingcity}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingstate}</h5>\n                            </span> : null}\n                        <span className={checkIfExist(order.billingaddress) ? 'orderDetailsExpandthreeR' : 'orderDetailsExpandR'}>\n                            {/* <h5>Ref : {order._id}</h5>\n                            <h5>Status : fulfilled</h5> */}\n                            <h5>Date : {formatDate(order.validationdate)}</h5>\n                            <h5 style={{ fontWeight: 'bold' }}>Total : {order.totalorder}€</h5>\n                        </span>\n\n                    </div>\n                    <div className='displayOrder' onClick={(e) => getOrder(order._id, i)} id={`show${i}`}>\n                        <h5 className='showdetail'>Show more</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faPlus} />\n                    </div>\n                    <div id={i} className='hide'>\n                        <h5 className='orderTitles'>Order Summary</h5>\n                        {productList}\n                        <div className='resumeOrder'>\n                            <h5 className=\"prodListTotalQty\">{headCount(order.productList)} items</h5>\n                            <h5 className=\"prodListTotalPrice\">Total : {order.totalorder}€</h5>\n                        </div>\n                    </div>\n                </span>\n\n                {/* <div>\n              <button className='change-btn' onClick={(e) => { addProduct(e.target.value) }} value={product._id}>Ajouter au panier</button>\n            </div> */}\n            </div >\n        )\n    });\n\n\n    return (\n        <div className=\"accountBloc content\">\n            <div className=\"accountsetting\">\n                <h3>Hello {name ? `${user.firstname} ${user.lastname}` : user.email}</h3>\n                <div className=\"mobil\">\n                    {/* <Link to=\"/wishlist\" className=\"linkaccount\">\n                    <h5 className=\"settingHeadL\">My Wishlist</h5>\n                    <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link> */}\n                    <Link to=\"/myaccount\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">My Purchases</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                    <Link to=\"/mysettings\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">My Settings</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                    {/* <Link to=\"/mysettings\" className=\"linkaccount\">\n                    <h5 className=\"settingHeadL\">My Payment Info</h5>\n                    <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link> */}\n                    <Link to=\"/signout\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">Log Out</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                    <h5>Need Help ?</h5>\n                    <Link to=\"/contact\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">Contact Us</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                </div>\n            </div>\n            {/* <div className=\"form\"> */}\n\n\n            <div className=\"accountOrder\">\n                <h3>My Purchases</h3>\n                {orderList}\n            </div>\n\n            {/* </div> */}\n        </div>\n    );\n\n};\n\nexport default connect(mapStateToProps, null)(MyAccount);\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\nimport formatDate from '../../Functions/formatDate';\nimport allOptions from '../../Functions/allOptions';\n\nconst MySettings = (props) => {\n    const [showBilling, setshowBilling] = useState(false)\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        newsletter: false,\n        email: '',\n        gender: '',\n        phone: '',\n        compagnyname: '',\n        billingname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: '',\n        // password: '',\n        // token: String,\n        // salt: String,\n        statut: '',\n        inscription: '',\n        birthday: '',\n        orders: []\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let url = '/api/getuser';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data.user.firstname)\n                    let phone = data.user.phone\n                    if (phone != undefined) {\n                        phone = `+33${data.user.phone}`\n                    }\n                    let birthday = data.user.birthday\n                    if (birthday != undefined) {\n                        birthday = formatDate(data.user.birthday);\n                    }\n                    if (data.user.billingaddress != undefined) {\n                        setshowBilling(true)\n                    }\n                    setuser({\n                        firstname: data.user.firstname,\n                        lastname: data.user.lastname,\n                        address: data.user.address,\n                        optional: data.user.optional,\n                        zipcode: data.user.zipcode,\n                        city: data.user.city,\n                        state: data.user.state,\n                        newsletter: data.user.newsletter,\n                        email: data.user.email,\n                        gender: data.user.gender,\n                        phone: phone,\n                        compagnyname: data.user.compagnyname,\n                        billingname: data.user.billingname,\n                        billingaddress: data.user.billingaddress,\n                        billingoptional: data.user.billingoptional,\n                        billingzipcode: data.user.billingzipcode,\n                        billingcity: data.user.billingcity,\n                        billingstate: data.user.billingstate,\n                        // password: '',\n                        // token: String,\n                        // salt: String,\n                        statut: data.user.statut,\n                        inscription: data.user.inscription,\n                        birthday: birthday,\n                        orders: data.user.orders\n                    })\n\n                });\n        }\n        fetchData();\n\n    }, []);\n\n    const subscribe = (e) => {\n        e.preventDefault();\n        let url = '/api/usersubcription';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${userID}&newsletter=${!user.newsletter}`\n        }).then((response) => response.json())\n            .then((data) => {\n                if (data.status) {\n                    setuser({ ...user, newsletter: !user.newsletter });\n                }\n            })\n    }\n\n    return (\n        <div className='settingsBloc content'>\n\n            <a href='/myaccount' className=\"backToSearch\">\n                <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                <h5 className=\"backCollec\" >Back to my Account</h5>\n            </a>\n\n            <div className='settingstitle'>\n                <h4>My settings</h4>\n                <p>You can manage your account and subscriptions here</p>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>My Details</h5>\n                    <Link to=\"/settingsform/details\"\n                        className='settingSubTitleDetailR'>Edit</Link>\n                </div>\n                <div className='settingsContent'>\n                    <label>First Name</label>\n                    <h5>{user.firstname}</h5>\n                    <label>Last Name</label>\n                    <h5>{user.lastname}</h5>\n                    <label>Email</label>\n                    <h5>{user.email}</h5>\n                    <label>Date of birth</label>\n                    <h5>{user.birthday}</h5>\n                    <label>Phone</label>\n                    <h5>{user.phone}</h5>\n                    <label>Gender</label>\n                    <h5>{user.gender}</h5>\n                </div>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>My Addresses</h5>\n                    <Link to=\"/settingsform/address\"\n                        className='settingSubTitleDetailR'>Edit</Link>\n                </div>\n                <div className='settingsContent'>\n                    <label>Address</label>\n                    <h5>{user.address}</h5>\n                    <label className={allOptions(user.optional) ? 'hide' : null}>Optional</label>\n                    <h5 className={allOptions(user.optional) ? 'hide' : null}>{user.optional}</h5>\n                    <label>Zipcode</label>\n                    <h5>{user.zipcode}</h5>\n                    <label>City</label>\n                    <h5>{user.city}</h5>\n                    <label>State</label>\n                    <h5>{user.state}</h5>\n                </div>\n                <div className={showBilling ? 'settingsContent' : 'hide'}>\n                    <label className={allOptions(user.compagnyname) ? 'hide' : null}>Billing Name</label>\n                    <h5 className={allOptions(user.compagnyname) ? 'hide' : null}>{user.compagnyname}</h5>\n                    <label>Billing Address</label>\n                    <h5>{user.billingaddress}</h5>\n                    <label className={allOptions(user.billingoptional) ? 'hide' : null}>Optional</label>\n                    <h5 className={allOptions(user.billingoptional) ? 'hide' : null}>{user.billingoptional}</h5>\n                    <label>Zipcode</label>\n                    <h5>{user.billingzipcode}</h5>\n                    <label>City</label>\n                    <h5>{user.billingcity}</h5>\n                    <label>State</label>\n                    <h5>{user.billingstate}</h5>\n                </div>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>Newsletter Subscription</h5>\n                    {/* <h6 className='settingSubTitleDetailR'>Edit</h6> */}\n                </div>\n                <div className='settingsContent'>\n                    <div className='newsletterSubTitle'>\n                        <label className='newsDetailL'>Newsletter Subscription</label>\n                        <h5 className='newsDetailR' onClick={(e) => subscribe(e)}>{user.newsletter ? `ON` : `OFF`}</h5>\n                    </div>\n                </div>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>Privacy</h5>\n                    {/* <h6 className='settingSubTitleDetailR'>Edit</h6> */}\n                </div>\n                <div className='settingsContent'>\n\n                    <label className=\"updatePass\"><Link to=\"/updatepass\">Change Password</Link></label>\n                </div>\n            </div>\n\n            {/* <div>\n                    <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>CONTINUE SHOPPING</button>\n                    <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button>\n                </div> */}\n\n        </div >\n\n    );\n    // }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default MySettings;","import React, { useState, useEffect, useReducer } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport useLocalStorage from '../Functions/useLocalStore';\nimport { CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\n//import {injectStripe} from 'react-stripe-elements';\nimport checkIfExist from '../Functions/checkIfExist';\nimport { connect } from 'react-redux';\n\n\nconst CARD_ELEMENT_OPTIONS = {\n    style: {\n        base: {\n            color: \"#32325d\",\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n                color: \"#aab7c4\",\n            },\n        },\n        invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\",\n        },\n    },\n};\n\nasync function stripeTokenHandler(token, userID, user, firstname, lastname, basket, orderID, totalCart) {\n    const paymentData = { token: token.id, userID: userID, user: user, firstname: firstname, lastname: lastname, basket: basket, orderID: orderID, totalCart: totalCart };\n\n    // Use fetch to send the token ID and any other payment data to your server.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    let url = '/api/charge';\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(paymentData),\n    })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('retour back', data.status)\n            if (data.status) {\n\n                return (true)\n            } else {\n                return (false);\n            }\n        }).catch((data) => {\n            console.log(\"error == \", data)\n        });\n\n    return response\n    // Return and display the result of the charge.\n}\n\n\nconst CheckoutForm = (props) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n    const [cardElement, setcardElement] = useState({\n        firstname: '',\n        lastname: '',\n        orderID: '',\n        basket: [],\n        totalCart: 0\n    })\n\n    const [address, setaddress] = useState('');\n\n\n    useEffect(() => {\n        console.log(\"je recois quoi de mon element payment ? ?? \", props.user, props.basket, props.orderID, props.totalCart);\n\n        setcardElement({ firstname: props.user.firstname, lastname: props.user.lastname, basket: props.basket, orderID: props.orderID, totalCart: props.totalCart })\n        // const fetchData = async () => {\n        //     let url = 'http://localhost:5000/getuser';\n        //     fetch(url, {\n        //         method: 'POST',\n        //         headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        //         body: `id=${userID}`\n        //     })\n        //         .then((response) => response.json())\n        //         .then((data) => {\n        //             console.log('retour du back === ', data)\n        //             setuser({\n        //                 orders: data.user.orders,\n        //                 lastname: data.user.lastname,\n        //             })\n        //         })\n        // }\n        // fetchData();\n\n    }, []);\n\n\n    const handleSubmit = async (event) => {\n        // We don't want to let default form submission happen here,\n        // which would refresh the page.\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            // Stripe.js has not yet loaded.\n            // Make  sure to disable form submission until Stripe.js has loaded.\n            return;\n        }\n        //console.log('test', elements.getElement(CardElement))\n        const card = elements.getElement(CardElement);\n        //const card = elements.getElement({ cardnumber: CardNumberElement, cardExpiry: CardExpiryElement, cardCVC: CardCvcElement });\n        const result = await stripe.createToken(card);\n\n        if (result.error) {\n            // Show error to your customer.\n            console.log('error stripe', result.error.message);\n            //CREER UN MESSAGE DERREUR\n        } else {\n            // Send the token to your server.\n            // This function does not exist yet; we will define it in the next step.\n            let retourBack = await stripeTokenHandler(result.token, (checkIfExist(userID) ? userID : guestID), props.user, cardElement.firstname, cardElement.lastname, cardElement.basket, cardElement.orderID, cardElement.totalCart);\n            // je controle la réussite du paiement \n            console.log('retour back', retourBack)\n            if (retourBack) {\n                console.log('merci panier validé!')\n                const updateData = async () => {\n                    await window.localStorage.removeItem('order');\n                    await window.localStorage.removeItem('count');\n                    await window.localStorage.removeItem('guest');\n                    await props.newCount(0);\n                    await props.newBasket([]);\n                    await props.newOrder('');\n                }\n                updateData();\n                props.setPaymentValid(true);\n            } else {\n                //CREER UN MESSAGE DERREUR\n                console.log('ooops erreur!')\n            }\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h4>Proceed to Payment</h4>\n            <div className='subPaymentName'>\n\n                <div className='subPayment'>\n                    <label>First Name</label>\n                    <input type='text' name='firstname' value={cardElement.firstname} required\n                        onChange={(e) => setcardElement({ ...cardElement, firstname: e.target.value })}></input>\n                    <h6>As it appears on your card.</h6>\n                </div>\n                <div className='subPayment'>\n                    <label>Last Name</label>\n                    <input type='text' name='lastname' value={cardElement.lastname} required\n                        onChange={(e) => setcardElement({ ...cardElement, lastname: e.target.value })}></input>\n                    <h6>As it appears on your card.</h6>\n                </div>\n\n            </div>\n            <label>\n                Card details</label>\n\n            <div className='subPaymentINFO'>\n                <CardElement className=\"input\" options={CARD_ELEMENT_OPTIONS} />\n                <div className=\"subCardInfo\">\n                    <h6>Card number</h6>\n                    <h6>Enter the expiration date on your card</h6>\n                    <h6>Security Code printed on your card, 3-4 digits.</h6>\n                </div>\n                {/* <label>Card Number</label>\n                <CardNumberElement className=\"input\" />\n                Collects the card number.\n                <label> Expiry Date</label >\n                <CardExpiryElement />\n                Collects the card‘s expiration date.\n                < label > CVC</label >\n                <CardCvcElement /> */}\n            </div>\n\n\n            {/* <CardSection /> */}\n            <div>\n\n\n\n            </div>\n            {/* <button disabled={!stripe}>Confirm order</button> */}\n            < button className='button log' type=\"submit\" disabled={!stripe}>\n                Process to Payment\n            </button >\n        </form>\n    );\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // newUser: function (userToSend) {\n        //     console.log('je suis dans le NEW USER REDUCER', userToSend)\n        //     dispatch({ type: 'setUser', user: userToSend })\n        // },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(CheckoutForm);\n\n//export default CheckoutForm;","import React, { useState, useEffect, useReducer } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport useLocalStorage from '../Functions/useLocalStore';\nimport { CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport allOptions from '../Functions/allOptions';\nimport checkIfExist from '../Functions/checkIfExist';\n\nconst CheckoutShipForm = (props) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n\n    const [showFormShip, setshowFormShip] = useState(false);\n    const [showFormBill, setshowFormBill] = useState(false);\n    const [noship, setnoShip] = useState(false);\n    const [storeFormShip, setstoreFormShip] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        phone: ''\n    });\n    const [storeFormBill, setstoreFormBill] = useState({\n        compagnyname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: ''\n    });\n    const [address, setaddress] = useState('');\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        state: '',\n        city: '',\n        newsletter: '',\n        email: '',\n        gender: '',\n        phone: '',\n        compagnyname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: '',\n        // password: '',\n        // token: String,\n        // salt: String,\n        statut: '',\n        inscription: '',\n        birthday: '',\n        orders: []\n    });\n\n    useEffect(() => {\n        //console.log(\"je recois quoi ? ?? \", props.prodList);\n        const fetchData = async () => {\n            let url = '/api/getuser';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}&guestID=${guestID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back checkoutshipform === ', data, checkIfExist(data.address))\n                    if (checkIfExist(data.user.address)) {\n                        console.log('JE SUIS PASSE LA !!')\n                        setuser({\n                            firstname: data.user.firstname,\n                            lastname: data.user.lastname,\n                            address: data.user.address,\n                            optional: data.user.optional,\n                            zipcode: data.user.zipcode,\n                            city: data.user.city,\n                            state: data.user.state,\n                            newsletter: data.user.newsletter,\n                            email: data.user.email,\n                            gender: data.user.gender,\n                            phone: data.user.phone,\n                            compagnyname: data.user.compagnyname,\n                            billingname: data.user.billingname,\n                            billingaddress: data.user.billingaddress,\n                            billingoptional: data.user.billingoptional,\n                            billingzipcode: data.user.billingzipcode,\n                            billingcity: data.user.billingcity,\n                            billingstate: data.user.billingstate,\n                            // password: '',\n                            // token: String,\n                            // salt: String,\n                            statut: data.user.statut,\n                            inscription: data.user.inscription,\n                            birthday: data.user.birthday,\n                            orders: data.user.orders\n                        })\n                    } else {\n                        setnoShip(true);\n                    }\n\n                });\n        }\n        fetchData();\n\n    }, []);\n\n    //je modifie mes infos de shipping\n    const submitFormAddress = (e, typeForm) => {\n        e.preventDefault();\n        props.setnewUser(user);\n        //console.log('retour formulaire ==', e.target)\n        let url = '/api/updateuseraddress';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${(checkIfExist(userID) ? userID : guestID)}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}&compagnyname=${user.compagnyname}&billingaddress=${user.billingaddress}&billingoptional=${user.billingoptional}&billingzipcode=${user.billingzipcode}&billingcity=${user.billingcity}&billingstate=${user.billingstate}`\n\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('retour du back === ', data.status)\n                if (data.status) {\n                    console.log(data)\n                    if (typeForm === 'Ship') {\n                        setshowFormShip(false);\n                    } else if (typeForm === 'Bill') {\n                        setshowFormBill(false);\n                    } else if (typeForm === 'NewShip') {\n                        setnoShip(false);\n                    }\n                } else {\n                    console.log('erreur');\n                }\n            });\n    }\n\n    const submitFormShipping = (e, typeForm) => {\n        e.preventDefault();\n        props.setnewUser(user);\n        let url = '/api/addshippingaddress';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${(checkIfExist(userID) ? userID : guestID)}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}`\n\n        }).then((response) => response.json())\n            .then((data) => {\n                if (data.status) {\n                    props.setValidShowPayment(true)\n                    if (typeForm === 'Ship') {\n                        setnoShip(false);\n                        // props.setName(\"i'm from Parent\")\n                        //props.handleClickParent(true);\n                    } else {\n                        setshowFormShip(false);\n                    }\n                } else {\n                    console.log('erreur');\n                }\n            });\n    }\n    return (\n        <div>\n            {/* =================================================================\n            SI JE NAI PAS D'ADRESSE PREENREGISTREE JE PROPOSE LE FORMULAIRE : \n            ================================================================= */}\n            <div className={noship ? null : 'hide'}  >\n                {/* ====================================\n            FORMULAIRE POUR Enregistrer LES INFOS DE SHIPPING\n            ==================================== */}\n                <form onSubmit={(e) => submitFormShipping(e, 'Ship')}>\n                    <h4>{address}</h4>\n                    <div className='settingsContent setForm'>\n                        <h5>Shipping Address</h5>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>First Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                                    value={user.firstname}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>Last Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"lastname\"\n                                    onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                                    value={user.lastname}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Address</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"address\"\n                            onChange={(e) => setuser({ ...user, address: e.target.value })}\n                            value={user.address}\n                            required\n                        ></input>\n                        <label>Optional</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"detail\"\n                            onChange={(e) => setuser({ ...user, optional: e.target.value })}\n                            value={user.optional}\n                        ></input>\n                        <label>Zipcode</label>\n                        <input\n                            className=\"settingInput\"\n                            name=\"zipcode\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setuser({ ...user, zipcode: e.target.value })}\n                            value={user.zipcode}\n                            required\n                        ></input>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, city: e.target.value })}\n                                    value={user.city}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, state: e.target.value })}\n                                    value={user.state}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Contact Phone</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"phone\"\n                            onChange={(e) => setuser({ ...user, phone: e.target.value })}\n                            value={user.phone}\n\n                        ></input>\n                    </div>\n                    <div className='center'>\n                        <input type='submit' className=\"address\" value='CONTINUE' />\n                    </div>\n                </form>\n            </div>\n            {/* =================================================================\n             JAI UNE ADRESSE JE LAFFICHE: \n            ================================================================= */}\n            <div className={noship ? 'hide' : null} >\n                <div className={showFormShip ? 'hide' : \"paymentSub\"}>\n                    <div className=\"paymentAddress\">\n                        <h5>Shipping Address</h5>\n                        <h6>{user.firstname} {user.lastname}</h6>\n                        <h6>{user.optional}</h6>\n                        <h6>{user.address}</h6>\n                        <h6>{user.zipcode} {user.city}</h6>\n                        <h6>{user.state}</h6>\n                        <h6 className={allOptions(user.phone) ? 'hide' : null}>Contact Phone: +33{user.phone}</h6>\n\n                    </div>\n                    <div className={(allOptions(user.billingaddress) || showFormBill) ? 'hide' : \"paymentAddress\"}>\n                        <h5>Billing Address</h5>\n                        <h6>{user.compagnyname}</h6>\n                        <h6>{user.billingoptional}</h6>\n                        <h6>{user.billingaddress}</h6>\n                        <h6>{user.billingzipcode} {user.billingcity}</h6>\n                        <h6>{user.billingstate}</h6>\n\n                    </div>\n                </div>\n                <div className={showFormShip ? 'hide' : \"paymentSub\"}>\n                    <input className='button payChangeInfo' onClick={(e) => {\n                        setshowFormShip(!showFormShip);\n                        setstoreFormShip({\n                            firstname: user.firstname,\n                            lastname: user.lastname,\n                            address: user.address,\n                            optional: user.optional,\n                            zipcode: user.zipcode,\n                            city: user.city,\n                            state: user.state,\n                            phone: user.phone\n                        })\n                    }} value='Change Shipping Info' />\n                    {allOptions(user.billingaddress) ?\n                        <div className=\"payChangeInfo\" onClick={(e) => { setshowFormBill(!showFormBill) }}><FontAwesomeIcon className=\"icon\" icon={faPlus} /> Add Billing Address</div>\n                        :\n                        null}\n                    <input\n                        className={(allOptions(user.billingstate) || showFormBill) ? 'hide' : 'button payChangeInfo'}\n                        onClick={(e) => {\n                            setshowFormBill(!showFormBill);\n                            setstoreFormBill({\n                                compagnyname: user.compagnyname,\n                                billingaddress: user.billingaddress,\n                                billingoptional: user.billingoptional,\n                                billingzipcode: user.billingzipcode,\n                                billingcity: user.billingcity,\n                                billingstate: user.billingstate\n                            })\n                        }} value='Change Billing Info' />\n                </div>\n\n                {/* ====================================\n            FORMULAIRE POUR CHANGER LES INFOS DE SHIPPING\n            ==================================== */}\n                {/* <div className={showFormShip ? null : 'hide'}> */}\n                <form className={showFormShip ? null : 'hide'} onSubmit={(e) => submitFormShipping(e, 'correct')}>\n                    <FontAwesomeIcon className=\"popcross\" icon={faTimes} onClick={(e) => {\n                        setshowFormShip(!showFormShip)\n                        setuser({\n                            ...user,\n                            firstname: storeFormShip.firstname,\n                            lastname: storeFormShip.lastname,\n                            address: storeFormShip.address,\n                            optional: storeFormShip.optional,\n                            zipcode: storeFormShip.zipcode,\n                            city: storeFormShip.city,\n                            state: storeFormShip.state,\n                            phone: storeFormShip.phone\n                        })\n                    }} />\n\n                    <h4>{address}</h4>\n                    <div className='settingsContent setForm'>\n                        <h5>Shipping Address</h5>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>First Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                                    value={user.firstname}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>Last Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"lastname\"\n                                    onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                                    value={user.lastname}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Address</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"address\"\n                            onChange={(e) => setuser({ ...user, address: e.target.value })}\n                            value={user.address}\n                            required\n                        ></input>\n                        <label>Optional</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"detail\"\n                            onChange={(e) => setuser({ ...user, optional: e.target.value })}\n                            value={user.optional}\n                        ></input>\n                        <label>Zipcode</label>\n                        <input\n                            className=\"settingInput\"\n                            name=\"zipcode\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setuser({ ...user, zipcode: e.target.value })}\n                            value={user.zipcode}\n                            required\n                        ></input>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, city: e.target.value })}\n                                    value={user.city}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, state: e.target.value })}\n                                    value={user.state}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Contact Phone</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"number\"\n                            name=\"phone\"\n                            onChange={(e) => setuser({ ...user, phone: e.target.value })}\n                            value={user.phone}\n                        ></input>\n                    </div>\n                    <div className='center'>\n                        <input type='submit' className=\"address\" value='CHANGE SHIPPING ADDRESS' />\n                    </div>\n                </form>\n                {/* ====================================\n            FORMULAIRE POUR CHANGER LES INFOS DE BILLING\n            ==================================== */}\n                <form className={showFormBill ? null : 'hide'} onSubmit={(e) => submitFormAddress(e, 'Bill')}>\n                    <FontAwesomeIcon className=\"popcross\" icon={faTimes} onClick={(e) => {\n                        setshowFormBill(!showFormBill)\n                        setuser({\n                            ...user,\n                            compagnyname: storeFormBill.compagnyname,\n                            billingaddress: storeFormBill.billingaddress,\n                            billingoptional: storeFormBill.billingoptional,\n                            billingzipcode: storeFormBill.billingzipcode,\n                            billingcity: storeFormBill.billingcity,\n                            billingstate: storeFormBill.billingstate\n                        })\n                    }} />\n                    <h4>Billing Address</h4>\n                    <div>\n                        <label>Compagny Name (optional)</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"compagnyname\"\n                            onChange={(e) => setuser({ ...user, compagnyname: e.target.value })}\n                            value={user.compagnyname}\n                        ></input>\n                        <label>Address</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"billingaddress\"\n                            onChange={(e) => setuser({ ...user, billingaddress: e.target.value })}\n                            value={user.billingaddress}\n                            required\n                        ></input>\n                        <label>Optional</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"detail\"\n                            onChange={(e) => setuser({ ...user, billingoptional: e.target.value })}\n                            value={user.billingoptional}\n                        ></input>\n                        <label>Zipcode</label>\n                        <input\n                            className=\"settingInput\"\n                            name=\"zipcode\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setuser({ ...user, billingzipcode: e.target.value })}\n                            value={user.billingzipcode}\n                            required\n                        ></input>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, billingcity: e.target.value })}\n                                    value={user.billingcity}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, billingstate: e.target.value })}\n                                    value={user.billingstate}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='center'>\n                        <input type=\"submit\" className=\"address\" value=\"CHANGE BILLING ADDRESS\" />\n                    </div>\n                </form>\n                {/* </div> */}\n                {/* ====================================\n            FIN DU FORMULAIRE POUR CHANGER LES INFOS DE SHIPPING/BILLING\n            ==================================== */}\n            </div >\n        </div>\n    );\n};\n\nexport default CheckoutShipForm;","\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport auMillieme from '../../Functions/roundNum';\nimport useLocalStorage from '../../Functions/useLocalStore';\n\nimport MyCheckoutForm from '../../Components/MyCheckoutForm';\nimport { Elements, CardElement } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutShipForm from '../../Components/CheckoutShipForm';\nimport headCount from '../../Functions/headCount';\nimport checkIfExist from '../../Functions/checkIfExist';\n\nfunction mapStateToProps(state) {\n    console.log('payment get user', state.user)\n    return { user: state.user, prodList: state.basket }\n};\n\nconst stripePromise = loadStripe('pk_test_gVPvQdtolFZzYQmPVqUw324Z00y8aGU5CX');\n\nconst Payment = (props) => {\n    const [finalBasket, setfinalBasket] = useState([]);\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [user, setuser] = useState()\n    // const [user, setuser] = useState({\n    //     firstname: '',\n    //     lastname: '',\n    //     address: '',\n    //     optional: '',\n    //     zipcode: '',\n    //     state: '',\n    //     city: '',\n    //     newsletter: '',\n    //     email: '',\n    //     gender: '',\n    //     phone: '',\n    //     compagnyname: '',\n    //     billingaddress: '',\n    //     billingoptional: '',\n    //     billingzipcode: '',\n    //     billingcity: '',\n    //     billingstate: '',\n    //     // password: '',\n    //     // token: String,\n    //     // salt: String,\n    //     statut: '',\n    //     inscription: '',\n    //     birthday: '',\n    //     orders: []\n    // });\n    // const [card, setcard] = useState({\n    //     card\n    // })\n    const [showPayment, setshowPayment] = useState(false);\n    const [payValid, setpayValid] = useState(false);\n    const [totalCart, settotalCart] = useState(0);\n    const [totalProdQty, settotalProdQty] = useState(0);\n    //const [name, setName] = useState(\"i'm Grand Parent\");\n    //je recupere mon produit\n    useEffect(() => {\n        const fetchData = async () => {\n\n            let url = '/api/getuserandcart';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `userID=${(checkIfExist(userID) ? userID : guestID)}&orderID=${orderID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back payment page ==', data)\n                    //setuser(user)\n                    setuser(data.user)\n                    //     optional: data.user.optional,\n                    //     zipcode: data.user.zipcode,\n                    //     city: data.user.city,\n                    //     state: data.user.state,\n                    //     newsletter: data.user.newsletter,\n                    //     email: data.user.email,\n                    //     gender: data.user.gender,\n                    //     phone: data.user.phone,\n                    //     compagnyname: data.user.compagnyname,\n                    //     billingname: data.user.billingname,\n                    //     billingaddress: data.user.billingaddress,\n                    //     billingoptional: data.user.billingoptional,\n                    //     billingzipcode: data.user.billingzipcode,\n                    //     billingcity: data.user.billingcity,\n                    //     billingstate: data.user.billingstate,\n                    //     // password: '',\n                    //     // token: String,\n                    //     // salt: String,\n                    //     statut: data.user.statut,\n                    //     inscription: data.user.inscription,\n                    //     birthday: data.user.birthday,\n                    //     orders: data.user.orders\n                    // })\n                    setfinalBasket(data.basket);\n                    console.log('je verifie que je recupere le bon panier: et compte', data, checkIfExist(data.user.address))\n                    settotalCart(auMillieme(data.totalCart));\n                    settotalProdQty(headCount(data.basket));\n                    if (checkIfExist(data.user.address)) {\n                        setshowPayment(true);\n                    } else {\n                        setshowPayment(false);\n                    }\n                });\n        }\n        fetchData();\n\n    }, []);\n\n    var prodList = finalBasket.map((product, i) => {\n\n        return (\n            <div className='productCart' key={i}>\n                <div className='payDetailL'>\n                    <img\n                        className=\"payPic\"\n                        src={product.img} />\n                    <h5 className='payProdName'\n                    >{product.name}</h5>\n                </div>\n                <h6 className='payDetailR'>{product.price}€</h6>\n                {/* <div className='productsDetailCart' style={{ display: 'flex', flexDirection: 'column' }}> */}\n                {/* <div className=\"sizeCart\" style={{ display: 'flex' }}>\n                        <h5 className=\"sizeDetail\">Size :</h5>\n                        <h5  >{product.size} </h5>\n\n                    </div> */}\n                {/* <div className='quantityCart' > */}\n                {/* <h5 className=\"quantityDetail\">Quantity : </h5> */}\n\n                {/* <h5 >{product.quantity}</h5> */}\n                {/* </div> */}\n                {/* </div> */}\n            </div>\n        )\n\n    });\n    if (!payValid) {\n        return (\n            <div className=\"payBloc content\">\n                <Elements stripe={stripePromise}>\n                    <div className=\"payment\">\n                        <CheckoutShipForm setnewUser={setuser} setValidShowPayment={setshowPayment} />\n                        {showPayment ? <MyCheckoutForm user={user} basket={finalBasket} orderID={orderID} totalCart={totalCart} setPaymentValid={setpayValid} /> :\n                            null\n                        }\n                    </div>\n                </Elements>\n                <div className=\"paymentCart\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    {prodList}\n                    <h5 className=\"h5marg\">Your Order\n                ({totalProdQty} items)\n                </h5>\n\n                    <div className=\"totalCartElments\">\n                        <div className=\"totalCartElmt L\">\n                            <h5 className=\"h5marg\" >Order value :</h5>\n                            <h5 className=\"h5marg\" >Shipping :</h5>\n                            <h5 className=\"h5marg\" >TOTAL :</h5>\n                        </div>\n                        <div className=\"totalCartElmt R\">\n                            <h5 className=\"h5marg\" >{auMillieme(totalCart)}€</h5>\n                            <h5 className=\"h5marg\" >FREE</h5>\n                            <h5 className=\"h5marg\" >{auMillieme(totalCart)}€</h5>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    } else {\n        return <Redirect to='/success' />\n    }\n};\n\nexport default connect(mapStateToProps, null)(Payment);\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport formatDate from '../../Functions/formatDate';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\n\nconst SettingsForm = (props) => {\n    const [showBilling, setshowBilling] = useState(false);\n    const [isSend, setisSend] = useState(false);\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        newsletter: '',\n        email: '',\n        gender: '',\n        phone: '',\n        compagnyname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: '',\n        // password: '',\n        // token: String,\n        // salt: String,\n        statut: '',\n        inscription: '',\n        birthday: '',\n        orders: []\n    });\n\n    useEffect(() => {\n        console.log('here-------', props)\n        const fetchData = async () => {\n            let url = '/api/getuser';\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    let birthday = data.user.birthday\n                    if (birthday != undefined) {\n                        //document.getElementById('dateDuJour').valueAsDate = birthday;\n                        birthday = new Date(birthday);\n                        console.log('je passse la ==========', birthday)\n                    }\n                    setuser({\n                        firstname: data.user.firstname,\n                        lastname: data.user.lastname,\n                        address: data.user.address,\n                        optional: data.user.optional,\n                        zipcode: data.user.zipcode,\n                        city: data.user.city,\n                        state: data.user.state,\n                        newsletter: data.user.newsletter,\n                        email: data.user.email,\n                        gender: data.user.gender,\n                        phone: data.user.phone,\n                        compagnyname: data.user.compagnyname,\n                        billingname: data.user.billingname,\n                        billingaddress: data.user.billingaddress,\n                        billingoptional: data.user.billingoptional,\n                        billingzipcode: data.user.billingzipcode,\n                        billingcity: data.user.billingcity,\n                        billingstate: data.user.billingstate,\n                        // password: '',\n                        // token: String,\n                        // salt: String,\n                        statut: data.user.statut,\n                        inscription: data.user.inscription,\n                        birthday: birthday,\n                        orders: data.user.orders\n                    })\n\n                    //console.log('je recois du back avec une billing vide', data.user.billingaddress)\n                    if (data.user.billingaddress != undefined) {\n                        setshowBilling(true);\n                    }\n                });\n        }\n        fetchData();\n    }, []);\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        let url = '/api/updateuserdetails';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&gender=${user.gender}&phone=${user.phone}&birthday=${user.birthday}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('retour du back === ', data.status)\n                if (data.status) {\n                    setisSend(true);\n                } else {\n                    console.log('erreur')\n                }\n            });\n    }\n    const submitFormAddress = (e) => {\n        e.preventDefault();\n        let url = '/api/updateuseraddress';\n        let body\n        if (showBilling) {\n            body = `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}&compagnyname=${user.compagnyname}&billingaddress=${user.billingaddress}&billingoptional=${user.billingoptional}&billingzipcode=${user.billingzipcode}&billingcity=${user.billingcity}&billingstate=${user.billingstate}`\n        } else {\n            body = `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}`\n\n        }\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: body\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('retour du back === ', data.status)\n                if (data.status) {\n                    setisSend(true)\n                } else {\n                    console.log('erreur');\n                }\n            });\n    }\n    if (!isSend) {\n        if (props.match.params.form === 'details') {\n            return (\n                <div className='settingsBloc content'>\n\n                    <div className=\"backToSearch set\">\n                        <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                        <h5 className=\"backSetting\" >Back to<a href='/myaccount' className=\"\">my Account</a>/<a href='/mysettings' className=\"\">my Settings </a></h5>\n                    </div>\n\n                    <div className='settingsdetails'>\n                        <div className='settingSubTitle'>\n                            <h5 className='settingSubTitleDetailL'>My Details</h5>\n                        </div>\n                        <form className='settingsContent setForm' onSubmit={(e) => submitForm(e)}>\n                            <label>First Name *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"firstname\"\n                                onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                                value={user.firstname}\n                                required\n                            ></input>\n\n                            <label>Last Name *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"lastname\"\n                                onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                                value={user.lastname}\n                                required\n                            ></input>\n\n                            <label>Email *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"email\"\n                                name=\"email\"\n                                onChange={(e) => setuser({ ...user, email: e.target.value })}\n                                value={user.email}\n                                required></input>\n                            <label>Date of birth *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"date\"\n                                name=\"date\"\n                                id='dateDuJour'\n                                onChange={(e) => setuser({ ...user, birthday: e.target.value })}\n                                valueAsDate={user.birthday}\n                                required\n                            ></input>\n                            <label>Phone</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"number\"\n                                name=\"phone\"\n                                onChange={(e) => setuser({ ...user, phone: e.target.value })}\n                                value={user.phone}\n                            ></input>\n                            <label>Gender</label>\n                            <select\n                                className=\"settingInput\"\n                                name=\"gender\"\n                                onChange={(e) => setuser({ ...user, gender: e.target.value })} required>\n                                <option value={user.gender}>{user.gender != '' ? user.gender : `--`}</option>\n                                <option value=\"Female\">Female</option>\n                                <option value=\"Male\">Male</option>\n                            </select>\n                            <div className='setFormBtn'>\n                                <input className=\"button log\" type=\"submit\" method=\"post\" value=\"SAVE DETAILS\" />\n                                <Link to='/mysettings' className=\"cancel btnCancel\" >CANCEL</Link>\n                            </div>\n                        </form>\n                    </div>\n                </div >\n\n            );\n        } else if (props.match.params.form === 'address') {\n            return (\n                <div className='settingsBloc content'>\n\n                    <div className=\"backToSearch set\">\n                        <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                        <h5 className=\"backSetting\" >Back to<a href='/myaccount' className=\"\">my Account</a>/<a href='/mysettings' className=\"\">my Settings </a></h5>\n                    </div>\n\n                    <form className='settingsdetails' onSubmit={(e) => submitFormAddress(e)}>\n                        <div className='settingSubTitle'>\n                            <h5 className='settingSubTitleDetailL'>My Addresses</h5>\n                        </div>\n                        <div className='settingsContent setForm'>\n                            <h5>Shipping Address</h5>\n                            <label>Address</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"address\"\n                                onChange={(e) => setuser({ ...user, address: e.target.value })}\n                                value={user.address}\n                                required\n                            ></input>\n                            <label>Optional</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"detail\"\n                                onChange={(e) => setuser({ ...user, optional: e.target.value })}\n                                value={user.optional}\n                            ></input>\n                            <label>Zipcode</label>\n                            <input\n                                className=\"settingInput\"\n                                name=\"zipcode\"\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                onChange={(e) => setuser({ ...user, zipcode: e.target.value })}\n                                value={user.zipcode}\n                                required\n                            ></input>\n                            <label>City</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"city\"\n                                onChange={(e) => setuser({ ...user, city: e.target.value })}\n                                value={user.city}\n                            ></input>\n                            <label>State</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"state\"\n                                onChange={(e) => setuser({ ...user, state: e.target.value })}\n                                value={user.state}\n                                required\n                            ></input>\n                            <h5 className=\"billingAddress\" onClick={(e) => { setshowBilling(!showBilling) }}>{showBilling ? `Billing Address (if different from Shipping)` : `Add Billing Address`}</h5>\n                            <div className={showBilling ? \"display\" : \"hide\"}>\n                                <label>Compagny Name (optional)</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"compagnyname\"\n                                    onChange={(e) => setuser({ ...user, compagnyname: e.target.value })}\n                                    value={user.compagnyname}\n                                ></input>\n                                <label>Address</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"billingaddress\"\n                                    onChange={(e) => setuser({ ...user, billingaddress: e.target.value })}\n                                    value={user.billingaddress}\n                                    required={showBilling ? true : false}\n                                ></input>\n                                <label>Optional</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"detail\"\n                                    onChange={(e) => setuser({ ...user, billingoptional: e.target.value })}\n                                    value={user.billingoptional}\n                                ></input>\n                                <label>Zipcode</label>\n                                <input\n                                    className=\"settingInput\"\n                                    name=\"zipcode\"\n                                    type=\"text\"\n                                    pattern=\"[0-9]*\"\n                                    onChange={(e) => setuser({ ...user, billingzipcode: e.target.value })}\n                                    value={user.billingzipcode}\n                                    required={showBilling ? true : false}\n                                ></input>\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, billingcity: e.target.value })}\n                                    value={user.billingcity}\n                                ></input>\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, billingstate: e.target.value })}\n                                    value={user.billingstate}\n                                    required={showBilling ? true : false}\n                                ></input>\n                            </div>\n                        </div>\n                        <div className='setFormBtn'>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" value=\"SAVE DETAILS\" />\n                            <Link to='/mysettings' className=\"cancel btnCancel\" >CANCEL</Link>\n                        </div>\n                    </form>\n                </div >\n            )\n        }\n    } else {\n        return <Redirect to='/mysettings' />\n    }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default SettingsForm;","import React, { useState, useReducer, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\n\nconst UpdatePassword = (props) => {\n    const [isSend, setisSend] = useState(false);\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [password, setpassword] = useState({\n        current: '',\n        new: '',\n        confirm: ''\n    });\n    const [nomatch, setnomatch] = useState(false);\n    const [nomatchCurrent, setnomatchCurrent] = useState(false)\n\n    // const [user, setuser] = useState({\n    //     firstname: '',\n    //     lastname: '',\n    //     address: '',\n    //     optional: '',\n    //     zipcode: '',\n    //     city: '',\n    //     state: '',\n    //     newsletter: '',\n    //     email: '',\n    //     gender: '',\n    //     phone: '',\n    //     compagnyname: '',\n    //     billingaddress: '',\n    //     billingoptional: '',\n    //     billingzipcode: '',\n    //     billingcity: '',\n    //     billingstate: '',\n    //     // password: '',\n    //     // token: String,\n    //     // salt: String,\n    //     statut: '',\n    //     inscription: '',\n    //     birthday: '',\n    //     orders: []\n    // });\n\n    // useEffect(() => {\n\n    //     const fetchData = async () => {\n    //         let url = 'http://localhost:5000/getuser';\n    //         fetch(url, {\n    //             method: 'POST',\n    //             headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    //             body: `id=${userID}`\n    //         })\n    //             .then((response) => response.json())\n    //             .then((data) => {\n    //                 setuser({\n    //                     firstname: data.user.firstname,\n    //                     lastname: data.user.lastname,\n    //                     address: data.user.address,\n    //                     optional: data.user.optional,\n    //                     zipcode: data.user.zipcode,\n    //                     city: data.user.city,\n    //                     state: data.user.state,\n    //                     newsletter: data.user.newsletter,\n    //                     email: data.user.email,\n    //                     gender: data.user.gender,\n    //                     phone: data.user.phone,\n    //                     compagnyname: data.user.compagnyname,\n    //                     billingname: data.user.billingname,\n    //                     billingaddress: data.user.billingaddress,\n    //                     billingoptional: data.user.billingoptional,\n    //                     billingzipcode: data.user.billingzipcode,\n    //                     billingcity: data.user.billingcity,\n    //                     billingstate: data.user.billingstate,\n    //                     // password: '',\n    //                     // token: String,\n    //                     // salt: String,\n    //                     statut: data.user.statut,\n    //                     inscription: data.user.inscription,\n    //                     birthday: data.user.birthday,\n    //                     orders: data.user.orders\n    //                 })\n    //                 //console.log('je recois du back avec une billing vide', data.user.billingaddress)\n    //                 if (data.user.billingaddress != undefined) {\n    //                     setshowBilling(true);\n    //                 }\n    //             });\n    //     }\n    //     fetchData();\n    // }, []);\n\n    const submitForm = (e) => {\n        e.preventDefault()\n        if (password.confirm === password.new) {\n            setnomatch(false);\n            const fetchData = async () => {\n                let url = '/api/changepassword';\n                fetch(url, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                    body: `id=${userID}&current=${password.current}&new=${password.new}&confirm=${password.confirm}`\n                })\n                    .then((response) => response.json())\n                    .then((data) => {\n                        if (data.status) {\n                            setisSend(true);\n                        } else {\n                            setnomatchCurrent(true)\n                        }\n                    })\n            };\n            fetchData();\n        } else {\n            setnomatch(true);\n        }\n        console.log(password)\n        // e.preventDefault();\n        // let url = 'http://localhost:5000/updateuserdetails';\n        // fetch(url, {\n        //     method: 'POST',\n        //     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        //     body: `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&gender=${user.gender}&phone=${user.phone}&birthday=${user.birthday}`\n        // })\n        //     .then((response) => response.json())\n        //     .then((data) => {\n        //         console.log('retour du back === ', data.status)\n        //         if (data.status) {\n        //             setisSend(true);\n        //         } else {\n        //             console.log('erreur')\n        //         }\n        //     });\n    }\n\n    if (!isSend) {\n\n        return (\n            <div className='settingsBloc content'>\n\n                <div className=\"backToSearch set\">\n                    <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                    <h5 className=\"backSetting\" >Back to<a href='/myaccount' className=\"\">my Account</a>/<a href='/mysettings' className=\"\">my Settings </a></h5>\n                </div>\n\n                <div className='settingsdetails'>\n                    <div className='settingSubTitle'>\n                        <h5 className='settingSubTitleDetailL'>Change my Password</h5>\n                    </div>\n                    <form className='settingsContent setForm' onSubmit={(e) => submitForm(e)}>\n                        <label>Current Password *</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"password\"\n                            name=\"oldpass\"\n                            onChange={(e) => setpassword({ ...password, current: e.target.value })}\n                            value={password.current}\n                            required\n                        ></input>\n                        <label>New Password *</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"password\"\n                            name=\"newpass\"\n                            //pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                            onChange={(e) => setpassword({ ...password, new: e.target.value })}\n                            value={password.new}\n                            required\n                        ></input>\n\n                        <label>Confirm New Password *</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"password\"\n                            name=\"newpassverif\"\n                            onChange={(e) => setpassword({ ...password, confirm: e.target.value })}\n                            value={password.confirm}\n                            required></input>\n                        <div className={nomatch ? null : 'hide'}>\n                            <span style={{ color: 'red' }}>Your password and confirmation password do not match <br></br>\n                            This form could not be submitted. Please review your information.</span>\n                        </div>\n                        <div className={nomatchCurrent ? null : 'hide'}>\n                            <span style={{ color: 'red' }}>Wrong Password</span>\n                        </div>\n                        <div className='setFormBtn'>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" value=\"CHANGE PASSWORD\" />\n                            <Link to='/mysettings' className=\"cancel btnCancel\" >CANCEL</Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/mysettings' />\n    }\n};\n\nexport default UpdatePassword;","import React, { useState, useEffect } from 'react';\n//import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport checkIfExist from '../../Functions/checkIfExist';\n\nconst Success = (props) => {\n    const [userID, setuserID] = useLocalStorage('user', '');\n\n    if (checkIfExist(userID)) {\n        return (\n\n            <div className='content'>\n                <form className=\"form logoutBloc\">\n                    <h2>Congrats ! You're purchase is now on the way !</h2>\n                    <Link to='/products'>Back to Shopping</Link>\n                    <Link to='/myaccount'>See my order</Link>\n                    <img className=\"slide logout\" id='homeSlide0' src='home/homepic1.jpg'></img>\n                </form>\n            </div>\n        );\n    } else {\n        return (\n\n            <div className='content'>\n                <form className=\"form logoutBloc\">\n                    <h2>Congrats ! You're purchase is now on the way !</h2>\n                    <Link to='/products'>Back to Shopping</Link>\n                    <Link to='/signin'>Create an account</Link>\n                    <img className=\"slide logout\" id='homeSlide0' src='home/homepic1.jpg'></img>\n                </form>\n            </div>\n        );\n    }\n\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Success);","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Products from './Page/Shop/Products';\nimport Form from './Page/Form';\nimport Login from './Page/Login';\nimport Logout from './Page/Logout';\nimport Header from './Nav/Header';\nimport Change from './Page/Change';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport allOptions from './Functions/allOptions';\n\nimport HomePage from './Page/HomePage';\nimport About from './Page/About';\nimport Collection from './Page/CollectionFW20';\nimport Cart from './Page/Shop/Cart';\nimport ProductCard from './Page/Shop/ProductCard';\nimport Contact from './Page/Contact';\nimport Checkout from './Page/Checkout/Checkout';\nimport ShippingInfo from './Page/Checkout/ShippingInfo';\nimport MyAccount from './Page/Account/MyAccount';\nimport MySettings from './Page/Account/MySettings';\nimport Payment from './Page/Checkout/Payment';\nimport headCount from './Functions/headCount';\nimport useLocalStorage from './Functions/useLocalStore';\nimport SettingsForm from './Page/Account/SettingsForm';\nimport UpdatePassword from './Page/Account/UpdatePassword';\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport checkIfExist from './Functions/checkIfExist';\nimport Success from './Page/Checkout/Success';\n\nlibrary.add(fas);\n\n\nfunction mapStateToProps(state) {\n  console.log('APP get store', state)\n  return { userName: state.user, count: state.count }\n}\n\nfunction App(props) {\n  const [userID, setuserID] = useLocalStorage('user', '');\n  const [orderID, setorderID] = useLocalStorage('order', '');\n  const [productList, setproductList] = useState([]);\n  const [user, setuser] = useState('')\n  const [countBasket, setcountBasket] = useState(0);\n\n  useEffect(() => {\n    props.newOrder(orderID);\n    props.newUser(userID);\n\n\n    const fetchData = async () => {\n      let url = '/api/get-order-and-user-from-storage';\n      await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: `order=${orderID}&user=${userID}`\n      })\n        .then((response) => response.json())\n        .then(async (data) => {\n          await setproductList(data.basket);\n          await props.newBasket(data.basket);\n          await props.newCount(headCount(data.basket));\n          await setcountBasket(headCount(data.basket));\n          await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n          if (checkIfExist(data.orderID)) {\n            await localStorage.setItem('order', JSON.stringify(data.orderID));\n          }\n        });\n    };\n    fetchData();\n\n    props.newCount(countBasket)\n  }, []);\n\n  if (checkIfExist(props.userName)) {\n    console.log('je passe dans le if APP', props.userName)\n    return (\n      <div className=\"App\">\n\n        <Router>\n          <Switch>\n            <div>\n              <Header count={props.count} user={checkIfExist(props.userName)} />\n              {/* <Route\n                path='/dashboard'\n                render={(props) => <Dashboard {...props} isAuthed={true} />}\n              /> */}\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/products\" component={Products} />\n              <Route path=\"/form\" component={Form} />\n              <Route path=\"/signout\" component={Logout} />\n              <Route path=\"/signin\" component={Login} />\n              <Route path=\"/change\" component={Change} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/collection\" component={Collection} />\n              <Route path=\"/cart\" component={Cart} />\n              <Route path=\"/prodcard/:id\" component={ProductCard} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/shippinginfo\" component={ShippingInfo} />\n              <Route path=\"/signout\" component={Logout} />\n              {/* <Route\n                path='/signout'\n                render={(props) => <Logout {...props} user={checkIfExist(props.userName)} />}\n              /> */}\n              <Route path=\"/myaccount\" component={MyAccount} />\n              <Route path=\"/payment\" component={Payment} />\n              <Route path=\"/mysettings\" component={MySettings} />\n              <Route path=\"/settingsform/:form\" component={SettingsForm} />\n              <Route path=\"/updatepass\" component={UpdatePassword} />\n              <Route path=\"/success\" component={Success} />\n            </div>\n          </Switch>\n        </Router>\n      </div>\n    )\n  } else {\n    console.log('je passe dans le else APP', props.userName)\n    return (\n      <div className=\"App\">\n\n        <Router>\n          <Switch>\n            <div>\n              <Header count={props.count} user={checkIfExist(props.userName)} />\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/products\" component={Products} />\n              <Route path=\"/form\" component={Form} />\n              <Route path=\"/signout\" component={Logout} />\n              <Route path=\"/signin\" component={Login} />\n              <Route path=\"/change\" component={Change} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/collection\" component={Collection} />\n              <Route path=\"/cart\" component={Cart} />\n              <Route path=\"/prodcard/:id\" component={ProductCard} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/shippinginfo\" component={ShippingInfo} />\n              <Route path=\"/payment\" component={Payment} />\n              <Route path=\"/success\" component={Success} />\n\n            </div>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newUser: function (userToSend) {\n      console.log('je suis dans le NEW USER REDUCER', userToSend)\n      dispatch({ type: 'setUser', user: userToSend })\n    },\n    newCount: function (countToSend) {\n      console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n      dispatch({ type: 'setCount', count: countToSend })\n    },\n    newBasket: function (basketToSend) {\n      console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n      dispatch({ type: 'updateBasket', basket: basketToSend })\n    },\n    newOrder: function (orderToSend) {\n      console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n      dispatch({ type: 'setOrder', order: orderToSend })\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function (user = '', action) {\n    // signup\n    if (action.type === 'setUser') {\n        console.log(action.user)\n        return action.user;\n        // } else if (action.type === 'decoUser') {\n        //     console.log('==============================deco user', action, user);\n        //     return user;\n    } else {\n        return user;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport user from './Reducers/user.reducer';\nimport basket from './Reducers/shop.reducer';\nimport count from './Reducers/count.reducer';\nimport order from './Reducers/order.reducer';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nconst store = createStore(combineReducers({ user, basket, count, order }));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default function (basket = [], action) {\n    //console.log('action redux shop', action);\n    // signup\n    if (action.type === 'setBasket') {\n        basket.push(action.basket);\n        return basket;\n    } else if (action.type === 'updateBasket') {\n        console.log('updateBasket =========', action.basket)\n        return action.basket;\n    } else if (action.type === 'deleteBasket') {\n        //console.log('retour du front au reducer', action);\n        return action.basket;\n    } else {\n        return basket;\n    }\n}\n","export default function (count = 0, action) {\n    //console.log('action redux shop', action);\n    // signup\n    if (action.type === 'setCount') {\n        //console.log('redux count', action.count);\n        return action.count;\n    } else {\n        return count;\n    }\n}\n","import checkIfExist from \"../Functions/checkIfExist\";\n\nexport default function (order = '', action) {\n    //console.log('action redux shop', action);\n    // signup\n    if (action.type === 'setOrder') {\n        if (checkIfExist(action.order)) {\n            return action.order;\n        } else {\n            return order\n        }\n\n    } else {\n        return order;\n    }\n}\n"],"sourceRoot":""}