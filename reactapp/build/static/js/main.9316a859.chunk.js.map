{"version":3,"sources":["logo.svg","Page/Shop/Products.js","Page/Form.js","Functions/allOptions.js","Functions/useLocalStore.js","Functions/headCount.js","Functions/checkIfExist.js","Page/Login.js","Page/Logout.js","Nav/Header.js","Page/Change.js","Page/Slide.js","Page/HomePage.js","Page/About.js","Page/CollecSlide.js","Page/CollectionFW20.js","Functions/roundNum.js","Page/Shop/Cart.js","Components/PopUpAddProduct.js","Page/Shop/ProductSlide.js","Page/Shop/ProductCard.js","Components/PopUpMsgSent.js","Page/Contact.js","Page/Checkout/Checkout.js","Page/Checkout/ShippingInfo.js","Functions/formatDate.js","Page/Account/MyAccount.js","Page/Account/MySettings.js","Components/MyCheckoutForm.js","Components/CheckoutShipForm.js","Page/Checkout/Payment.js","Page/Account/SettingsForm.js","Page/Account/UpdatePassword.js","Page/Checkout/Success.js","Components/PopUpRetrievePassSent.js","Page/Account/AskForNewPass.js","Page/Account/ResetPassword.js","App.js","serviceWorker.js","Reducers/user.reducer.js","index.js","Reducers/shop.reducer.js","Reducers/count.reducer.js","Reducers/order.reducer.js"],"names":["module","exports","Product","props","useState","productList","setproductList","storeId","setstoreId","useEffect","window","scrollTo","a","fetch","then","response","json","products","catch","error","console","log","fetchData","goToProdCard","arg","prodList","map","product","i","style","float","className","key","onClick","e","target","id","_id","src","img","ref","name","price","to","Form","type","enabled","setproduct","redirect","setredirect","newProduct","preventDefault","method","headers","body","margin","placeholder","onChange","value","required","allOptions","undefined","useLocalStorage","initialValue","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","headCount","temp","tempcount","length","quantity","checkIfExist","connect","dispatch","newUser","userToSend","user","newCount","countToSend","count","newBasket","basketToSend","basket","newOrder","orderToSend","order","firstname","lastname","email","password","setuser","orderID","guestID","olduser","setolduser","isLogged","setisLogged","setuserToSend","notRegistered","setnotRegistered","location","query","pathname","onSubmit","data","status","removeItem","update","alert","loginUser","login","state","userName","isExpanded","setisExpanded","active","setactive","tempUser","urlCurrent","href","url","split","handleToggle","exact","icon","faShoppingBag","faBars","faTimes","Change","updateProduct","setupdateProduct","idProduct","proprietes","duration","transitionDuration","infinite","indicators","arrows","Slideshow","picList","slideList","imgSource","alt","paddingTop","Slide","About","CollecSlide","fw19picList","ss20picList","collectionToShowValue","setcount","prevRef","useRef","current","listToCheck","collectionToShowID","handleUserKeyPress","useCallback","event","keyCode","setshow","document","addEventListener","removeEventListener","goNext","goBack","faChevronLeft","faChevronRight","Collection","showCollection","setshowCollection","fullScreen","setfullScreen","imgToPass","setimgToPass","showFullScreen","fw19List","ss20List","faBolt","auMillieme","nombre","Math","round","userID","totalCart","settotalCart","totalProdQty","settotalProdQty","deleteproduct","updateQty","qty","size","faMinus","faPlus","class","faTrashAlt","display","justifyContent","flexDirection","PopUp","toShop","settoShop","toCart","settoCart","text","ProductSlide","arrayToDisplay","hideArrow","sethideArrow","currentBasket","setcurrentBasket","imgToDisplay","setimgToDisplay","productID","productToBasket","setproductToBasket","showPopup","setshowPopup","smallScreen","setsmallScreen","screen","width","match","params","description","addProduct","faArrowLeft","PopUpMsg","faPaperPlane","Contact","message","form","setform","msgSend","setmsgSend","height","fontSize","marginLeft","handleForm","guest_id","userAssociate","setuserAssociate","clickCreate","setclickCreate","userEmail","popUp","setpopUp","address","optional","zipcode","city","phone","newsletter","guest","setguest","setguestID","sendForm","pattern","checked","formatDate","date","birthday","Date","date1","getDate","date2","getMonth","date3","getFullYear","orders","setorders","setname","getOrder","getElementById","showLess","orderList","fontWeight","validationdate","totalorder","billingaddress","marginBottom","marginTop","compagnyname","billingoptional","billingzipcode","billingcity","billingstate","faArrowRight","MySettings","showBilling","setshowBilling","gender","billingname","statut","inscription","subscribe","CARD_ELEMENT_OPTIONS","base","color","fontFamily","fontSmoothing","invalid","iconColor","stripeTokenHandler","token","paymentData","stripe","useStripe","elements","useElements","cardElement","setcardElement","handleSubmit","card","getElement","CardElement","createToken","result","retourBack","updateData","setPaymentValid","options","disabled","CheckoutShipForm","showFormShip","setshowFormShip","showFormBill","setshowFormBill","noship","setnoShip","storeFormShip","setstoreFormShip","storeFormBill","setstoreFormBill","submitFormShipping","typeForm","setnewUser","setValidShowPayment","submitFormAddress","stripePromise","loadStripe","finalBasket","setfinalBasket","showPayment","setshowPayment","payValid","setpayValid","MyCheckoutForm","SettingsForm","isSend","setisSend","submitForm","valueAsDate","UpdatePassword","new","confirm","setpassword","nomatch","setnomatch","nomatchCurrent","setnomatchCurrent","PopUpRetrievePassSent","link","content","AskForNewPass","isSent","setisSent","msg","resetpass","ResetPass","newpass","confirmpass","showNo","setshowNo","library","add","fas","countBasket","setcountBasket","path","component","HomePage","Products","Logout","Login","Cart","ProductCard","Checkout","ShippingInfo","MyAccount","Payment","Success","ResetPassword","Boolean","hostname","store","createStore","combineReducers","action","push","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9316a859.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\n\n// function mapStateToProps(state) {\n//   console.log('home page get user', state)\n//   return { userName: state.user }\n// }\nconst Product = (props) => {\n\n  const [productList, setproductList] = useState([]);\n\n  // const [basketList, setbasketList] = useState([]);\n\n  const [storeId, setstoreId] = useState('');\n\n  //je recupere ma liste de produits\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const fetchData = async () => {\n      await fetch('/api/product')\n        .then(response => response.json())\n        .then(response => setproductList(response.products))\n        .catch(error => console.log(\"erreur fetch\", error))\n    }\n    fetchData()\n  }, []);\n\n  //j'ajoute un produit dans mon panier\n  // var addProduct = async (arg) => {\n  //   let basket = [...basketList];\n  //   basket.push(arg);\n  //   setbasketList(basket);\n  //   console.log(basketList);\n  //   await props.newProduct(basketList);\n  // };\n  let goToProdCard = async (arg) => {\n    setstoreId(arg);\n  };\n\n\n  var prodList = productList.map((product, i) => {\n\n    return (\n      <span style={{ float: \"left\" }} className='products' key={i}  >\n        <img onClick={(e) => { console.log(e.target.id); goToProdCard((e.target.id)) }} id={product._id} className=\"productPic\" src={`/products/${product.img[0].ref}`} />\n        <h4>{product.name}</h4>\n        <span>\n          <h5>{product.price}€</h5>\n          {/* <h5>Type de produit : {product.type}</h5> */}\n        </span>\n        {/* <div>\n          <button className='change-btn' onClick={(e) => { addProduct(e.target.value) }} value={product._id}>Ajouter au panier</button>\n        </div> */}\n      </span >\n    )\n  });\n\n  if (storeId === '') {\n    return (\n      <div className=\"blocProduct content\">\n        {/* <div>\n          <h3 className=\"user\">Bienvenue {props.userName}</h3>\n        </div> */}\n        {prodList}\n      </div >\n    );\n  } else {\n    return (\n      <Redirect to={`/prodcard/${storeId}`} />\n    )\n  }\n\n};\n\n\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     newProduct: function (productsToSend) {\n//       console.log('jes suis dans le mapdispatch', productsToSend)\n//       dispatch({ type: 'setBasket', product: productsToSend })\n//     }\n//   }\n// }\n\n//export default connect(mapStateToProps, mapDispatchToProps)(Product);\nexport default Product;\n\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Form = (props) => {\n\n\tconst [product, setproduct] = useState({\n\t\tname: '',\n\t\tprice: 0,\n\t\ttype: '',\n\t\tenabled: true\n\t});\n\tconst [redirect, setredirect] = useState(true);\n\n\t//j'ajoute un nouveau produit dans ma bdd : \n\tconst newProduct = async (e) => {\n\n\t\te.preventDefault();\n\t\tlet url = '/api/addproduct';\n\n\t\tawait fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n\t\t\tbody: `name=${product.name}&price=${product.price}&type=${product.type}&enabled=${product.enabled}`\n\t\t}).then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\treturn <Redirect to={`/`} />;\n\t\t\t})\n\t\tsetredirect(false);\n\t\tconsole.log(\"j'ajoute ce produit : \", product);\n\t};\n\n\n\tif (redirect) {\n\t\treturn (\n\t\t\t<div id=\"form\">\n\t\t\t\t<form className=\"new-product\">\n\t\t\t\t\t<h2 style={{ margin: 30 }}>Ajouter un produit</h2>\n\t\t\t\t\t<div className='form'>\n\n\t\t\t\t\t\t<h5 className='inputname'>Nom :</h5>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"Product-input\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tplaceholder=\"Nom du produit\"\n\t\t\t\t\t\t\tonChange={(e) => setproduct({ ...product, name: e.target.value })}\n\t\t\t\t\t\t\tvalue={product.name}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<h5 className='inputname' >Prix :</h5>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tclassName=\"Product-input\"\n\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\tplaceholder=\"Prix du produit\"\n\t\t\t\t\t\t\tonChange={(e) => setproduct({ ...product, price: e.target.value })}\n\t\t\t\t\t\t\tvalue={product.price}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<h5 className='inputname' >Type :</h5>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"Product-input\"\n\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\tplaceholder=\"Type de produit\"\n\t\t\t\t\t\t\tonChange={(e) => setproduct({ ...product, type: e.target.value })}\n\t\t\t\t\t\t\tvalue={product.type}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<input className='button' type=\"submit\" method=\"post\" value=\"Ajouter Produit\" onClick={(e) => newProduct(e)} />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div >\n\t\t);\n\t} else {\n\t\t//si mon produit est bien ajouté je retourne sur le listing :\n\t\treturn <Redirect to=\"/\" />\n\t}\n};\n\nexport default Form;\n\n","\nexport default function allOptions(name) {\n\n    return (name === 'undefined' || name === null || name === undefined || name === '');\n\n}","import React, { useState, useEffect } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};\n\nexport default useLocalStorage;","export default function headCount(temp) {\n    if (temp != null && temp != []) {\n        //console.log('je suis la =', temp)\n        let tempcount = 0;\n        for (var i = 0; i < temp.length; i++) {\n            tempcount = tempcount + temp[i].quantity;\n        }\n        return tempcount;\n    } else {\n        //console.log('je suis ici =', temp)\n        return 0;\n    }\n}","\nexport default function checkIfExist(name) {\n    if (name === 'undefined' || name === null || name === undefined || name === '' || name === false || name === []) {\n        return false;\n    } else {\n        return true;\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport allOptions from '../Functions/allOptions';\nimport useLocalStorage from '../Functions/useLocalStore';\nimport headCount from '../Functions/headCount';\nimport checkIfExist from '../Functions/checkIfExist';\n\nconst Login = (props) => {\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n    });\n\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n\n    const [olduser, setolduser] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [isLogged, setisLogged] = useState(false);\n\n    const [userToSend, setuserToSend] = useState('');\n    const [notRegistered, setnotRegistered] = useState(false);\n\n    useEffect(() => {\n        if (checkIfExist(props.location.query)) {\n            if (props.location.query.notRegistered) {\n                setnotRegistered(true)\n            }\n        }\n    }, [])\n    // je cree un nouvel user\n    const login = (e) => {\n        e.preventDefault();\n\n        let url = '/api/newuser';\n        // let body = `orderID=${orderID}&email=${user.email}&password=${user.password}&statut=user`\n        // if (allOptions(orderID)) {\n        //     body = `email=${user.email}&password=${user.password}&statut=user&order=${orderID}`\n        // }\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, //encodage\n            //body: `firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&password=${user.password}`\n            body: `email=${user.email}&password=${user.password}&statut=user&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('hello ============', data.status)\n                if (data.status) {\n                    const update = async () => {\n                        await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        await props.newUser(data.id);\n                        if (checkIfExist(guestID)) {\n                            await window.localStorage.removeItem('guest');\n                        }\n                    }\n\n                    update();\n                    setisLogged(true);\n                } else {\n                    function myFunction() {\n                        alert(\"An account already exist for this email address\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n    //je me connecte\n    const loginUser = (e) => {\n        e.preventDefault();\n        let url = '/api/login';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `email=${olduser.email}&password=${olduser.password}&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"hello ======\", data)\n                if (data.status) {\n                    const update = async () => {\n                        await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        await localStorage.setItem('order', JSON.stringify(data.order));\n                        await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                        props.newUser(data.id);\n                        props.newOrder(data.order);\n                        props.newBasket(data.basket);\n                        props.newCount(headCount(data.basket));\n                        if (checkIfExist(guestID)) {\n                            await window.localStorage.removeItem('guest');\n                        }\n                    }\n                    update();\n                    setisLogged(true);\n                } else {\n                    function myFunction() {\n                        alert(\"le mot de passe et l'email ne correspondent pas\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n    if (isLogged) {\n        return <Redirect to={{ pathname: '/', user: userToSend }} />;\n    } else {\n        return (\n            <div className=\"blocSignIn content\">\n                {notRegistered ? null :\n                    <form className={notRegistered ? \"form\" : \"formfull\"} onSubmit={(e) => loginUser(e)}>\n                        <h2>LOG IN</h2>\n                        <span className=\"logContent\">\n                            <label>Email</label>\n                            <input\n                                type=\"email\"\n                                className=\"Login-input\"\n                                name=\"login_email\"\n                                placeholder=\"Your email\"\n                                onChange={(e) => setolduser({ ...olduser, email: e.target.value })}\n                                value={olduser.email}\n                                required\n                            />\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"Login-input\"\n                                name=\"login_password\"\n                                placeholder=\"Your password\"\n                                onChange={(e) => setolduser({ ...olduser, password: e.target.value })}\n                                value={olduser.password}\n                                required\n                            />\n                            <div>\n                                <Link className=\"resetPass L\" to=\"/askfornewpass\">Forgot your password ?</Link>\n                                <Link className=\"resetPass R\" onClick={(e) => setnotRegistered(true)}>Not registered yet ? Create an Account</Link>\n                            </div>\n                        </span>\n                        <input className=\"button log\" type=\"submit\" method=\"post\" value=\"LOG IN\" />\n                    </form>\n                }\n                {\n                    notRegistered ?\n                        <form className={notRegistered ? \"formfull\" : \"form\"} onSubmit={(e) => login(e)}>\n                            <h2>REGISTER</h2>\n                            <span className=\"logContent\">\n                                <h5 >If you still don't have a Squillace account, use this registration form to join in.</h5>\n                                {/* <label>First Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"firstname\"\n                            placeholder=\"your first name\"\n                            onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                            value={user.firstname}\n                            required\n                        />\n                        <label>Last Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"lastname\"\n                            placeholder=\"your last name\"\n                            onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                            value={user.lastname}\n                            required\n                        /> */}\n                                <label>Email</label>\n                                <input\n                                    type=\"email\"\n                                    className=\"Login-input\"\n                                    name=\"login_email\"\n                                    placeholder=\"Votre email\"\n                                    onChange={(e) => setuser({ ...user, email: e.target.value })}\n                                    value={user.email}\n                                    required\n                                />\n                                <label>Password\n                    </label>\n                                <input\n                                    type=\"password\"\n                                    className=\"Login-input\"\n                                    name=\"login_password\"\n                                    placeholder=\"Votre mot de passe\"\n                                    onChange={(e) => setuser({ ...user, password: e.target.value })}\n                                    value={user.password}\n                                    required\n                                />\n\n                                <Link className=\"resetPass\" onClick={(e) => setnotRegistered(false)}>Already registered ? Please Sign In</Link>\n\n                            </span>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" value='CREATE ACCOUNT' />\n                        </form>\n                        : null\n                }\n            </div >\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","import React, { useState, useEffect } from 'react';\n//import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nconst Logout = (props) => {\n\n    useEffect(() => {\n        props.newUser('')\n        window.localStorage.removeItem('user');\n    })\n\n    return (\n\n        <div className='content'>\n            <form className=\"form logoutBloc\">\n                <h2>You're logged Out !</h2>\n                <Link to='/products'>Back to Shopping</Link>\n                <img className=\"slide logout\" id='homeSlide0' src='home/homepic1.jpg'></img>\n            </form>\n        </div>\n    );\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/fontawesome-free-solid';\nimport { faMitten, faTimes, faShoppingBag } from '@fortawesome/free-solid-svg-icons'\nimport checkIfExist from '../Functions/checkIfExist';\n\n\nfunction mapStateToProps(state) {\n    //console.log('home page get user', state)\n    return { userName: state.user }\n}\n\nconst Header = (props) => {\n    const [isExpanded, setisExpanded] = useState(false);\n    const [signModal, setsignModal] = useState(false);\n    const [count, setcount] = useState(0);\n    const [user, setuser] = useState('');\n    const [active, setactive] = useState('');\n\n\n    useEffect(() => {\n        let tempUser = JSON.parse(window.localStorage.getItem('user'));\n        console.log('user ==========', JSON.parse(window.localStorage.getItem('user')))\n        let urlCurrent = window.location.href\n        let url = urlCurrent.split(\"/\")\n        setactive(url[3])\n        console.log(\"url\", urlCurrent.split(\"/\"))\n\n        if (tempUser != null) {\n            setuser(tempUser);\n        }\n    }, []);\n\n    let handleToggle = (e) => {\n        e.preventDefault();\n        setisExpanded(!isExpanded);\n\n    }\n\n    let signInUp = (e) => {\n        setsignModal(!signModal);\n    }\n\n    return (\n        <header className='header'>\n            <div className='title'>\n                <Link to=\"/\" exact onClick={(e) => setactive('')}>\n                    <img className=\"logo\" src='/logo.png' />\n                    {/* <h2>Martina Squillace</h2> */}\n                </Link>\n            </div>\n            <div className=\"linksWeb\">\n                <ul className='lienweb'>\n                    {/* <FontAwesomeIcon className=\"linksPhone\" icon={faMitten} /> */}\n                    <li className=\"linkHeader\" ><Link to=\"/about\" className={active === \"about\" ? \"active\" : null} onClick={(e) => setactive('about')}>About </Link></li>\n                    <li className=\"linkHeader\"\n                    //onClick={e => signInUp(e)}\n                    ><Link className={active === \"collection\" ? \"active\" : null} to='/collection' onClick={(e) => setactive('collection')}>Collection</Link></li>\n                    {/* <span className={`${signModal ? \"signModal\" : \"collapsedModal\"}`} onMouseLeave={e => signInUp(e)}>\n                        <li className=\"linkHeader\" onClick={e => signInUp(e)}><Link>Collection</Link></li>\n                        <Link to=\"/myaccount\" style={{ fontSize: 12 }}>Spring/Summer 20</Link>\n                        <Link to=\"/myaccount\" style={{ fontSize: 12 }}>Fall/Winter 19</Link>\n                    </span> */}\n                    <li className=\"linkHeader\" ><Link className={active === \"products\" ? \"active\" : null} to=\"/products\" onClick={(e) => setactive('products')}>Shop</Link></li>\n                    <li className=\"linkHeader\" ><Link className={active === \"contact\" ? \"active\" : null} to=\"/contact\" onClick={(e) => setactive('contact')}>Contact</Link></li>\n                    {props.user ?\n                        <span className=\"linkHeader\">\n                            <li className=\"linkHeader\" >\n                                <Link to=\"/myaccount\" className={active === \"myaccount\" ? \"active\" : null} onClick={(e) => setactive('myaccount')}>My Account</Link></li>\n                        </span>\n                        :\n                        <li className=\"linkHeader\" ><Link className={active === \"signin\" ? \"active\" : null} to=\"/signin\" onClick={(e) => setactive('signin')}>Sign In</Link></li>}\n                    {/* <li className=\"linkHeader\" ><Link to=\"/signout\">My Account</Link></li> */}\n                    {/* <span className=\"linkHeader\" >\n                            <li className=\"linkHeader\" onMouseOver={e => signInUp(e)} >My Account</li>\n                            <span className={`${signModal ? \"signModal\" : \"collapsedModal\"}`} onMouseLeave={e => signInUp(e)}>\n                                <Link to=\"/myaccount\" style={{ fontSize: 12 }}>My Account</Link>\n                                <Link to=\"/myaccount\" style={{ fontSize: 12 }}>Wishlist</Link>\n                                <Link to=\"/signout\" style={{ fontSize: 12 }}>Log Out</Link>\n                            </span>\n                        </span> */}\n\n                    <li className=\"linkHeader\" onClick={e => handleToggle(e)}>\n                        <Link to=\"/cart\" className={active === \"cart\" ? \"active\" : null} onClick={(e) => setactive('cart')}>\n                            <FontAwesomeIcon icon={faShoppingBag} /> ({props.count})\n                        </Link>\n                    </li>\n                    {/* <Link to=\"/form\">\n                        <h2>Ajouter des Produits</h2>\n                    </Link> */}\n                </ul>\n            </div>\n            <nav className=\"linksMobil\" >\n                {!isExpanded ? <FontAwesomeIcon icon={faBars}\n                    className=\"fa-2x menuToogle\"\n                    onClick={e => handleToggle(e)}\n                /> : null}\n                {/* <img src=\"fabar.png\"\n                        className=\"menuToogle\"\n                        onClick={e => handleToggle(e)}\n                    />class=\"fa fa-circle fa-stack-2x\" */}\n                {isExpanded ? <FontAwesomeIcon icon={faTimes}\n                    className=\"fa-2x menuToogle\"\n                    onClick={e => handleToggle(e)}\n                /> : null}\n                {isExpanded ?\n                    <ul className=\"is-expanded\">\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/about\">About </Link></li>\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/collection\">Collection</Link></li>\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/products\">Shop</Link></li>\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/contact\">Contact</Link></li>\n                        {props.user ?\n                            <li className=\"linkHeader\" onClick={e => handleToggle(e)}><Link to=\"/myaccount\">My Account</Link></li>\n                            :\n                            <li className=\"linkHeader\" ><Link to=\"/signin\">Sign In</Link></li>}\n                        {/* <li className=\"linkHeader\" onMouseOver={e => signInUp(e)} >My Account</li>\n                        <span className={`${signModal ? \"signModal\" : \"collapsedModal\"}`} onMouseLeave={e => signInUp(e)}>\n                            <Link to=\"/myaccount\">My Account</Link>\n                            <Link to=\"/signout\" style={{ fontSize: 12 }}>Log Out</Link>\n                        </span> */}\n                        <li className=\"linkHeader\" onClick={e => handleToggle(e)}>\n                            <Link to=\"/cart\">\n                                <FontAwesomeIcon icon={faShoppingBag} /> ({props.count})\n                        </Link>\n                        </li>\n\n                    </ul> : null}\n            </nav>\n        </header >\n    )\n\n}\n\nexport default connect(mapStateToProps, null)(Header);","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Change = (props) => {\n\n    const [product, setproduct] = useState({\n        id: '',\n        name: '',\n        price: 0,\n        type: ''\n    });\n    const [updateProduct, setupdateProduct] = useState([]);\n    const [redirect, setredirect] = useState(true);\n\n    // je recupere le produit a modifier\n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch(`/api/get-one-product?id=${props.location.idProduct}`)\n                .then(response => response.json())\n                .then(response => {\n                    setproduct({ id: response.products._id, name: response.products.name, price: response.products.price, type: response.products.type })\n                    setupdateProduct({ ...updateProduct, id: response.products._id })\n                })\n                .catch(error => console.log(\"erreur fetch\", error))\n        }\n        fetchData()\n    }, []);\n\n    //je change mon produit\n    var changeProduct = () => {\n        fetch(`/api/changeproduct`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${updateProduct.id}&name=${updateProduct.name}&price=${updateProduct.price}&type=${updateProduct.type}`\n        }).then(response => { setredirect(false) })\n            .catch(error => console.log(\"erreur fetch\", error))\n    }\n    if (redirect) {\n        return (\n            <div id=\"blocHome content\">\n                <div>\n                    <div className='products'>\n                        <div>\n                            <h3>{product.name}</h3>\n                            <h5>Prix : {product.price}€</h5>\n                            <h5>Type de produit : {product.type}</h5>\n                        </div>\n                        <div>\n                            <h5>Remplacer le nom du produit par :</h5>\n                            <input\n                                type=\"text\"\n                                className=\"Product-input\"\n                                name=\"name\"\n                                placeholder={product.name}\n                                onChange={(e) => setupdateProduct({ ...updateProduct, name: e.target.value })}\n                                value={updateProduct.name}\n                            />\n                            <h5>Remplacer le prix du produit par :</h5>\n                            <input\n                                type=\"number\"\n                                className=\"Product-input\"\n                                name=\"price\"\n                                placeholder={product.price}\n                                onChange={(e) => setupdateProduct({ ...updateProduct, price: e.target.value })}\n                                value={updateProduct.price}\n                            />\n                            <h5>Remplacer le type du produit par :</h5>\n                            <input\n                                type=\"text\"\n                                className=\"Product-input\"\n                                name=\"type\"\n                                placeholder={product.type}\n                                onChange={(e) => setupdateProduct({ ...updateProduct, type: e.target.value })}\n                                value={updateProduct.type}\n                            />\n                            <div >\n                                <button className='change-btn'\n                                    onClick={(e) => { changeProduct(e.target.value) }}\n                                    value={product.id}>Modifier Produit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n\n            </div>\n        );\n    } else {\n        return <Redirect to=\"/\" />\n    }\n};\n\nexport default Change;\n","import React, { useState, useEffect } from 'react';\nimport { Slide, slideRef } from 'react-slideshow-image';\n// import img1 from \"../../public/homepic.jpg\";\n// import img2 from \"../../public/homepic1.jpg\";\n// import img3 from \"../../public/homepic2.jpg\";\nconst proprietes = {\n    duration: 5000,\n    transitionDuration: 500,\n    infinite: true,\n    indicators: true,\n    arrows: true\n}\n\nconst Slideshow = () => {\n    const [picList, setpicList] = useState([\n        'homepic.png', 'homepic1.jpg', 'homepic2.jpg', 'homepic3.jpg', 'homepic4.jpg', 'homepic5.jpg', 'homepic6.jpg',\n        //'homepic7.jpg', 'homepic8.jpg',\n        //'homepic9.jpg', 'homepic10.jpg'\n    ]);\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n    var slideList = picList.map((imgSource, i) => {\n\n        return (\n            <div className=\"each-slide\">\n                <div className=\"containerSlide\">\n                    {/* <div className=\"testSlideLeft\" onClick={(e) => { e.slideRef.goBack() }}> </div>\n                    <div className=\"testSlideRight\" onClick={(e) => { e.slideRef.goNext() }}> </div> */}\n                    <img className=\"slide\" src={`home/${imgSource}`} alt=\"img1\" />\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div >\n\n            <Slide {...proprietes} >\n                {slideList}\n            </Slide>\n        </div>\n    )\n}\n\nexport default Slideshow;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Slideshow from './Slide';\n// import { useMediaQuery } from 'react-responsive';\n\nfunction mapStateToProps(state) {\n    console.log('home page get user HOME', state)\n    return { userName: state.user }\n}\nconst HomePage = (props) => {\n\n    const [picList, setpicList] = useState([\n        'homepic.png', 'homepic1.jpg', 'homepic2.jpg', 'homepic3.jpg', 'homepic4.jpg', 'homepic5.jpg', 'homepic6.jpg',\n        //'homepic7.jpg', 'homepic8.jpg',\n        //'homepic9.jpg', 'homepic10.jpg'\n    ]);\n\n    const [count, setcount] = useState(0);\n    // const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\n    // const isBigScreen = useMediaQuery({ minDeviceWidth: 1824 })\n    // const isTabletOrMobile = useMediaQuery({ maxWidth: 1224 })\n    // const isTabletOrMobileDevice = useMediaQuery({ maxDeviceWidth: 1224 })\n    // const isPortrait = useMediaQuery({ orientation: 'portrait' })\n    // const isRetina = useMediaQuery({ minResolution: '2dppx' })\n    //je passe les photos\n\n    // useEffect(() => {\n    //     var i = 0;\n    //     // var images = { picList };\n    //     var time = 2000;\n    //     changeImg(picList, time, i);\n    // }, []);\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    let changeImg = (images, time, i) => {\n        document.getElementById(\"slide\").src = images[i];\n        //document.slide.src = images[i];\n        if (i < (images.length - 1)) {\n            i++;\n        } else {\n            i = 0;\n        }\n        setTimeout(changeImg(), time);\n    }\n    var nextPic = (arg) => {\n        if (count <= (picList.length - 2)) {\n            setcount(count + 1)\n        } else {\n            setcount(0);\n        }\n    }\n\n    var prevPic = (arg) => {\n        if (count > 1) {\n            setcount(count - 1)\n        } else {\n            setcount((picList.length - 1))\n        }\n    }\n\n\n    return (\n        <div style={{ paddingTop: 90 }}>\n\n            {/* <div className='slideshow'  > */}\n            <Slideshow />\n            {/* <div className=\"testSlideLeft\" onClick={(e) => { prevPic(e.target.value) }}> </div>\n                <div className=\"testSlideRight\" onClick={(e) => { nextPic(e.target.value) }}> </div>\n                <img className=\"slide\" id='homeSlide0' src={picList[count]}></img> */}\n            {/* </div> */}\n\n            <div className=\"footer\">\n                <a href=\"https://www.facebook.com/martina.squillacedesigner\" target=\"_blanck\" alt=''>\n                    <img src=\"logofbk.png\" className=\"socMedia\" alt='' />\n                </a>\n                <a href=\"https://www.pinterest.it/martinasquillac/\" target=\"_blanck\" alt=''>\n                    <img src=\"logopinterest.png\" className=\"socMedia\" alt='' />\n                </a>\n                <a href=\"https://www.instagram.com/martinasquillace/?hl=fr\" target=\"_blanck\" alt=''>\n                    <img src=\"logoinsta.png\" className=\"socMedia\" alt='' />\n                </a>\n                <a href=\"/contact\" target=\"_blanck\" alt=''>\n                    <img src=\"logomail.png\" className=\"socMedia\" alt='' />\n                </a>\n            </div>\n        </div >\n    );\n\n};\n\nexport default connect(mapStateToProps, null)(HomePage);\n\n","\nimport React, { useState, useEffect } from 'react';\n\nconst About = (props) => {\n\n    // const [picList, setpicList] = useState([\n    //     'homepic.png', 'homepic1.png', 'homepic2.png', 'homepic3.png', 'homepic4.png', 'homepic5.png', 'homepic6.png', 'homepic7.png', 'homepic8.jpg', 'homepic9.jpg', 'homepic10.jpg'\n    // ]);\n\n    // const [count, setcount] = useState(0);\n\n    // var nextPic = (arg) => {\n    //     if (count <= (picList.length - 2)) {\n    //         setcount(count + 1)\n    //     } else {\n    //         setcount(0);\n    //     }\n    // }\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    return (\n        <div className=\"about content\">\n            <div className=\"aboutSub\">\n                <img className=\"aboutPic\" src=\"martina.jpg\" alt='' />\n            </div>\n            <div className=\"aboutSub\">\n                <h5 className=\"aboutText\">\n                    Martina Squillace is an Italian Art Director and Stylist based in Paris.<br /><br />\n\n                    After her fashion design studies she has worked with numerous brands troughtout design and commercial departements, where she learned the importance of visual communication, which has become her passion and her work through styling and art direction.<br /><br />\n\n                    Her style, which is characterized by a savage instinct and also an elegant attitude, is the result of continuous cultural and spiritual research.\n                </h5>\n            </div>\n        </div>\n\n    );\n\n};\n\nexport default About;\n\n\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { set } from 'mongoose';\nimport { faShower } from '@fortawesome/fontawesome-free-solid';\n\nconst CollecSlide = (props) => {\n\n    const [fw19picList, setfw19picList] = useState([\n        \"fw19/1.jpg\", \"fw19/2.jpg\", \"fw19/3.jpg\", \"fw19/4.jpg\", \"fw19/5.jpg\", \"fw19/6.jpg\", \"fw19/7.jpg\", \"fw19/8.jpg\", \"fw19/9.jpg\", \"fw19/10.jpg\", \"fw19/11.jpg\", \"fw19/12.jpg\", \"fw19/13.jpg\", \"fw19/14.jpg\", \"fw19/15.jpg\", \"fw19/16.jpg\"\n    ]);\n    const [ss20picList, setss20picList] = useState([\n        \"ss20/1.jpg\", \"ss20/2.jpg\", \"ss20/3.jpg\", \"ss20/4.jpg\", \"ss20/5.jpg\", \"ss20/6.jpg\", \"ss20/7.jpg\", \"ss20/8.jpg\", \"ss20/9.jpg\", \"ss20/10.jpg\", \"ss20/11.jpg\", \"ss20/12.jpg\", \"ss20/13.jpg\", \"ss20/14.jpg\", \"ss20/15.jpg\", \"ss20/16.jpg\"\n    ]);\n    const [count, setcount] = useState(props.collectionToShowValue);\n    const prevRef = useRef();\n    useEffect(() => {\n        prevRef.current = count;\n    });\n\n    let listToCheck = props.collectionToShowID === \"fw19\" ? fw19picList : ss20picList\n\n    const handleUserKeyPress = useCallback(event => {\n        const { key, keyCode } = event;\n        if (key === \"ArrowRight\") {\n            if (prevRef.current < listToCheck.length - 1) {\n                setcount(prevRef.current + 1);\n            } else {\n                setcount(0);\n            }\n        } else if (key === \"ArrowLeft\") {\n            if (prevRef.current !== 0) {\n                setcount(prevRef.current - 1);\n            } else {\n                setcount(listToCheck.length - 1);\n            }\n        } else if (key === \"Escape\") {\n            props.setshow(false)\n        }\n    }, []);\n\n    useEffect(() => {\n\n        window.scrollTo(0, 0);\n\n        document.addEventListener('keydown', handleUserKeyPress);\n        return () => {\n            window.removeEventListener('keydown', handleUserKeyPress);\n        };\n    }, []);\n\n    let goNext = () => {\n        if (count < listToCheck.length - 1) {\n            setcount(count + 1);\n        } else {\n            setcount(0);\n        }\n    };\n    let goBack = () => {\n        if (count !== 0) {\n            setcount(count - 1);\n        } else {\n            setcount(listToCheck.length - 1);\n        }\n    };\n\n    //const func = (event) => console.log('move', event.type, event.movementX);\n\n    return (\n\n\n        <div className='popupcollec' >\n            <div className='popupinnercollec'>\n                {props.collectionToShowID === \"fw19\" ?\n                    <div>\n                        <FontAwesomeIcon className=\"fa-2x closeIcone\" icon={faTimes} onClick={(e) => props.setshow(false)} />\n                        <FontAwesomeIcon className=\"fa-2x leftIcone\" icon={faChevronLeft} onClick={(e) => goBack()} />\n                        <FontAwesomeIcon className=\"fa-2x rightIcone\" icon={faChevronRight} onClick={(e) => goNext()} />\n                        <img className=\"slidecollec\" src={fw19picList[count]} alt=\"img1\" onClick={(e) => goNext()} />\n                    </div>\n                    : props.collectionToShowID === \"ss20\" ?\n                        <div>\n                            <FontAwesomeIcon className=\"fa-2x closeIcone\" icon={faTimes} onClick={(e) => props.setshow(false)} />\n                            <FontAwesomeIcon className=\"fa-2x leftIcone\" icon={faChevronLeft} onClick={(e) => goBack()} />\n                            <FontAwesomeIcon className=\"fa-2x rightIcone\" icon={faChevronRight} onClick={(e) => goNext()} />\n                            <img className=\"slidecollec\" src={ss20picList[count]} alt=\"img1\"\n                                //onMouseMove={func}\n                                onClick={(e) => goNext()} />\n                        </div>\n                        : null}\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default CollecSlide;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBolt } from '@fortawesome/fontawesome-free-solid';\nimport CollecSlide from './CollecSlide';\n\nconst Collection = (props) => {\n    const [showCollection, setshowCollection] = useState(false)\n    const [fullScreen, setfullScreen] = useState(false)\n    const [imgToPass, setimgToPass] = useState({\n        value: '',\n        id: ''\n    })\n    const [active, setactive] = useState('');\n\n    const [fw19picList, setfw19picList] = useState([\n        \"fw19/1.jpg\", \"fw19/2.jpg\", \"fw19/3.jpg\", \"fw19/4.jpg\", \"fw19/5.jpg\", \"fw19/6.jpg\", \"fw19/7.jpg\", \"fw19/8.jpg\", \"fw19/9.jpg\", \"fw19/10.jpg\", \"fw19/11.jpg\", \"fw19/12.jpg\", \"fw19/13.jpg\", \"fw19/14.jpg\", \"fw19/15.jpg\", \"fw19/16.jpg\"\n    ]);\n    const [ss20picList, setss20picList] = useState([\n        \"ss20/1.jpg\", \"ss20/2.jpg\", \"ss20/3.jpg\", \"ss20/4.jpg\", \"ss20/5.jpg\", \"ss20/6.jpg\", \"ss20/7.jpg\", \"ss20/8.jpg\", \"ss20/9.jpg\", \"ss20/10.jpg\", \"ss20/11.jpg\", \"ss20/12.jpg\", \"ss20/13.jpg\", \"ss20/14.jpg\", \"ss20/15.jpg\", \"ss20/16.jpg\"\n    ]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setactive('ss20');\n    }, []);\n\n    let showFullScreen = (id, value) => {\n        console.log(id, value)\n        setimgToPass({ value: value, id: id });\n        setfullScreen(true);\n    }\n\n    let fw19List = fw19picList.map((imgSource, i) => {\n        return (\n            <img className=\"collecPic\" src={imgSource} alt='' onClick={(e) => showFullScreen(\"fw19\", i)} />\n        )\n    })\n\n    let ss20List = ss20picList.map((imgSource, i) => {\n        return (\n            <img className=\"collecPic\" src={imgSource} alt='' onClick={(e) => showFullScreen(\"ss20\", i)} />\n        )\n    })\n\n    return (\n        <div className=\"collection content\">\n            <div className=\"collecSeason\">\n                <h5 className={active === 'fw19' ? \"season active\" : \"season\"} value=\"fw19\" onClick={(e) => { setshowCollection(true); setactive(\"fw19\") }}>Fall/Winter 19</h5>\n                <FontAwesomeIcon className=\"seasonLight\" icon={faBolt} />\n                <h5 className={active === 'ss20' ? \"season active\" : \"season\"} value=\"ss20\" onClick={(e) => { setshowCollection(false); setactive(\"ss20\") }}>Spring/Summer 20</h5>\n            </div>\n\n            {showCollection ?\n                <div>\n                    {fw19List}\n                </div>\n                : <div>\n                    {ss20List}\n                </div>}\n            {fullScreen ? <CollecSlide collectionToShowID={imgToPass.id} collectionToShowValue={imgToPass.value} setshow={setfullScreen} /> : null}\n\n            {/* <div>\n                <img className=\"collecPic\" src=\"marti1.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti2.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti3.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti4.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti5.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti6.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti7.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti8.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti9.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti10.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti11.jpg\" alt='' />\n                <img className=\"collecPic\" src=\"marti12.jpg\" alt='' />\n            </div> */}\n        </div >\n\n    );\n\n};\n\nexport default Collection;\n\n\n","function auMillieme(nombre) {\n    return Math.round(1000 * nombre) / 1000;\n};\n\nexport default auMillieme;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport auMillieme from '../../Functions/roundNum';\nimport updatePriceQty from '../../Functions/updateCart';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport headCount from '../../Functions/headCount';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPlus, faMinus } from '@fortawesome/fontawesome-free-solid';\n\nfunction mapStateToProps(state) {\n    //console.log('Cart get user', state)\n    return { basket: state.basket }\n}\n\nconst Cart = (props) => {\n    const [productList, setproductList] = useState([]);\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [totalCart, settotalCart] = useState(0);\n    const [totalProdQty, settotalProdQty] = useState(0);\n\n    const [storeId, setstoreId] = useState('');\n\n    useEffect(() => {\n\n        window.scrollTo(0, 0);\n        const fetchData = async () => {\n\n            let url = `/api/cart`\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `orderID=${orderID}`\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status) {\n                        setproductList(data.basket);\n                        //settotalCart(data.totalCart);\n                        console.log('je verifie que je recupere le bon panier: ', data.basket)\n                        settotalCart(data.totalCart);\n                        settotalProdQty(headCount(data.basket));\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                })\n                .catch(error => console.log(\"erreur fetch\", error));\n        }\n        fetchData();\n    }, []);\n\n    //supprimer du panier \n    let deleteproduct = async (id) => {\n        let url = `/api/delete-product-from-order`\n        await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `orderID=${orderID}&_id=${id}`\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === true) {\n                    //settotalCart(data.totalCart);\n                    console.log('je verifie le retour du back : ', data)\n                    setproductList(data.basket);\n                    settotalCart(data.totalCart);\n                    settotalProdQty(headCount(data.basket));\n                    props.newBasket(data.basket);\n                    props.newCount(headCount(data.basket));\n\n                    localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                    // } else if (data.status === 'deleteorder') {\n                    //     console.log('je passe dans elseif : ', data)\n                    //     setproductList(data.basket);\n                    //     settotalCart(data.totalCart);\n                    //     settotalProdQty(headCount(data.basket));\n                    //     props.newBasket(data.basket);\n                    //     props.newCount(headCount(data.basket));\n                    //     localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                    //     localStorage.removeItem('order');\n                } else {\n                    console.log('error')\n                    //CREER UN MESSAGE DERREUR\n\n                }\n            });\n\n    }\n\n    // mettre a jour la quantité d'un article\n    let updateQty = async (qty, id, size) => {\n        console.log(qty, id, size)\n        let url = `/api/update-qty-to-order`\n        await fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `orderID=${orderID}&_id=${id}&qty=${qty}&size=${size}`\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.status) {\n                    //settotalCart(data.totalCart);\n                    console.log('je verifie que mes prix concordent ici le retour du back : ', data)\n                    setproductList(data.basket);\n                    settotalCart(data.totalCart);\n                    settotalProdQty(headCount(data.basket));\n                    props.newBasket(data.basket);\n                    props.newCount(headCount(data.basket));\n\n                    localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                } else {\n                    setproductList([])\n                    console.log('error')\n\n                    //CREER UN MESSAGE DERREUR\n                }\n            });\n\n    }\n\n    var prodList = productList.map((product, i) => {\n        return (\n            <div className='productsCart' key={i}>\n                <div className='productsCartPicTitle'>\n                    <img className=\"collecPic cartPic\" src={`productstiny/${product.img}`} />\n\n                    <h5 className='productsNameCart'>{product.name}</h5>\n                </div>\n                <div className='productsCartSub'>\n                    <div>\n                        <h5 className='productsDetailL'>Price :</h5>\n                        <h5 className='productsDetailR'>{product.price / product.quantity}€</h5>\n                    </div>\n                    <div>\n                        <h5 className='productsDetailL'>Size :</h5>\n                        <h5 className='productsDetailR'>{product.size}</h5>\n                    </div>\n                    <div className='productsQty'>\n                        <h5 className='productsDetailL'>Quantity :</h5>\n                        <div className='productsDetailRQty'>\n                            <FontAwesomeIcon\n                                icon={faMinus} className='qty-btn less' onClick={(e) => updateQty(\"less\", product._id, product.size)} />\n                            <h5 className='productsDetailQty'>{product.quantity} </h5>\n                            <FontAwesomeIcon\n                                icon={faPlus} className='qty-btn add' onClick={(e) => updateQty(\"add\", product._id, product.size)} />\n                        </div>\n                    </div>\n\n                </div>\n\n                <h5 className='productsTotalPrice'>Total : {product.price}€</h5>\n                <i class=\"far fa-trash-alt\"></i>\n                <FontAwesomeIcon className='delete-btn'\n                    icon={faTrashAlt}\n                    onClick={(e) => deleteproduct(product._id)}\n                    value={product._id} />\n                {/* <button className='delete-btn'\n                    onClick={(e) => deleteproduct(e.target.value)}\n                    value={product._id}>Delete Article</button> */}\n            </div >\n        )\n\n    });\n\n    if (productList.length > 0) {\n        return (\n            <div className=\"Cart content\">\n                <div className=\"blocCart\">\n                    {prodList}\n                    {/* <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                        <h5>{totalProdQty} items</h5>\n                        <h3>Total : {totalCart}€</h3>\n                    </div> */}\n                </div >\n                <div className=\"totalCart\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <h5 className=\"marg\">SHOPPING BAG TOTAL ({totalProdQty} items)</h5>\n                    {checkIfExist(userID) ? null :\n                        <div>\n                            <h5 className=\"marg\">Log in to order with your account</h5>\n                            <Link to=\"/signin\" className=\"cartLink\">\n                                <button className=\"btnCart\" >SIGN IN</button>\n                            </Link>\n                        </div>\n                    }\n                    <div className=\"totalCartElments\">\n                        <div className=\"totalCartElmt L\">\n                            <h5 className=\"marg\" >Order value :</h5>\n                            <h5 className=\"marg\" >Shipping :</h5>\n                            <h5 className=\"marg\" >TOTAL :</h5>\n                        </div>\n                        <div className=\"totalCartElmt R\">\n                            <h5 className=\"marg\" >{auMillieme(totalCart)}€</h5>\n                            <h5 className=\"marg\" >FREE</h5>\n                            <h5 className=\"marg\" >{auMillieme(totalCart)}€</h5>\n                        </div>\n                    </div>\n                    <Link to={(checkIfExist(userID) || checkIfExist(guestID)) ? \"/payment\" : \"/checkout\"} className=\"cartLink\">\n                        <button className=\"btnCart checkBtn\">CONTINUE TO CHECKOUT</button>\n                    </Link>\n                </div>\n            </div >\n        );\n    } else {\n        return (\n            <div className='content' style={{ flexDirection: 'column', margin: 20 }}>\n                <h3 className='emptyCart'>YOUR SHOPPING BAG IS EMPTY!<br></br><br></br>\n                    Sign in to save or access saved items in your shopping bag.</h3>\n                <Link to=\"/signin\">\n                    <h3 style={{ margin: 20 }} >Sign In</h3>\n                </Link>\n                <img className=\"emptyCartPic\" src='home/homepic1.jpg' />\n            </div >\n        )\n    }\n\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        //   newUser: function (userToSend) {\n        //     console.log('je suis dans le NEW USER REDUCER', userToSend)\n        //     dispatch({ type: 'setUser', user: userToSend })\n        //   },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        // newOrder: function (orderToSend) {\n        //     console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n        //     dispatch({ type: 'setOrder', order: orderToSend })\n        // }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n//export default Cart;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PopUp = (props) => {\n    const [toShop, settoShop] = useState(false);\n    const [toCart, settoCart] = useState(false);\n\n    if (toShop) {\n        return (\n            <Redirect to='/products' />\n        );\n    } else if (toCart) {\n        return (\n            <Redirect to='/cart' />\n        );\n    } else {\n        return (\n            <div className='popup'>\n                <div className='popupinner'>\n                    <h4>{props.text}</h4>\n                    <p>was successfully added to your shopping cart</p>\n                    <div>\n                        <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>CONTINUE SHOPPING</button>\n                        <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default PopUp;","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { set } from 'mongoose';\nimport { faShower } from '@fortawesome/fontawesome-free-solid';\n\nconst ProductSlide = (props) => {\n\n    const [picList, setpicList] = useState(props.arrayToDisplay);\n    const [hideArrow, sethideArrow] = useState(false);\n    const [count, setcount] = useState(props.collectionToShowID);\n    const prevRef = useRef();\n    useEffect(() => {\n        prevRef.current = count;\n    });\n\n    const handleUserKeyPress = useCallback(event => {\n        const { key, keyCode } = event;\n        if (key === \"ArrowRight\") {\n            if (prevRef.current < picList.length - 1) {\n                setcount(prevRef.current + 1);\n            } else {\n                setcount(0);\n            }\n        } else if (key === \"ArrowLeft\") {\n            if (prevRef.current !== 0) {\n                setcount(prevRef.current - 1);\n            } else {\n                setcount(picList.length - 1);\n            }\n        } else if (key === \"Escape\") {\n            props.setshow(false)\n        }\n    }, []);\n\n    useEffect(() => {\n\n        window.scrollTo(0, 0);\n\n        if (picList.length === 1) {\n            sethideArrow(true)\n        }\n        document.addEventListener('keydown', handleUserKeyPress);\n        return () => {\n            window.removeEventListener('keydown', handleUserKeyPress);\n        };\n    }, []);\n\n    let goNext = () => {\n        if (count < picList.length - 1) {\n            setcount(count + 1);\n        } else {\n            setcount(0);\n        }\n    }\n    let goBack = () => {\n        if (count !== 0) {\n            setcount(count - 1);\n        } else {\n            setcount(picList.length - 1);\n        }\n    }\n\n    return (\n\n        // <div className='popupprod'>\n        <div className='popupprod'>\n            <div>\n                <FontAwesomeIcon className=\"fa-2x closeIconeProd\" icon={faTimes} onClick={(e) => props.setshow(false)} />\n                {hideArrow ? null : <FontAwesomeIcon className=\"fa-2x leftIconeProd\" icon={faChevronLeft} onClick={(e) => goBack()} />}\n                {hideArrow ? null : <FontAwesomeIcon className=\"fa-2x rightIconeProd\" icon={faChevronRight} onClick={(e) => goNext()} />}\n                <img className=\"slideproduct\" src={`/${picList[count].ref}`} alt=\"img1\" onClick={(e) => props.setshow(false)} />\n            </div>\n        </div>\n        // </div>\n    )\n}\n\nexport default ProductSlide;","import React, { useState, useEffect } from 'react';\nimport Popup from '../../Components/PopUpAddProduct';\n// import { Redirect } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport headCount from '../../Functions/headCount';\nimport ProductSlide from './ProductSlide';\n//import { Slide, slideRef } from 'react-slideshow-image';\n// const proprietes = {\n//     duration: 10000,\n//     transitionDuration: 500,\n//     infinite: true,\n//     indicators: true,\n//     // arrows: true\n// }\n\n// function mapStateToProps(state) {\n//     console.log('shop page get store', state)\n//     return { orderID: state.orderID }\n// }\n\nconst ProductCard = (props) => {\n\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [hideArrow, sethideArrow] = useState(false);\n\n    const [product, setproduct] = useState({\n        id: '',\n        name: '',\n        price: 0,\n        type: '',\n        img: '',\n    });\n    const [currentBasket, setcurrentBasket] = useState([]);\n    const [count, setcount] = useState(0);\n    const [imgToDisplay, setimgToDisplay] = useState([\n        { ref: '' }\n    ]);\n    const [productToBasket, setproductToBasket] = useState({\n\n        productID: '',\n        name: '',\n        price: 0,\n        type: '',\n        img: '',\n        quantity: 1,\n        size: ''\n    });\n    const [showPopup, setshowPopup] = useState(false);\n\n    const [fullScreen, setfullScreen] = useState(false)\n    const [imgToPass, setimgToPass] = useState('');\n    const [smallScreen, setsmallScreen] = useState(false);\n\n    //je recupere mon produit\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        console.log('size screen', window.screen.width)\n        if (window.screen.width < 600) {\n            setsmallScreen(true)\n        }\n        // for (var i = 0; i > props.basket.length; i++) {\n        //     setcurrentBasket([...currentBasket, props.basket[i]]);\n        //     console.log(\"update etat store\", currentBasket)\n        // }\n        //setcurrentBasket(JSON.parse(window.localStorage.getItem('order')));\n\n        // props.newOrder(orderID)\n        const fetchData = async () => {\n\n            let url = `/api/get-one-product`\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${props.match.params.id}&orderID=${orderID}`\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('retour de get one', data)\n                    // let arrayTemp = data.products.img\n                    // let array = arrayTemp.split(' ');\n                    setimgToDisplay(data.products.img);\n                    if (data.products.img.length === 1) {\n                        sethideArrow(true)\n                    }\n                    // console.log('arary', array)\n                    setproduct({ productID: data.products._id, name: data.products.name, price: data.products.price, description: data.products.description, type: data.products.type, img: data.products.img })\n                    setproductToBasket({ ...productToBasket, productID: data.products._id, name: data.products.name, type: data.products.type, description: data.products.description, img: data.products.img[0].ref, price: data.products.price })\n                    if (data.orderID === null) {\n                        console.log('test', imgToDisplay[count])\n\n                        setcurrentBasket(null);\n                    } else {\n                        console.log('ce que jenregistre comme panier en cours', data.basket)\n\n                        //await localStorage.setItem('order', JSON.stringify(data.orderID));\n                        setcurrentBasket(data.basket);\n                    }\n                })\n                .catch(error => console.log(\"erreur fetch\", error));\n        }\n        fetchData();\n    }, []);\n\n    var addProduct = async (e) => {\n        e.preventDefault();\n\n        if (checkIfExist(currentBasket)) {\n            //j'ai un panier en cours, j'udpate la quantité et le prix de mon product ==== UPDATE ORDER\n            let url = '/api/add-product-to-order';\n            console.log('click')\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}&orderID=${orderID}&tempStore=${JSON.stringify(productToBasket)}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data)\n                    if (data.status) {\n\n                        //await localStorage.setItem('user', JSON.stringify(data.id));\n                        localStorage.setItem('order', JSON.stringify(data.orderID));\n                        localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                        //props.newUser(data.id);\n                        props.newOrder(data.orderID);\n                        props.newBasket(data.basket);\n                        props.newCount(headCount(data.basket));\n\n                        //localStorage.setItem('order', JSON.stringify(data.orderID));\n                        setshowPopup(!showPopup);\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                });\n\n        } else {\n            //je crée un order =========== CREATE NEW ORDER\n            let url = '/api/createorder';\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}&productID=${productToBasket.productID}&name=${productToBasket.name}&price=${productToBasket.price}&type=${productToBasket.type}&img=${productToBasket.img}&quantity=${productToBasket.quantity}&size=${productToBasket.size}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data.status)\n                    if (data.status) {\n                        const update = async () => {\n                            //await localStorage.setItem('user', JSON.stringify(data.id));\n                            await localStorage.setItem('order', JSON.stringify(data.orderID));\n                            await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                            // props.newUser(data.id);\n                            await props.newOrder(data.orderID);\n                            await props.newBasket(data.basket);\n                            await props.newCount(headCount(data.basket));\n                            setshowPopup(!showPopup);\n                        }\n                        update();\n\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                });\n        }\n    };\n\n    let goNext = () => {\n        if (count < imgToDisplay.length - 1) {\n            setcount(count + 1);\n        } else {\n            setcount(0);\n        }\n    }\n    let goBack = () => {\n        if (count !== 0) {\n            setcount(count - 1);\n        } else {\n            setcount(imgToDisplay.length - 1);\n        }\n    }\n\n    let showFullScreen = (id) => {\n        setimgToPass(id);\n        setfullScreen(true);\n    }\n\n    // var slideList = imgToDisplay.map((imgSource, i) => {\n\n    //     return (\n\n\n    //         <img className=\"productsPic\" src={`/${imgSource.ref}`} alt=\"img1\" onClick={(e) => showFullScreen(i)} />\n\n\n    //         //      <div className=\"each-slide\">\n    //         //      <div >\n    //         //          {/* <div className=\"testSlideLeft\" onClick={(e) => { e.slideRef.goBack() }}> </div>\n    //         //          <div className=\"testSlideRight\" onClick={(e) => { e.slideRef.goNext() }}> </div> */}\n    //         //          <img className=\"productsPic\" src={`/${imgSource}`} alt=\"img1\" />\n    //         //      </div>\n    //         //  </div>\n    //     )\n    // })\n\n    return (\n        <div className='content'>\n            {fullScreen ? <ProductSlide\n                //className=\"hideOnPhone\" \n                collectionToShowID={count} setshow={setfullScreen} arrayToDisplay={imgToDisplay} /> : null}\n\n            <a href='/products' className=\"backToSearch\">\n                <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                <h5 className=\"backCollec\" >Back to Collection</h5>\n            </a>\n\n            <div className=\"productCard\">\n                {hideArrow ? null : <FontAwesomeIcon className=\"fa-2x leftProdCard\" icon={faChevronLeft} onClick={(e) => goBack()} />}\n                <img className='productsPic' src={`/products/${imgToDisplay[count].ref}`} onClick={smallScreen ? (e) => goNext() : (e) => showFullScreen(`/${imgToDisplay[count].ref}`)} />\n                {/* {checkIfExist(imgToDisplay[count + 1]) ? <img className='productsPic' src={`/${imgToDisplay[count + 1]}`} /> : null} */}\n                {hideArrow ? null : <FontAwesomeIcon className=\"fa-2x rightProdCard\" icon={faChevronRight} onClick={(e) => goNext()} />}\n                {/* <Slide {...proprietes} className=\"productSlide\">\n                    {slideList}\n                </Slide> */}\n                {/* <div className=\"productSlide\">\n                    {slideList}\n                </div> */}\n                {showPopup ?\n                    <Popup\n                        text={product.name}\n                    />\n                    : null\n                }\n\n                <div className='productsText'>\n                    <h3>{product.name}</h3>\n                    <div>\n                        <h5>{product.price}€</h5>\n                        <h5>{product.type}</h5>\n                        <h5>{product.description}</h5>\n                        <form onSubmit={(e) => addProduct(e)} value=\"Add to cart\">\n                            <label className='sizeInput'>Size : </label>\n                            <select className='sizeInputbis'\n                                onChange={(e) => setproductToBasket({ ...productToBasket, size: e.target.value })} required>\n                                <option value=\"\">--</option>\n                                <option value=\"S\">S</option>\n                                <option value=\"M\">M</option>\n                                <option value=\"L\">L</option>\n                            </select>\n                            {/* <label>Quantity :</label> */}\n                            {/* <input className='inputCard' type='hidden' min=\"0\" placeholder='1'\n                                onSubmit={(e) => {\n                                    console.log(e.target.value);\n                                    setproductToBasket({ ...productToBasket, quantity: parseFloat(e.target.value), price: auMillieme(e.target.value * product.price) })\n                                }}\n                                value=\"1\" required></input> */}\n                            <input type=\"submit\" className='add-btn' value=\"Add to Cart\" />\n                        </form>\n                    </div>\n\n                </div >\n            </div >\n        </div>\n    );\n\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        //   newUser: function (userToSend) {\n        //     console.log('je suis dans le NEW USER REDUCER', userToSend)\n        //     dispatch({ type: 'setUser', user: userToSend })\n        //   },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n}\nexport default connect(null, mapDispatchToProps)(ProductCard);\n//export default ProductCard;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst PopUpMsg = (props) => {\n    const [toShop, settoShop] = useState(false);\n    const [toCart, settoCart] = useState(false);\n\n    if (toShop) {\n        return (\n            <Redirect to='/' />\n        );\n        // } else if (toCart) {\n        //     return (\n        //         <Redirect to='/cart' />\n        //     );\n    } else {\n        return (\n            <div className='popup'>\n                <div className='popupinner'>\n                    <div className=\"popupmsg\" style={{ display: \"flex\" }}>\n                        <FontAwesomeIcon className=\"fa-2x icon\" icon={faPaperPlane} />\n                        <p>Thank You ! We will answer you shortly</p>\n                        <FontAwesomeIcon className=\"fa-2x icon\" icon={faPaperPlane} />\n                    </div>\n                    <div>\n                        <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>OK</button>\n                        {/* <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button> */}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default PopUpMsg;","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PopUpMsg from '../Components/PopUpMsgSent';\n\nconst Contact = () => {\n\n    const [form, setform] = useState({\n        name: '',\n        email: '',\n        message: ''\n    });\n\n    const [msgSend, setmsgSend] = useState(false);\n\n    var handleForm = (e) => {\n        e.preventDefault();\n        // if (form.name === '' || form.email === '' || form.message === '') {\n        //     setshowPopupFail({ show: true, field: 'contact' })\n        // } else {\n        console.log('envoi formulaire', form);\n        fetch('/api/contact', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `name=${form.name}&email=${form.email}&message=${form.message}`\n        }).then(function (data) { console.log('this message is saved', data); setmsgSend(true) }).catch(function (error) { console.log('error', error) });\n        // }\n        // //<input type='button' onclick=\"self.location.href='mailto:moi@chezmoi.ici'\" value=\"vas y envoie toi un mail avec ta messagerie\" />\n    }\n    // if (msgSend) {\n    //     return <Redirect to=\"/\" />\n    // } else {\n    return (\n        <div className='BlocCard content'>\n            <div className=\"contactTitle\" style={{ height: 60 }}>\n                <h3 style={{ fontSize: 20, marginLeft: 20 }}>Contact Us</h3>\n            </div>\n            <div className=\"contactBloc\">\n                <img className=\"contactPic\" src=\"/contact.jpg\" alt='' />\n                <form className=\"contactForm\" onSubmit={(e) => handleForm(e)}>\n                    {msgSend ?\n                        <PopUpMsg\n                        />\n                        : null\n                    }\n                    <input\n                        className='inputForm'\n                        type='text'\n                        placeholder='Name'\n                        onChange={(e) => setform({ ...form, name: e.target.value })}\n                        required></input>\n                    <input\n                        className='inputForm'\n                        type='email'\n                        placeholder='Email'\n                        onChange={(e) => setform({ ...form, email: e.target.value })}\n                        required></input>\n                    <textarea\n                        className='inputForm inputArea'\n                        placeholder='Message'\n                        onChange={(e) => setform({ ...form, message: e.target.value })}\n                        required />\n                    <button className='contactButton' type=\"submit\" >Send</button>\n                </form>\n            </div>\n        </div>\n    )\n    //}\n}\n\nexport default Contact;","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport headCount from '../../Functions/headCount';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport checkIfExist from '../../Functions/checkIfExist';\n\nfunction mapStateToProps(state) {\n    console.log('home page get user', state.basket)\n    return { prodList: state.basket }\n}\n\nconst Checkout = (props) => {\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n    });\n\n    const [olduser, setolduser] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [isLogged, setisLogged] = useState(false);\n\n    const [guestID, setguestID] = useState({\n        guest_id: '',\n        status: false\n    })\n    const [userAssociate, setuserAssociate] = useState(false);\n    const [clickCreate, setclickCreate] = useState(false);\n    //const [userToSend, setuserToSend] = useState('');\n\n    //je recupere mon produit\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        console.log(\"je recois quoi ? ?? \", props.prodList);\n        const fetchData = async () => {\n            let url = '/api/get-user-from-order';\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `orderID=${orderID}&userID=${userID}`\n            })\n                .then((response) => response.json())\n                .then(async (data) => {\n                    if (checkIfExist(data.userEmail)) {\n                        console.log('retour checkout', data);\n                        setolduser({ ...olduser, email: data.userEmail });\n                        setuserAssociate(true);\n                    } else {\n                        setuserAssociate(false);\n                    }\n                });\n        }\n        fetchData();\n\n\n    }, []);\n\n    //je me connecte\n    //je me connecte\n    const loginUser = (e) => {\n        e.preventDefault();\n        let url = '/api/login';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `email=${olduser.email}&password=${olduser.password}&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"hello ======\", data)\n                if (data.status) {\n                    const update = async () => {\n                        //await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        await localStorage.setItem('order', JSON.stringify(data.order));\n                        await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n                        props.newUser(data.id);\n                        props.newOrder(data.order);\n                        props.newBasket(data.basket);\n                        props.newCount(headCount(data.basket));\n                    }\n                    update();\n                    setisLogged(true);\n\n                } else {\n                    function myFunction() {\n                        alert(\"le mot de passe et l'email ne correspondent pas\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n    // je cree un nouvel user\n    const login = (e) => {\n        e.preventDefault();\n        let url = '/api/newuser';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, //encodage\n            //body: `firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&password=${user.password}`\n            body: `email=${user.email}&password=${user.password}&statut=user&orderID=${orderID}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('hello ============', data.status)\n                if (data.status) {\n                    const update = async () => {\n                        //await setuserToSend(data.id);\n                        await localStorage.setItem('user', JSON.stringify(data.id));\n                        props.newUser(data.id);\n                    }\n                    update();\n                    setisLogged(true);\n                } else {\n                    function myFunction() {\n                        alert(\"Un compte est déjà associé à cet email\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n    if (isLogged) {\n        return (\n            <Redirect to={{\n                pathname: '/payment',\n                user: { id: guestID.guest_id, status: 'user' }\n            }} />\n        )\n    } else {\n        return (\n            <div className=\"blocCheckout\">\n                {clickCreate ? null :\n\n                    <form className={userAssociate ? \"form loginCheckoutBIG\" : \"form loginCheckout\"} onSubmit={(e) => loginUser(e)} >\n                        {userAssociate ? <h2>Welcome Back ! <br></br><br></br>Log In</h2> : <h2>LOG IN</h2>}\n                        <span className=\"logContent\">\n                            <label>Email</label>\n                            <input\n                                className=\"Login-input\"\n                                name=\"login_email\"\n                                placeholder=\"Votre email\"\n                                onChange={(e) => setolduser({ ...olduser, email: e.target.value })}\n                                value={olduser.email}\n                                required\n                            />\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"Login-input\"\n                                name=\"login_password\"\n                                placeholder=\"Votre mot de passe\"\n                                onChange={(e) => setolduser({ ...olduser, password: e.target.value })}\n                                value={olduser.password}\n                                required\n                            />\n                            <Link className=\"resetPass\">Forgot your password ?</Link>\n                        </span>\n                        <input className=\"button log\" type=\"submit\" method=\"post\" value=\"LOG IN\" />\n                    </form>\n                }\n                {userAssociate ? null :\n                    <form className={clickCreate ? \"form loginCheckoutBIG\" : \"form loginCheckout\"} onSubmit={(e) => login(e)}>\n                        <h2>REGISTER</h2>\n                        <span className=\"logContent\">\n                            <h5>If you still don't have a Squillace account, <br></br>use this registration form to join in.</h5>\n                            {/* <label>First Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"firstname\"\n                            placeholder=\"your first name\"\n                            onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                            value={user.firstname}\n                            required\n                        />\n                        <label>Last Name</label>\n                        <input\n                            type='text'\n                            className=\"Login-input\"\n                            name=\"lastname\"\n                            placeholder=\"your last name\"\n                            onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                            value={user.lastname}\n                            required\n                        /> */}\n                            <label>Email</label>\n                            <input\n                                type=\"email\"\n                                className=\"Login-input\"\n                                name=\"login_email\"\n                                placeholder=\"Votre email\"\n                                onChange={(e) => setuser({ ...user, email: e.target.value })}\n                                value={user.email}\n                                required\n                            />\n                            <label>Password\n                    </label>\n                            <input\n                                type=\"password\"\n                                className=\"Login-input\"\n                                name=\"login_password\"\n                                placeholder=\"Votre mot de passe\"\n                                onChange={(e) => setuser({ ...user, password: e.target.value })}\n                                value={user.password}\n                                required\n                            />\n                        </span>\n                        <input className=\"button log\" type=\"submit\" method=\"post\" value='CREATE ACCOUNT' />\n                    </form>\n                }\n                <form className=\"form guestCheckout\">\n                    <h2>SHOP AS GUEST</h2>\n                    <span className=\"logContent\">\n                        You can complete your purchase as a guest, but you will need to fill out your details to place your order.<br></br>\n\n                    You will be able to register and save your details for future purchases at the end of the order process.\n                    </span>\n                    <Link to=\"/shippinginfo\" className=\"cartLink\">\n                        <input className=\"button log\" type=\"submit\" method=\"post\" value=\"CONTINUE AS GUEST\" />\n                    </Link>\n                    {userAssociate ?\n                        <div>\n                            <h2>NEW CUSTOMER</h2>\n                            <span className=\"logContent\">\n                                Create a new account\n                            </span>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" onClick={(e) => { setuserAssociate(false); setclickCreate(true) }} value='CREATE ACCOUNT' />\n                        </div>\n                        : null}\n                </form>\n            </div>\n        );\n    }\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport headCount from '../../Functions/headCount';\n\nfunction mapStateToProps(state) {\n    console.log('home page get user', state.basket)\n    return { basket: state.basket }\n};\n\nconst ShippingInfo = (props) => {\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [productList, setproductList] = useState([]);\n    const [popUp, setpopUp] = useState('nonUser');\n\n    const [guest, setguest] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        phone: '',\n        newsletter: true,\n        email: '',\n    });\n\n    const [guestID, setguestID] = useState({\n        guest_id: '',\n        status: false\n    })\n\n    const [totalCart, settotalCart] = useState(0);\n    const [totalProdQty, settotalProdQty] = useState(0);\n    //je recupere mon produit\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        const fetchData = async () => {\n\n            let url = `/api/cart`\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `orderID=${orderID}`\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status) {\n                        setproductList(data.basket);\n                        //settotalCart(data.totalCart);\n                        console.log('je verifie que je recupere le bon panier: ', data.basket)\n                        settotalCart(data.totalCart);\n                        settotalProdQty(headCount(data.basket));\n                    } else {\n                        //CREER UN MESSAGE DERREUR\n                        console.log('erreur')\n                    }\n                })\n                .catch(error => console.log(\"erreur fetch\", error));\n        }\n        fetchData();\n        // console.log(\"je recois quoi ? ?? \", props.prodList);\n        // setproductList(props.prodList);\n    }, []);\n\n    let sendForm = (e) => {\n        console.log('send guest', guest);\n        e.preventDefault();\n        let url = '/api/addguest';\n\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `orderID=${orderID}&firstname=${guest.firstname}&lastname=${guest.lastname}&address=${guest.address}&optional=${guest.optional}&zipcode=${guest.zipcode}&city=${guest.city}&state=${guest.state}&newsletter=${guest.newsletter}&email=${guest.email}`\n        })\n            .then((response) => response.json())\n            .then(async (data) => {\n                console.log('retour du back shipping info === ', data)\n                if (data.status) {\n                    await localStorage.setItem('guest', JSON.stringify(data.guestID));\n                    setguestID({ guest_id: data.guestID, status: data.status })\n                } else {\n                    setpopUp('userExistAlready');\n                }\n            });\n    }\n\n    if (guestID.status) {\n        return <Redirect to={{\n            pathname: '/payment',\n            user: { id: guestID.guest_id, status: 'guest' }\n        }}\n        />\n    } else {\n        return (\n            <div className=\"ShipBloc content\">\n                <form className=\"checkOutForm\" onSubmit={(e) => sendForm(e)}>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"firstname\"\n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            onChange={(e) => setguest({ ...guest, firstname: e.target.value })}\n                            value={guest.firstname}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"lastname\"\n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            onChange={(e) => setguest({ ...guest, lastname: e.target.value })}\n                            value={guest.lastname}\n                            required\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"Address\"\n                            type=\"text\"\n                            placeholder=\"Address\"\n                            onChange={(e) => setguest({ ...guest, address: e.target.value })}\n                            value={guest.address}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"address2\"\n                            type=\"text\"\n                            placeholder=\"Optional\"\n                            onChange={(e) => setguest({ ...guest, optional: e.target.value })}\n                            value={guest.optional}\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"ZIP Code\"\n                            placeholder=\"ZIP Code\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setguest({ ...guest, zipcode: e.target.value })}\n                            value={guest.zipcode}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"city\"\n                            type=\"text\"\n                            placeholder=\"City/Town\"\n                            onChange={(e) => setguest({ ...guest, city: e.target.value })}\n                            value={guest.city}\n                            required\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"state\"\n                            type=\"text\"\n                            placeholder=\"State\"\n                            onChange={(e) => setguest({ ...guest, state: e.target.value })}\n                            value={guest.state}\n                            required\n                        ></input>\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"phone\"\n                            type=\"number\"\n                            placeholder=\"Phone\"\n                            onChange={(e) => setguest({ ...guest, phone: e.target.value })}\n                            pattern=\"^[0-9]{10}$\"\n                            value={guest.phone}\n                            required\n                        ></input>\n                    </div>\n                    <div className=\"shipForm\">\n                        <input\n                            className=\"checkoutInput\"\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            onChange={(e) => setguest({ ...guest, email: e.target.value })}\n                            value={guest.email}\n                            required\n                        ></input>\n\n                    </div>\n                    <div className=\"shipCheckbox\">\n                        <input\n                            className=\"checkboxInput\"\n                            name=\"Checkbox\"\n                            type=\"checkbox\"\n                            onChange={(e) => { setguest({ ...guest, newsletter: e.target.checked }) }}\n                            value={guest.newsletter}\n                        ></input>\n                        <label>I wish to receive Squillace's newsletter</label>\n                    </div>\n                    <div className={`shipForm ${popUp}`} >\n                        <h5 className='logLink'>There is already an account associated with this email, please : </h5>\n                        <Link className='logLink2' to='/checkout'>Log In</Link>\n                    </div>\n                    <input\n                        className=\"button log\"\n                        name=\"Checkout\"\n                        type=\"submit\"\n                        value=\"CONTINUE\"\n                    ></input>\n\n                </form>\n                <div className=\"totalCartship\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <h5 className=\"h5marg\">SHOPPING BAG TOTAL\n                ({totalProdQty} items)\n                </h5>\n                    <h5 className=\"h5marg\">Log in to order with your account</h5>\n                    <Link to=\"/checkout\" className=\"cartLink\">\n                        <button className=\"btnCart\" >SIGN IN</button>\n                    </Link>\n                    <div className=\"totalCartElments\">\n                        <div className=\"totalCartElmt L\">\n                            <h5 className=\"h5marg\" >Order value :</h5>\n                            <h5 className=\"h5marg\" >Shipping :</h5>\n                            <h5 className=\"h5marg\" >TOTAL :</h5>\n                        </div>\n                        <div className=\"totalCartElmt R\">\n                            <h5 className=\"h5marg\" >{totalCart}€</h5>\n                            <h5 className=\"h5marg\" >FREE</h5>\n                            <h5 className=\"h5marg\" >{totalCart}€</h5>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default connect(mapStateToProps, null)(ShippingInfo);\n//export default ShippingInfo;\n","\nexport default function formatDate(date) {\n    // console.log(date)\n    const birthday = new Date(date);\n    const date1 = birthday.getDate();\n    const date2 = birthday.getMonth() + 1;\n    const date3 = birthday.getFullYear();\n    if (date1 < 10 && date2 < 10) {\n        return `0${date1}/0${date2}/${date3}`;\n    } else if (date1 < 10) {\n        return `0${date1}/${date2}/${date3}`;\n    } else if (date2 < 10) {\n        return `${date1}/0${date2}/${date3}`;\n    } else {\n        return `${date1}/${date2}/${date3}`;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n// import Change from '../Change';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight, faPlus, faMinus, faMinusCircle } from '@fortawesome/fontawesome-free-solid';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport formatDate from '../../Functions/formatDate';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport headCount from '../../Functions/headCount';\n\nfunction mapStateToProps(state) {\n    console.log('Account get user', state.user)\n    return { name: state.user }\n}\n\nconst MyAccount = (props) => {\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        // address: '',\n        // optional: '',\n        // zipcode: '',\n        // state: '',\n        // city: '',\n        // newsletter: '',\n        email: '',\n        // gender: '',\n        // phone: '',\n        // compagnyname: '',\n        // billingname: '',\n        // billingaddress: '',\n        // billingoptional: '',\n        // billingzipcode: '',\n        // billingcity: '',\n        // billingstate: '',\n        // // password: '',\n        // // token: String,\n        // // salt: String,\n        // statut: '',\n        // inscription: '',\n        // birthday: '',\n        // orders: []\n    });\n    const [orders, setorders] = useState([]);\n    // const [orderToDisplay, setorderToDisplay] = useState({\n    //     id: '',\n    //     productList: [],\n    //     display: false\n    // });\n    const [name, setname] = useState(false);\n\n    //je recupere mon produit\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        //console.log(\"je recois quoi ? ?? \", props.prodList);\n        const fetchData = async () => {\n            let url = '/api/myaccount';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data.user.firstname)\n                    setuser({\n                        firstname: data.user.firstname,\n                        lastname: data.user.lastname,\n                        // address: data.user.address,\n                        // optional: data.user.optional,\n                        // zipcode: data.user.zipcode,\n                        // city: data.user.city,\n                        // state: data.user.state,\n                        // newsletter: data.user.newsletter,\n                        email: data.user.email,\n                        // gender: data.user.gender,\n                        // phone: data.user.phone,\n                        // compagnyname: data.user.compagnyname,\n                        // billingname: data.user.billingname,\n                        // billingaddress: data.user.billingaddress,\n                        // billingoptional: data.user.billingoptional,\n                        // billingzipcode: data.user.billingzipcode,\n                        // billingcity: data.user.billingcity,\n                        // billingstate: data.user.billingstate,\n                        // // password: '',\n                        // // token: String,\n                        // // salt: String,\n                        // statut: data.user.statut,\n                        // inscription: data.user.inscription,\n                        // birthday: data.user.birthday,\n                        // orders: data.user.orders\n                    })\n                    setorders(data.orders);\n                    if (data.user.firstname != undefined) {\n                        setname(true);\n                    }\n                });\n        }\n        fetchData();\n    }, []);\n\n    let getOrder = async (id, key) => {\n        console.log('id a afficher', id, key)\n        // await setorderToDisplay({ ...orderToDisplay, id: id, display: true, productList: orders[key].productList })\n        // console.log('orderto display', orderToDisplay)\n        document.getElementById(`${key}`).className = \"showOrderDetails\";\n        document.getElementById(`bloc${key}`).className = \"orderCardExpand\";\n        document.getElementById(`img${key}`).className = \"hide\";\n        document.getElementById(`show${key}`).className = \"hide\";\n        document.getElementById(`OrderInfo${key}`).className = \"hide\";\n        document.getElementById(`showless${key}`).className = \"displayOrder\";\n        document.getElementById(`fullOrderInfo${key}`).className = \"fullOrderInfo\";\n        document.getElementById(`OrderTitle${key}`).className = \"orderTitles\";\n        //console.log(elt)\n    }\n\n    let showLess = async (id, key) => {\n        console.log('id a afficher', id, key)\n        // await setorderToDisplay({ ...orderToDisplay, id: id, display: false, productList: orders[key].productList })\n        // console.log('order to display', orderToDisplay)\n        document.getElementById(`${key}`).className = \"hide\";\n        document.getElementById(`bloc${key}`).className = \"orderCard\";\n        document.getElementById(`showless${key}`).className = \"hide\";\n        document.getElementById(`fullOrderInfo${key}`).className = \"hide\";\n        document.getElementById(`OrderTitle${key}`).className = \"hide\";\n\n        document.getElementById(`img${key}`).className = \"accountPic\";\n        document.getElementById(`show${key}`).className = \"displayOrder\";\n        document.getElementById(`OrderInfo${key}`).className = \"orderDetails\";\n\n        //console.log(elt)\n    }\n\n\n    var orderList = orders.map((order, i) => {\n        var productList = order.productList.map((product, i) => {\n            return (\n                <div className=\"productListAccount\">\n\n                    <img className=\"accountPic\" src={product.img} />\n                    <div className=\"prodListDetail\">\n                        <h5 style={{ fontWeight: 'bold' }}>{product.name}</h5>\n                        <h5>{product.size}</h5>\n                        <h5>{(product.price / product.quantity)}€</h5>\n                        <h5>Quantity : {product.quantity}</h5>\n                        <div className=\"prodListDetailPrice\">\n                            <h5 style={{ fontWeight: 'bold' }}>{product.price}€</h5>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n        return (\n            <div className=\"orderCard\" id={`bloc${i}`} >\n                <img className=\"accountPic\" id={`img${i}`} src={order.productList[0].img} />\n                <span className=\"orderCardSub\">\n                    <div className='hide' onClick={(e) => showLess(order._id, i)} id={`showless${i}`}>\n                        <h5 className='showdetail'>Show less</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faMinus} />\n                    </div>\n                    <h3 className='order'>Order  -  {formatDate(order.validationdate)}</h3>\n                    <span className='orderDetails' id={`OrderInfo${i}`}>\n                        <h5>Ref : {order._id}</h5>\n                        <h5>Status : fulfilled</h5>\n                        <h5>Date : {formatDate(order.validationdate)}</h5>\n                        <h5>Total : {order.totalorder}€</h5>\n                    </span>\n                    <h5 className='hide' id={`OrderTitle${i}`}>Order Details</h5>\n                    <div className=\"hide\" id={`fullOrderInfo${i}`}>\n\n                        <span className={checkIfExist(order.billingaddress) ? 'orderDetailsExpandthreeL' : 'orderDetailsExpandL'}>\n                            <h5 style={{ fontWeight: 'bold' }}>Shipping Address</h5>\n                            <h5 style={{ marginBottom: 2, }}>{order.firstname} {order.lastname}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.optional}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.address}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.zipcode} {order.city}</h5>\n                            <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.state}</h5>\n                        </span>\n                        {checkIfExist(order.billingaddress) ?\n                            <span className='orderDetailsExpandM'>\n                                <h5 style={{ fontWeight: 'bold' }}>Billing Address</h5>\n                                <h5 style={{ marginBottom: 2 }}>{order.compagnyname}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingoptional}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingaddress}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingzipcode} {order.billingcity}</h5>\n                                <h5 style={{ marginBottom: 2, marginTop: 2 }}>{order.billingstate}</h5>\n                            </span> : null}\n                        <span className={checkIfExist(order.billingaddress) ? 'orderDetailsExpandthreeR' : 'orderDetailsExpandR'}>\n                            {/* <h5>Ref : {order._id}</h5>\n                            <h5>Status : fulfilled</h5> */}\n                            <h5>Date : {formatDate(order.validationdate)}</h5>\n                            <h5 style={{ fontWeight: 'bold' }}>Total : {order.totalorder}€</h5>\n                        </span>\n\n                    </div>\n                    <div className='displayOrder' onClick={(e) => getOrder(order._id, i)} id={`show${i}`}>\n                        <h5 className='showdetail'>Show more</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faPlus} />\n                    </div>\n                    <div id={i} className='hide'>\n                        <h5 className='orderTitles'>Order Summary</h5>\n                        {productList}\n                        <div className='resumeOrder'>\n                            <h5 className=\"prodListTotalQty\">{headCount(order.productList)} items</h5>\n                            <h5 className=\"prodListTotalPrice\">Total : {order.totalorder}€</h5>\n                        </div>\n                    </div>\n                </span>\n\n                {/* <div>\n              <button className='change-btn' onClick={(e) => { addProduct(e.target.value) }} value={product._id}>Ajouter au panier</button>\n            </div> */}\n            </div >\n        )\n    });\n\n\n    return (\n        <div className=\"accountBloc content\">\n            <div className=\"accountsetting\">\n                <h3>Hello {name ? `${user.firstname} ${user.lastname}` : user.email}</h3>\n                <div className=\"mobil\">\n                    {/* <Link to=\"/wishlist\" className=\"linkaccount\">\n                    <h5 className=\"settingHeadL\">My Wishlist</h5>\n                    <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link> */}\n                    <Link to=\"/myaccount\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">My Purchases</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                    <Link to=\"/mysettings\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">My Settings</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                    {/* <Link to=\"/mysettings\" className=\"linkaccount\">\n                    <h5 className=\"settingHeadL\">My Payment Info</h5>\n                    <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link> */}\n                    <Link to=\"/signout\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">Log Out</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                    <h5>Need Help ?</h5>\n                    <Link to=\"/contact\" className=\"linkaccount\">\n                        <h5 className=\"settingHeadL\">Contact Us</h5>\n                        <FontAwesomeIcon className=\"settingHeadR\" icon={faArrowRight} /></Link>\n                </div>\n            </div>\n            {/* <div className=\"form\"> */}\n\n\n            <div className=\"accountOrder\">\n                <h3>My Purchases</h3>\n                {orderList}\n            </div>\n\n            {/* </div> */}\n        </div>\n    );\n\n};\n\nexport default connect(mapStateToProps, null)(MyAccount);\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\nimport formatDate from '../../Functions/formatDate';\nimport allOptions from '../../Functions/allOptions';\n\nconst MySettings = (props) => {\n    const [showBilling, setshowBilling] = useState(false)\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        newsletter: false,\n        email: '',\n        gender: '',\n        phone: '',\n        compagnyname: '',\n        billingname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: '',\n        // password: '',\n        // token: String,\n        // salt: String,\n        statut: '',\n        inscription: '',\n        birthday: '',\n        orders: []\n    });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        const fetchData = async () => {\n            let url = '/api/getuser';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back === ', data.user.firstname)\n                    let phone = data.user.phone\n                    if (phone != undefined) {\n                        phone = `+33${data.user.phone}`\n                    }\n                    let birthday = data.user.birthday\n                    if (birthday != undefined) {\n                        birthday = formatDate(data.user.birthday);\n                    }\n                    if (data.user.billingaddress != undefined) {\n                        setshowBilling(true)\n                    }\n                    setuser({\n                        firstname: data.user.firstname,\n                        lastname: data.user.lastname,\n                        address: data.user.address,\n                        optional: data.user.optional,\n                        zipcode: data.user.zipcode,\n                        city: data.user.city,\n                        state: data.user.state,\n                        newsletter: data.user.newsletter,\n                        email: data.user.email,\n                        gender: data.user.gender,\n                        phone: phone,\n                        compagnyname: data.user.compagnyname,\n                        billingname: data.user.billingname,\n                        billingaddress: data.user.billingaddress,\n                        billingoptional: data.user.billingoptional,\n                        billingzipcode: data.user.billingzipcode,\n                        billingcity: data.user.billingcity,\n                        billingstate: data.user.billingstate,\n                        // password: '',\n                        // token: String,\n                        // salt: String,\n                        statut: data.user.statut,\n                        inscription: data.user.inscription,\n                        birthday: birthday,\n                        orders: data.user.orders\n                    })\n\n                });\n        }\n        fetchData();\n\n    }, []);\n\n    const subscribe = (e) => {\n        e.preventDefault();\n        let url = '/api/usersubcription';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${userID}&newsletter=${!user.newsletter}`\n        }).then((response) => response.json())\n            .then((data) => {\n                if (data.status) {\n                    setuser({ ...user, newsletter: !user.newsletter });\n                }\n            })\n    }\n\n    return (\n        <div className='settingsBloc content'>\n\n            <a href='/myaccount' className=\"backToSearch\">\n                <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                <h5 className=\"backCollec\" >Back to my Account</h5>\n            </a>\n\n            <div className='settingstitle'>\n                <h4>My settings</h4>\n                <p>You can manage your account and subscriptions here</p>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>My Details</h5>\n                    <Link to=\"/settingsform/details\"\n                        className='settingSubTitleDetailR'>Edit</Link>\n                </div>\n                <div className='settingsContent'>\n                    <label>First Name</label>\n                    <h5>{user.firstname}</h5>\n                    <label>Last Name</label>\n                    <h5>{user.lastname}</h5>\n                    <label>Email</label>\n                    <h5>{user.email}</h5>\n                    <label>Date of birth</label>\n                    <h5>{user.birthday}</h5>\n                    <label>Phone</label>\n                    <h5>{user.phone}</h5>\n                    <label>Gender</label>\n                    <h5>{user.gender}</h5>\n                </div>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>My Addresses</h5>\n                    <Link to=\"/settingsform/address\"\n                        className='settingSubTitleDetailR'>Edit</Link>\n                </div>\n                <div className='settingsContent'>\n                    <label>Address</label>\n                    <h5>{user.address}</h5>\n                    <label className={allOptions(user.optional) ? 'hide' : null}>Optional</label>\n                    <h5 className={allOptions(user.optional) ? 'hide' : null}>{user.optional}</h5>\n                    <label>Zipcode</label>\n                    <h5>{user.zipcode}</h5>\n                    <label>City</label>\n                    <h5>{user.city}</h5>\n                    <label>State</label>\n                    <h5>{user.state}</h5>\n                </div>\n                <div className={showBilling ? 'settingsContent' : 'hide'}>\n                    <label className={allOptions(user.compagnyname) ? 'hide' : null}>Billing Name</label>\n                    <h5 className={allOptions(user.compagnyname) ? 'hide' : null}>{user.compagnyname}</h5>\n                    <label>Billing Address</label>\n                    <h5>{user.billingaddress}</h5>\n                    <label className={allOptions(user.billingoptional) ? 'hide' : null}>Optional</label>\n                    <h5 className={allOptions(user.billingoptional) ? 'hide' : null}>{user.billingoptional}</h5>\n                    <label>Zipcode</label>\n                    <h5>{user.billingzipcode}</h5>\n                    <label>City</label>\n                    <h5>{user.billingcity}</h5>\n                    <label>State</label>\n                    <h5>{user.billingstate}</h5>\n                </div>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>Newsletter Subscription</h5>\n                    {/* <h6 className='settingSubTitleDetailR'>Edit</h6> */}\n                </div>\n                <div className='settingsContent'>\n                    <div className='newsletterSubTitle'>\n                        <label className='newsDetailL'>Newsletter Subscription</label>\n                        <h5 className='newsDetailR' onClick={(e) => subscribe(e)}>{user.newsletter ? `ON` : `OFF`}</h5>\n                    </div>\n                </div>\n            </div>\n            <div className='settingsdetails'>\n                <div className='settingSubTitle'>\n                    <h5 className='settingSubTitleDetailL'>Privacy</h5>\n                    {/* <h6 className='settingSubTitleDetailR'>Edit</h6> */}\n                </div>\n                <div className='settingsContent'>\n\n                    <label className=\"updatePass\"><Link to=\"/updatepass\">Change Password</Link></label>\n                </div>\n            </div>\n\n            {/* <div>\n                    <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>CONTINUE SHOPPING</button>\n                    <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button>\n                </div> */}\n\n        </div >\n\n    );\n    // }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default MySettings;","import React, { useState, useEffect, useReducer } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport useLocalStorage from '../Functions/useLocalStore';\nimport { CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\n//import {injectStripe} from 'react-stripe-elements';\nimport checkIfExist from '../Functions/checkIfExist';\nimport { connect } from 'react-redux';\n\n\nconst CARD_ELEMENT_OPTIONS = {\n    style: {\n        base: {\n            color: \"#32325d\",\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n                color: \"#aab7c4\",\n            },\n        },\n        invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\",\n        },\n    },\n};\n\nasync function stripeTokenHandler(token, userID, user, firstname, lastname, basket, orderID, totalCart) {\n    const paymentData = { token: token.id, userID: userID, user: user, firstname: firstname, lastname: lastname, basket: basket, orderID: orderID, totalCart: totalCart };\n\n    // Use fetch to send the token ID and any other payment data to your server.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    let url = '/api/charge';\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(paymentData),\n    })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('retour back', data.status)\n            if (data.status) {\n\n                return (true)\n            } else {\n                return (false);\n            }\n        }).catch((data) => {\n            console.log(\"error == \", data)\n        });\n\n    return response\n    // Return and display the result of the charge.\n}\n\n\nconst CheckoutForm = (props) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n    const [cardElement, setcardElement] = useState({\n        firstname: '',\n        lastname: '',\n        orderID: '',\n        basket: [],\n        totalCart: 0\n    })\n\n    const [address, setaddress] = useState('');\n\n\n    useEffect(() => {\n        console.log(\"je recois quoi de mon element payment ? ?? \", props.user, props.basket, props.orderID, props.totalCart);\n\n        setcardElement({ firstname: props.user.firstname, lastname: props.user.lastname, basket: props.basket, orderID: props.orderID, totalCart: props.totalCart })\n        // const fetchData = async () => {\n        //     let url = 'http://localhost:5000/getuser';\n        //     fetch(url, {\n        //         method: 'POST',\n        //         headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        //         body: `id=${userID}`\n        //     })\n        //         .then((response) => response.json())\n        //         .then((data) => {\n        //             console.log('retour du back === ', data)\n        //             setuser({\n        //                 orders: data.user.orders,\n        //                 lastname: data.user.lastname,\n        //             })\n        //         })\n        // }\n        // fetchData();\n\n    }, []);\n\n\n    const handleSubmit = async (event) => {\n        // We don't want to let default form submission happen here,\n        // which would refresh the page.\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            // Stripe.js has not yet loaded.\n            // Make  sure to disable form submission until Stripe.js has loaded.\n            return;\n        }\n        //console.log('test', elements.getElement(CardElement))\n        const card = elements.getElement(CardElement);\n        //const card = elements.getElement({ cardnumber: CardNumberElement, cardExpiry: CardExpiryElement, cardCVC: CardCvcElement });\n        const result = await stripe.createToken(card);\n\n        if (result.error) {\n            // Show error to your customer.\n            console.log('error stripe', result.error.message);\n            //CREER UN MESSAGE DERREUR\n        } else {\n            // Send the token to your server.\n            // This function does not exist yet; we will define it in the next step.\n            let retourBack = await stripeTokenHandler(result.token, (checkIfExist(userID) ? userID : guestID), props.user, cardElement.firstname, cardElement.lastname, cardElement.basket, cardElement.orderID, cardElement.totalCart);\n            // je controle la réussite du paiement \n            console.log('retour back', retourBack)\n            if (retourBack) {\n                console.log('merci panier validé!')\n                const updateData = async () => {\n                    await window.localStorage.removeItem('order');\n                    await window.localStorage.removeItem('count');\n                    await window.localStorage.removeItem('guest');\n                    await props.newCount(0);\n                    await props.newBasket([]);\n                    await props.newOrder('');\n                }\n                updateData();\n                props.setPaymentValid(true);\n            } else {\n                //CREER UN MESSAGE DERREUR\n                console.log('ooops erreur!')\n            }\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h4>Proceed to Payment</h4>\n            <div className='subPaymentName'>\n\n                <div className='subPayment'>\n                    <label>First Name</label>\n                    <input type='text' name='firstname' value={cardElement.firstname} required\n                        onChange={(e) => setcardElement({ ...cardElement, firstname: e.target.value })}></input>\n                    <h6>As it appears on your card.</h6>\n                </div>\n                <div className='subPayment'>\n                    <label>Last Name</label>\n                    <input type='text' name='lastname' value={cardElement.lastname} required\n                        onChange={(e) => setcardElement({ ...cardElement, lastname: e.target.value })}></input>\n                    <h6>As it appears on your card.</h6>\n                </div>\n\n            </div>\n            <label>\n                Card details</label>\n\n            <div className='subPaymentINFO'>\n                <CardElement className=\"input\" options={CARD_ELEMENT_OPTIONS} />\n                <div className=\"subCardInfo\">\n                    <h6>Card number</h6>\n                    <h6>Enter the expiration date on your card</h6>\n                    <h6>Security Code printed on your card, 3-4 digits.</h6>\n                </div>\n                {/* <label>Card Number</label>\n                <CardNumberElement className=\"input\" />\n                Collects the card number.\n                <label> Expiry Date</label >\n                <CardExpiryElement />\n                Collects the card‘s expiration date.\n                < label > CVC</label >\n                <CardCvcElement /> */}\n            </div>\n\n\n            {/* <CardSection /> */}\n            <div>\n\n\n\n            </div>\n            {/* <button disabled={!stripe}>Confirm order</button> */}\n            < button className='button log' type=\"submit\" disabled={!stripe}>\n                Process to Payment\n            </button >\n        </form>\n    );\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // newUser: function (userToSend) {\n        //     console.log('je suis dans le NEW USER REDUCER', userToSend)\n        //     dispatch({ type: 'setUser', user: userToSend })\n        // },\n        newCount: function (countToSend) {\n            console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n            dispatch({ type: 'setCount', count: countToSend })\n        },\n        newBasket: function (basketToSend) {\n            console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n            dispatch({ type: 'updateBasket', basket: basketToSend })\n        },\n        newOrder: function (orderToSend) {\n            console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n            dispatch({ type: 'setOrder', order: orderToSend })\n        }\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(CheckoutForm);\n\n//export default CheckoutForm;","import React, { useState, useEffect, useReducer } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport useLocalStorage from '../Functions/useLocalStore';\nimport { CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport allOptions from '../Functions/allOptions';\nimport checkIfExist from '../Functions/checkIfExist';\n\nconst CheckoutShipForm = (props) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n\n    const [showFormShip, setshowFormShip] = useState(false);\n    const [showFormBill, setshowFormBill] = useState(false);\n    const [noship, setnoShip] = useState(false);\n    const [storeFormShip, setstoreFormShip] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        phone: ''\n    });\n    const [storeFormBill, setstoreFormBill] = useState({\n        compagnyname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: ''\n    });\n    const [address, setaddress] = useState('');\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        state: '',\n        city: '',\n        newsletter: '',\n        email: '',\n        gender: '',\n        phone: '',\n        compagnyname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: '',\n        // password: '',\n        // token: String,\n        // salt: String,\n        statut: '',\n        inscription: '',\n        birthday: '',\n        orders: []\n    });\n\n    useEffect(() => {\n        //console.log(\"je recois quoi ? ?? \", props.prodList);\n        const fetchData = async () => {\n            let url = '/api/getuser';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}&guestID=${guestID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back checkoutshipform === ', data, checkIfExist(data.address))\n                    if (checkIfExist(data.user.address)) {\n                        console.log('JE SUIS PASSE LA !!')\n                        setuser({\n                            firstname: data.user.firstname,\n                            lastname: data.user.lastname,\n                            address: data.user.address,\n                            optional: data.user.optional,\n                            zipcode: data.user.zipcode,\n                            city: data.user.city,\n                            state: data.user.state,\n                            newsletter: data.user.newsletter,\n                            email: data.user.email,\n                            gender: data.user.gender,\n                            phone: data.user.phone,\n                            compagnyname: data.user.compagnyname,\n                            billingname: data.user.billingname,\n                            billingaddress: data.user.billingaddress,\n                            billingoptional: data.user.billingoptional,\n                            billingzipcode: data.user.billingzipcode,\n                            billingcity: data.user.billingcity,\n                            billingstate: data.user.billingstate,\n                            // password: '',\n                            // token: String,\n                            // salt: String,\n                            statut: data.user.statut,\n                            inscription: data.user.inscription,\n                            birthday: data.user.birthday,\n                            orders: data.user.orders\n                        })\n                    } else {\n                        setnoShip(true);\n                    }\n\n                });\n        }\n        fetchData();\n\n    }, []);\n\n    //je modifie mes infos de shipping\n    const submitFormAddress = (e, typeForm) => {\n        e.preventDefault();\n        props.setnewUser(user);\n        //console.log('retour formulaire ==', e.target)\n        let url = '/api/updateuseraddress';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${(checkIfExist(userID) ? userID : guestID)}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}&compagnyname=${user.compagnyname}&billingaddress=${user.billingaddress}&billingoptional=${user.billingoptional}&billingzipcode=${user.billingzipcode}&billingcity=${user.billingcity}&billingstate=${user.billingstate}`\n\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('retour du back === ', data.status)\n                if (data.status) {\n                    console.log(data)\n                    if (typeForm === 'Ship') {\n                        setshowFormShip(false);\n                    } else if (typeForm === 'Bill') {\n                        setshowFormBill(false);\n                    } else if (typeForm === 'NewShip') {\n                        setnoShip(false);\n                    }\n                } else {\n                    console.log('erreur');\n                }\n            });\n    }\n\n    const submitFormShipping = (e, typeForm) => {\n        e.preventDefault();\n        props.setnewUser(user);\n        let url = '/api/addshippingaddress';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${(checkIfExist(userID) ? userID : guestID)}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}`\n\n        }).then((response) => response.json())\n            .then((data) => {\n                if (data.status) {\n                    props.setValidShowPayment(true)\n                    if (typeForm === 'Ship') {\n                        setnoShip(false);\n                        // props.setName(\"i'm from Parent\")\n                        //props.handleClickParent(true);\n                    } else {\n                        setshowFormShip(false);\n                    }\n                } else {\n                    console.log('erreur');\n                }\n            });\n    }\n    return (\n        <div>\n            {/* =================================================================\n            SI JE NAI PAS D'ADRESSE PREENREGISTREE JE PROPOSE LE FORMULAIRE : \n            ================================================================= */}\n            <div className={noship ? null : 'hide'}  >\n                {/* ====================================\n            FORMULAIRE POUR Enregistrer LES INFOS DE SHIPPING\n            ==================================== */}\n                <form onSubmit={(e) => submitFormShipping(e, 'Ship')}>\n                    <h4>{address}</h4>\n                    <div className='settingsContent setForm'>\n                        <h5>Shipping Address</h5>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>First Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                                    value={user.firstname}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>Last Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"lastname\"\n                                    onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                                    value={user.lastname}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Address</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"address\"\n                            onChange={(e) => setuser({ ...user, address: e.target.value })}\n                            value={user.address}\n                            required\n                        ></input>\n                        <label>Optional</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"detail\"\n                            onChange={(e) => setuser({ ...user, optional: e.target.value })}\n                            value={user.optional}\n                        ></input>\n                        <label>Zipcode</label>\n                        <input\n                            className=\"settingInput\"\n                            name=\"zipcode\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setuser({ ...user, zipcode: e.target.value })}\n                            value={user.zipcode}\n                            required\n                        ></input>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, city: e.target.value })}\n                                    value={user.city}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, state: e.target.value })}\n                                    value={user.state}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Contact Phone</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"phone\"\n                            onChange={(e) => setuser({ ...user, phone: e.target.value })}\n                            value={user.phone}\n\n                        ></input>\n                    </div>\n                    <div className='center'>\n                        <input type='submit' className=\"address\" value='CONTINUE' />\n                    </div>\n                </form>\n            </div>\n            {/* =================================================================\n             JAI UNE ADRESSE JE LAFFICHE: \n            ================================================================= */}\n            <div className={noship ? 'hide' : null} >\n                <div className={showFormShip ? 'hide' : \"paymentSub\"}>\n                    <div className=\"paymentAddress\">\n                        <h5>Shipping Address</h5>\n                        <h6>{user.firstname} {user.lastname}</h6>\n                        <h6>{user.optional}</h6>\n                        <h6>{user.address}</h6>\n                        <h6>{user.zipcode} {user.city}</h6>\n                        <h6>{user.state}</h6>\n                        <h6 className={allOptions(user.phone) ? 'hide' : null}>Contact Phone: +33{user.phone}</h6>\n\n                    </div>\n                    <div className={(allOptions(user.billingaddress) || showFormBill) ? 'hide' : \"paymentAddress\"}>\n                        <h5>Billing Address</h5>\n                        <h6>{user.compagnyname}</h6>\n                        <h6>{user.billingoptional}</h6>\n                        <h6>{user.billingaddress}</h6>\n                        <h6>{user.billingzipcode} {user.billingcity}</h6>\n                        <h6>{user.billingstate}</h6>\n\n                    </div>\n                </div>\n                <div className={showFormShip ? 'hide' : \"paymentSub\"}>\n                    <input className='button payChangeInfo' onClick={(e) => {\n                        setshowFormShip(!showFormShip);\n                        setstoreFormShip({\n                            firstname: user.firstname,\n                            lastname: user.lastname,\n                            address: user.address,\n                            optional: user.optional,\n                            zipcode: user.zipcode,\n                            city: user.city,\n                            state: user.state,\n                            phone: user.phone\n                        })\n                    }} value='Change Shipping Info' />\n                    {allOptions(user.billingaddress) ?\n                        <div className=\"payChangeInfo\" onClick={(e) => { setshowFormBill(!showFormBill) }}><FontAwesomeIcon className=\"icon\" icon={faPlus} /> Add Billing Address</div>\n                        :\n                        null}\n                    <input\n                        className={(allOptions(user.billingstate) || showFormBill) ? 'hide' : 'button payChangeInfo'}\n                        onClick={(e) => {\n                            setshowFormBill(!showFormBill);\n                            setstoreFormBill({\n                                compagnyname: user.compagnyname,\n                                billingaddress: user.billingaddress,\n                                billingoptional: user.billingoptional,\n                                billingzipcode: user.billingzipcode,\n                                billingcity: user.billingcity,\n                                billingstate: user.billingstate\n                            })\n                        }} value='Change Billing Info' />\n                </div>\n\n                {/* ====================================\n            FORMULAIRE POUR CHANGER LES INFOS DE SHIPPING\n            ==================================== */}\n                {/* <div className={showFormShip ? null : 'hide'}> */}\n                <form className={showFormShip ? null : 'hide'} onSubmit={(e) => submitFormShipping(e, 'correct')}>\n                    <FontAwesomeIcon className=\"popcross\" icon={faTimes} onClick={(e) => {\n                        setshowFormShip(!showFormShip)\n                        setuser({\n                            ...user,\n                            firstname: storeFormShip.firstname,\n                            lastname: storeFormShip.lastname,\n                            address: storeFormShip.address,\n                            optional: storeFormShip.optional,\n                            zipcode: storeFormShip.zipcode,\n                            city: storeFormShip.city,\n                            state: storeFormShip.state,\n                            phone: storeFormShip.phone\n                        })\n                    }} />\n\n                    <h4>{address}</h4>\n                    <div className='settingsContent setForm'>\n                        <h5>Shipping Address</h5>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>First Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                                    value={user.firstname}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>Last Name</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"lastname\"\n                                    onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                                    value={user.lastname}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Address</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"address\"\n                            onChange={(e) => setuser({ ...user, address: e.target.value })}\n                            value={user.address}\n                            required\n                        ></input>\n                        <label>Optional</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"detail\"\n                            onChange={(e) => setuser({ ...user, optional: e.target.value })}\n                            value={user.optional}\n                        ></input>\n                        <label>Zipcode</label>\n                        <input\n                            className=\"settingInput\"\n                            name=\"zipcode\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setuser({ ...user, zipcode: e.target.value })}\n                            value={user.zipcode}\n                            required\n                        ></input>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, city: e.target.value })}\n                                    value={user.city}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, state: e.target.value })}\n                                    value={user.state}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                        <label>Contact Phone</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"number\"\n                            name=\"phone\"\n                            onChange={(e) => setuser({ ...user, phone: e.target.value })}\n                            value={user.phone}\n                        ></input>\n                    </div>\n                    <div className='center'>\n                        <input type='submit' className=\"address\" value='CHANGE SHIPPING ADDRESS' />\n                    </div>\n                </form>\n                {/* ====================================\n            FORMULAIRE POUR CHANGER LES INFOS DE BILLING\n            ==================================== */}\n                <form className={showFormBill ? null : 'hide'} onSubmit={(e) => submitFormAddress(e, 'Bill')}>\n                    <FontAwesomeIcon className=\"popcross\" icon={faTimes} onClick={(e) => {\n                        setshowFormBill(!showFormBill)\n                        setuser({\n                            ...user,\n                            compagnyname: storeFormBill.compagnyname,\n                            billingaddress: storeFormBill.billingaddress,\n                            billingoptional: storeFormBill.billingoptional,\n                            billingzipcode: storeFormBill.billingzipcode,\n                            billingcity: storeFormBill.billingcity,\n                            billingstate: storeFormBill.billingstate\n                        })\n                    }} />\n                    <h4>Billing Address</h4>\n                    <div>\n                        <label>Compagny Name (optional)</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"compagnyname\"\n                            onChange={(e) => setuser({ ...user, compagnyname: e.target.value })}\n                            value={user.compagnyname}\n                        ></input>\n                        <label>Address</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"billingaddress\"\n                            onChange={(e) => setuser({ ...user, billingaddress: e.target.value })}\n                            value={user.billingaddress}\n                            required\n                        ></input>\n                        <label>Optional</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"text\"\n                            name=\"detail\"\n                            onChange={(e) => setuser({ ...user, billingoptional: e.target.value })}\n                            value={user.billingoptional}\n                        ></input>\n                        <label>Zipcode</label>\n                        <input\n                            className=\"settingInput\"\n                            name=\"zipcode\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            onChange={(e) => setuser({ ...user, billingzipcode: e.target.value })}\n                            value={user.billingzipcode}\n                            required\n                        ></input>\n                        <div className=\"popupAddressT\">\n                            <div className=\"popupAddressL\">\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, billingcity: e.target.value })}\n                                    value={user.billingcity}\n                                ></input>\n                            </div>\n                            <div className=\"popupAddressR\">\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, billingstate: e.target.value })}\n                                    value={user.billingstate}\n                                    required\n                                ></input>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='center'>\n                        <input type=\"submit\" className=\"address\" value=\"CHANGE BILLING ADDRESS\" />\n                    </div>\n                </form>\n                {/* </div> */}\n                {/* ====================================\n            FIN DU FORMULAIRE POUR CHANGER LES INFOS DE SHIPPING/BILLING\n            ==================================== */}\n            </div >\n        </div>\n    );\n};\n\nexport default CheckoutShipForm;","\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport auMillieme from '../../Functions/roundNum';\nimport useLocalStorage from '../../Functions/useLocalStore';\n\nimport MyCheckoutForm from '../../Components/MyCheckoutForm';\nimport { Elements, CardElement } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutShipForm from '../../Components/CheckoutShipForm';\nimport headCount from '../../Functions/headCount';\nimport checkIfExist from '../../Functions/checkIfExist';\n\nfunction mapStateToProps(state) {\n    console.log('payment get user', state.user)\n    return { user: state.user, prodList: state.basket }\n};\n\nconst stripePromise = loadStripe('pk_test_gVPvQdtolFZzYQmPVqUw324Z00y8aGU5CX');\n\nconst Payment = (props) => {\n    const [finalBasket, setfinalBasket] = useState([]);\n    const [userID, setuserID] = useLocalStorage('user', '');\n    const [guestID, setguestID] = useLocalStorage('guest', '');\n    const [orderID, setorderID] = useLocalStorage('order', '');\n    const [user, setuser] = useState()\n    // const [user, setuser] = useState({\n    //     firstname: '',\n    //     lastname: '',\n    //     address: '',\n    //     optional: '',\n    //     zipcode: '',\n    //     state: '',\n    //     city: '',\n    //     newsletter: '',\n    //     email: '',\n    //     gender: '',\n    //     phone: '',\n    //     compagnyname: '',\n    //     billingaddress: '',\n    //     billingoptional: '',\n    //     billingzipcode: '',\n    //     billingcity: '',\n    //     billingstate: '',\n    //     // password: '',\n    //     // token: String,\n    //     // salt: String,\n    //     statut: '',\n    //     inscription: '',\n    //     birthday: '',\n    //     orders: []\n    // });\n    // const [card, setcard] = useState({\n    //     card\n    // })\n    const [showPayment, setshowPayment] = useState(false);\n    const [payValid, setpayValid] = useState(false);\n    const [totalCart, settotalCart] = useState(0);\n    const [totalProdQty, settotalProdQty] = useState(0);\n    //const [name, setName] = useState(\"i'm Grand Parent\");\n    //je recupere mon produit\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        const fetchData = async () => {\n\n            let url = '/api/getuserandcart';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `userID=${(checkIfExist(userID) ? userID : guestID)}&orderID=${orderID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('retour du back payment page ==', data)\n                    //setuser(user)\n                    setuser(data.user)\n                    //     optional: data.user.optional,\n                    //     zipcode: data.user.zipcode,\n                    //     city: data.user.city,\n                    //     state: data.user.state,\n                    //     newsletter: data.user.newsletter,\n                    //     email: data.user.email,\n                    //     gender: data.user.gender,\n                    //     phone: data.user.phone,\n                    //     compagnyname: data.user.compagnyname,\n                    //     billingname: data.user.billingname,\n                    //     billingaddress: data.user.billingaddress,\n                    //     billingoptional: data.user.billingoptional,\n                    //     billingzipcode: data.user.billingzipcode,\n                    //     billingcity: data.user.billingcity,\n                    //     billingstate: data.user.billingstate,\n                    //     // password: '',\n                    //     // token: String,\n                    //     // salt: String,\n                    //     statut: data.user.statut,\n                    //     inscription: data.user.inscription,\n                    //     birthday: data.user.birthday,\n                    //     orders: data.user.orders\n                    // })\n                    setfinalBasket(data.basket);\n                    console.log('je verifie que je recupere le bon panier: et compte', data, checkIfExist(data.user.address))\n                    settotalCart(auMillieme(data.totalCart));\n                    settotalProdQty(headCount(data.basket));\n                    if (checkIfExist(data.user.address)) {\n                        setshowPayment(true);\n                    } else {\n                        setshowPayment(false);\n                    }\n                });\n        }\n        fetchData();\n\n    }, []);\n\n    var prodList = finalBasket.map((product, i) => {\n\n        return (\n            <div className='productCart' key={i}>\n                <div className='payDetailL'>\n                    <img\n                        className=\"payPic\"\n                        src={`productstiny/${product.img}`} />\n                    <h5 className='payProdName'\n                    >{product.name}</h5>\n                </div>\n                <h6 className='payDetailR'>{product.price}€</h6>\n                {/* <div className='productsDetailCart' style={{ display: 'flex', flexDirection: 'column' }}> */}\n                {/* <div className=\"sizeCart\" style={{ display: 'flex' }}>\n                        <h5 className=\"sizeDetail\">Size :</h5>\n                        <h5  >{product.size} </h5>\n\n                    </div> */}\n                {/* <div className='quantityCart' > */}\n                {/* <h5 className=\"quantityDetail\">Quantity : </h5> */}\n\n                {/* <h5 >{product.quantity}</h5> */}\n                {/* </div> */}\n                {/* </div> */}\n            </div>\n        )\n\n    });\n    if (!payValid) {\n        return (\n            <div className=\"payBloc content\">\n                <Elements stripe={stripePromise}>\n                    <div className=\"payment\">\n                        <CheckoutShipForm setnewUser={setuser} setValidShowPayment={setshowPayment} />\n                        {showPayment ? <MyCheckoutForm user={user} basket={finalBasket} orderID={orderID} totalCart={totalCart} setPaymentValid={setpayValid} /> :\n                            null\n                        }\n                    </div>\n                </Elements>\n                <div className=\"paymentCart\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    {prodList}\n                    <h5 className=\"h5marg\">Your Order\n                ({totalProdQty} items)\n                </h5>\n\n                    <div className=\"totalCartElments\">\n                        <div className=\"totalCartElmt L\">\n                            <h5 className=\"h5marg\" >Order value :</h5>\n                            <h5 className=\"h5marg\" >Shipping :</h5>\n                            <h5 className=\"h5marg\" >TOTAL :</h5>\n                        </div>\n                        <div className=\"totalCartElmt R\">\n                            <h5 className=\"h5marg\" >{auMillieme(totalCart)}€</h5>\n                            <h5 className=\"h5marg\" >FREE</h5>\n                            <h5 className=\"h5marg\" >{auMillieme(totalCart)}€</h5>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    } else {\n        return <Redirect to='/success' />\n    }\n};\n\nexport default connect(mapStateToProps, null)(Payment);\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport formatDate from '../../Functions/formatDate';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\n\nconst SettingsForm = (props) => {\n    const [showBilling, setshowBilling] = useState(false);\n    const [isSend, setisSend] = useState(false);\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [user, setuser] = useState({\n        firstname: '',\n        lastname: '',\n        address: '',\n        optional: '',\n        zipcode: '',\n        city: '',\n        state: '',\n        newsletter: '',\n        email: '',\n        gender: '',\n        phone: '',\n        compagnyname: '',\n        billingaddress: '',\n        billingoptional: '',\n        billingzipcode: '',\n        billingcity: '',\n        billingstate: '',\n        // password: '',\n        // token: String,\n        // salt: String,\n        statut: '',\n        inscription: '',\n        birthday: '',\n        orders: []\n    });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        console.log('here-------', props)\n        const fetchData = async () => {\n            let url = '/api/getuser';\n            await fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: `id=${userID}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    let birthday = data.user.birthday\n                    if (birthday != undefined) {\n                        //document.getElementById('dateDuJour').valueAsDate = birthday;\n                        birthday = new Date(birthday);\n                        console.log('je passse la ==========', birthday)\n                    }\n                    setuser({\n                        firstname: data.user.firstname,\n                        lastname: data.user.lastname,\n                        address: data.user.address,\n                        optional: data.user.optional,\n                        zipcode: data.user.zipcode,\n                        city: data.user.city,\n                        state: data.user.state,\n                        newsletter: data.user.newsletter,\n                        email: data.user.email,\n                        gender: data.user.gender,\n                        phone: data.user.phone,\n                        compagnyname: data.user.compagnyname,\n                        billingname: data.user.billingname,\n                        billingaddress: data.user.billingaddress,\n                        billingoptional: data.user.billingoptional,\n                        billingzipcode: data.user.billingzipcode,\n                        billingcity: data.user.billingcity,\n                        billingstate: data.user.billingstate,\n                        // password: '',\n                        // token: String,\n                        // salt: String,\n                        statut: data.user.statut,\n                        inscription: data.user.inscription,\n                        birthday: birthday,\n                        orders: data.user.orders\n                    })\n\n                    //console.log('je recois du back avec une billing vide', data.user.billingaddress)\n                    if (data.user.billingaddress != undefined) {\n                        setshowBilling(true);\n                    }\n                });\n        }\n        fetchData();\n    }, []);\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        let url = '/api/updateuserdetails';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&gender=${user.gender}&phone=${user.phone}&birthday=${user.birthday}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('retour du back === ', data.status)\n                if (data.status) {\n                    setisSend(true);\n                } else {\n                    console.log('erreur')\n                }\n            });\n    }\n    const submitFormAddress = (e) => {\n        e.preventDefault();\n        let url = '/api/updateuseraddress';\n        let body\n        if (showBilling) {\n            body = `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}&compagnyname=${user.compagnyname}&billingaddress=${user.billingaddress}&billingoptional=${user.billingoptional}&billingzipcode=${user.billingzipcode}&billingcity=${user.billingcity}&billingstate=${user.billingstate}`\n        } else {\n            body = `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&address=${user.address}&optional=${user.optional}&zipcode=${user.zipcode}&city=${user.city}&state=${user.state}`\n\n        }\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: body\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('retour du back === ', data.status)\n                if (data.status) {\n                    setisSend(true)\n                } else {\n                    console.log('erreur');\n                }\n            });\n    }\n    if (!isSend) {\n        if (props.match.params.form === 'details') {\n            return (\n                <div className='settingsBloc content'>\n\n                    <div className=\"backToSearch set\">\n                        <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                        <h5 className=\"backSetting\" >Back to<a href='/myaccount' className=\"\">my Account</a>/<a href='/mysettings' className=\"\">my Settings </a></h5>\n                    </div>\n\n                    <div className='settingsdetails'>\n                        <div className='settingSubTitle'>\n                            <h5 className='settingSubTitleDetailL'>My Details</h5>\n                        </div>\n                        <form className='settingsContent setForm' onSubmit={(e) => submitForm(e)}>\n                            <label>First Name *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"firstname\"\n                                onChange={(e) => setuser({ ...user, firstname: e.target.value })}\n                                value={user.firstname}\n                                required\n                            ></input>\n\n                            <label>Last Name *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"lastname\"\n                                onChange={(e) => setuser({ ...user, lastname: e.target.value })}\n                                value={user.lastname}\n                                required\n                            ></input>\n\n                            <label>Email *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"email\"\n                                name=\"email\"\n                                onChange={(e) => setuser({ ...user, email: e.target.value })}\n                                value={user.email}\n                                required></input>\n                            <label>Date of birth *</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"date\"\n                                name=\"date\"\n                                id='dateDuJour'\n                                onChange={(e) => setuser({ ...user, birthday: e.target.value })}\n                                valueAsDate={user.birthday}\n                                required\n                            ></input>\n                            <label>Phone</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"number\"\n                                name=\"phone\"\n                                onChange={(e) => setuser({ ...user, phone: e.target.value })}\n                                value={user.phone}\n                            ></input>\n                            <label>Gender</label>\n                            <select\n                                className=\"settingInput\"\n                                name=\"gender\"\n                                onChange={(e) => setuser({ ...user, gender: e.target.value })} required>\n                                <option value={user.gender}>{user.gender != '' ? user.gender : `--`}</option>\n                                <option value=\"Female\">Female</option>\n                                <option value=\"Male\">Male</option>\n                            </select>\n                            <div className='setFormBtn'>\n                                <input className=\"button log\" type=\"submit\" method=\"post\" value=\"SAVE DETAILS\" />\n                                <Link to='/mysettings' className=\"cancel btnCancel\" >CANCEL</Link>\n                            </div>\n                        </form>\n                    </div>\n                </div >\n\n            );\n        } else if (props.match.params.form === 'address') {\n            return (\n                <div className='settingsBloc content'>\n\n                    <div className=\"backToSearch set\">\n                        <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                        <h5 className=\"backSetting\" >Back to<a href='/myaccount' className=\"\">my Account</a>/<a href='/mysettings' className=\"\">my Settings </a></h5>\n                    </div>\n\n                    <form className='settingsdetails' onSubmit={(e) => submitFormAddress(e)}>\n                        <div className='settingSubTitle'>\n                            <h5 className='settingSubTitleDetailL'>My Addresses</h5>\n                        </div>\n                        <div className='settingsContent setForm'>\n                            <h5>Shipping Address</h5>\n                            <label>Address</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"address\"\n                                onChange={(e) => setuser({ ...user, address: e.target.value })}\n                                value={user.address}\n                                required\n                            ></input>\n                            <label>Optional</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"detail\"\n                                onChange={(e) => setuser({ ...user, optional: e.target.value })}\n                                value={user.optional}\n                            ></input>\n                            <label>Zipcode</label>\n                            <input\n                                className=\"settingInput\"\n                                name=\"zipcode\"\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                onChange={(e) => setuser({ ...user, zipcode: e.target.value })}\n                                value={user.zipcode}\n                                required\n                            ></input>\n                            <label>City</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"city\"\n                                onChange={(e) => setuser({ ...user, city: e.target.value })}\n                                value={user.city}\n                            ></input>\n                            <label>State</label>\n                            <input\n                                className=\"settingInput\"\n                                type=\"text\"\n                                name=\"state\"\n                                onChange={(e) => setuser({ ...user, state: e.target.value })}\n                                value={user.state}\n                                required\n                            ></input>\n                            <h5 className=\"billingAddress\" onClick={(e) => { setshowBilling(!showBilling) }}>{showBilling ? `Billing Address (if different from Shipping)` : `Add Billing Address`}</h5>\n                            <div className={showBilling ? \"display\" : \"hide\"}>\n                                <label>Compagny Name (optional)</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"compagnyname\"\n                                    onChange={(e) => setuser({ ...user, compagnyname: e.target.value })}\n                                    value={user.compagnyname}\n                                ></input>\n                                <label>Address</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"billingaddress\"\n                                    onChange={(e) => setuser({ ...user, billingaddress: e.target.value })}\n                                    value={user.billingaddress}\n                                    required={showBilling ? true : false}\n                                ></input>\n                                <label>Optional</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"detail\"\n                                    onChange={(e) => setuser({ ...user, billingoptional: e.target.value })}\n                                    value={user.billingoptional}\n                                ></input>\n                                <label>Zipcode</label>\n                                <input\n                                    className=\"settingInput\"\n                                    name=\"zipcode\"\n                                    type=\"text\"\n                                    pattern=\"[0-9]*\"\n                                    onChange={(e) => setuser({ ...user, billingzipcode: e.target.value })}\n                                    value={user.billingzipcode}\n                                    required={showBilling ? true : false}\n                                ></input>\n                                <label>City</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"city\"\n                                    onChange={(e) => setuser({ ...user, billingcity: e.target.value })}\n                                    value={user.billingcity}\n                                ></input>\n                                <label>State</label>\n                                <input\n                                    className=\"settingInput\"\n                                    type=\"text\"\n                                    name=\"state\"\n                                    onChange={(e) => setuser({ ...user, billingstate: e.target.value })}\n                                    value={user.billingstate}\n                                    required={showBilling ? true : false}\n                                ></input>\n                            </div>\n                        </div>\n                        <div className='setFormBtn'>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" value=\"SAVE DETAILS\" />\n                            <Link to='/mysettings' className=\"cancel btnCancel\" >CANCEL</Link>\n                        </div>\n                    </form>\n                </div >\n            )\n        }\n    } else {\n        return <Redirect to='/mysettings' />\n    }\n};\n\n// function mapStateToProps(state) {\n// \treturn { user: state.user };\n// }\n//export default connect(mapStateToProps, null)(Conversation);\nexport default SettingsForm;","import React, { useState, useReducer, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/fontawesome-free-solid';\n\nconst UpdatePassword = (props) => {\n    const [isSend, setisSend] = useState(false);\n    const [userID, setuserID] = useLocalStorage('user', []);\n    const [password, setpassword] = useState({\n        current: '',\n        new: '',\n        confirm: ''\n    });\n    const [nomatch, setnomatch] = useState(false);\n    const [nomatchCurrent, setnomatchCurrent] = useState(false)\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    // const [user, setuser] = useState({\n    //     firstname: '',\n    //     lastname: '',\n    //     address: '',\n    //     optional: '',\n    //     zipcode: '',\n    //     city: '',\n    //     state: '',\n    //     newsletter: '',\n    //     email: '',\n    //     gender: '',\n    //     phone: '',\n    //     compagnyname: '',\n    //     billingaddress: '',\n    //     billingoptional: '',\n    //     billingzipcode: '',\n    //     billingcity: '',\n    //     billingstate: '',\n    //     // password: '',\n    //     // token: String,\n    //     // salt: String,\n    //     statut: '',\n    //     inscription: '',\n    //     birthday: '',\n    //     orders: []\n    // });\n\n    // useEffect(() => {\n\n    //     const fetchData = async () => {\n    //         let url = 'http://localhost:5000/getuser';\n    //         fetch(url, {\n    //             method: 'POST',\n    //             headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    //             body: `id=${userID}`\n    //         })\n    //             .then((response) => response.json())\n    //             .then((data) => {\n    //                 setuser({\n    //                     firstname: data.user.firstname,\n    //                     lastname: data.user.lastname,\n    //                     address: data.user.address,\n    //                     optional: data.user.optional,\n    //                     zipcode: data.user.zipcode,\n    //                     city: data.user.city,\n    //                     state: data.user.state,\n    //                     newsletter: data.user.newsletter,\n    //                     email: data.user.email,\n    //                     gender: data.user.gender,\n    //                     phone: data.user.phone,\n    //                     compagnyname: data.user.compagnyname,\n    //                     billingname: data.user.billingname,\n    //                     billingaddress: data.user.billingaddress,\n    //                     billingoptional: data.user.billingoptional,\n    //                     billingzipcode: data.user.billingzipcode,\n    //                     billingcity: data.user.billingcity,\n    //                     billingstate: data.user.billingstate,\n    //                     // password: '',\n    //                     // token: String,\n    //                     // salt: String,\n    //                     statut: data.user.statut,\n    //                     inscription: data.user.inscription,\n    //                     birthday: data.user.birthday,\n    //                     orders: data.user.orders\n    //                 })\n    //                 //console.log('je recois du back avec une billing vide', data.user.billingaddress)\n    //                 if (data.user.billingaddress != undefined) {\n    //                     setshowBilling(true);\n    //                 }\n    //             });\n    //     }\n    //     fetchData();\n    // }, []);\n\n    const submitForm = (e) => {\n        e.preventDefault()\n        if (password.confirm === password.new) {\n            setnomatch(false);\n            const fetchData = async () => {\n                let url = '/api/changepassword';\n                fetch(url, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                    body: `id=${userID}&current=${password.current}&new=${password.new}&confirm=${password.confirm}`\n                })\n                    .then((response) => response.json())\n                    .then((data) => {\n                        if (data.status) {\n                            setisSend(true);\n                        } else {\n                            setnomatchCurrent(true)\n                        }\n                    })\n            };\n            fetchData();\n        } else {\n            setnomatch(true);\n        }\n        console.log(password)\n        // e.preventDefault();\n        // let url = 'http://localhost:5000/updateuserdetails';\n        // fetch(url, {\n        //     method: 'POST',\n        //     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        //     body: `id=${userID}&firstname=${user.firstname}&lastname=${user.lastname}&email=${user.email}&gender=${user.gender}&phone=${user.phone}&birthday=${user.birthday}`\n        // })\n        //     .then((response) => response.json())\n        //     .then((data) => {\n        //         console.log('retour du back === ', data.status)\n        //         if (data.status) {\n        //             setisSend(true);\n        //         } else {\n        //             console.log('erreur')\n        //         }\n        //     });\n    }\n\n    if (!isSend) {\n\n        return (\n            <div className='settingsBloc content'>\n\n                <div className=\"backToSearch set\">\n                    <FontAwesomeIcon className=\"backArrow\" icon={faArrowLeft} />\n                    <h5 className=\"backSetting\" >Back to<a href='/myaccount' className=\"\">my Account</a>/<a href='/mysettings' className=\"\">my Settings </a></h5>\n                </div>\n\n                <div className='settingsdetails'>\n                    <div className='settingSubTitle'>\n                        <h5 className='settingSubTitleDetailL'>Change my Password</h5>\n                    </div>\n                    <form className='settingsContent setForm' onSubmit={(e) => submitForm(e)}>\n                        <label>Current Password *</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"password\"\n                            name=\"oldpass\"\n                            onChange={(e) => setpassword({ ...password, current: e.target.value })}\n                            value={password.current}\n                            required\n                        ></input>\n                        <label>New Password *</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"password\"\n                            name=\"newpass\"\n                            //pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                            onChange={(e) => setpassword({ ...password, new: e.target.value })}\n                            value={password.new}\n                            required\n                        ></input>\n\n                        <label>Confirm New Password *</label>\n                        <input\n                            className=\"settingInput\"\n                            type=\"password\"\n                            name=\"newpassverif\"\n                            onChange={(e) => setpassword({ ...password, confirm: e.target.value })}\n                            value={password.confirm}\n                            required></input>\n                        <div className={nomatch ? null : 'hide'}>\n                            <span style={{ color: 'red' }}>Your password and confirmation password do not match <br></br>\n                            This form could not be submitted. Please review your information.</span>\n                        </div>\n                        <div className={nomatchCurrent ? null : 'hide'}>\n                            <span style={{ color: 'red' }}>Wrong Password</span>\n                        </div>\n                        <div className='setFormBtn'>\n                            <input className=\"button log\" type=\"submit\" method=\"post\" value=\"CHANGE PASSWORD\" />\n                            <Link to='/mysettings' className=\"cancel btnCancel\" >CANCEL</Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return <Redirect to='/mysettings' />\n    }\n};\n\nexport default UpdatePassword;","import React, { useState, useEffect } from 'react';\n//import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport checkIfExist from '../../Functions/checkIfExist';\n\nconst Success = (props) => {\n    const [userID, setuserID] = useLocalStorage('user', '');\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    if (checkIfExist(userID)) {\n        return (\n\n            <div className='content'>\n                <form className=\"form logoutBloc\">\n                    <h2>Congrats ! You're purchase is now on the way !</h2>\n                    <Link to='/products'>Back to Shopping</Link>\n                    <Link to='/myaccount'>See my order</Link>\n                    <img className=\"slide logout\" id='homeSlide0' src='home/homepic1.jpg'></img>\n                </form>\n            </div>\n        );\n    } else {\n        return (\n\n            <div className='content'>\n                <form className=\"form logoutBloc\">\n                    <h2>Congrats ! You're purchase is now on the way !</h2>\n                    <Link to='/products'>Back to Shopping</Link>\n                    <Link to='/signin'>Create an account</Link>\n                    <img className=\"slide logout\" id='homeSlide0' src='home/homepic1.jpg'></img>\n                </form>\n            </div>\n        );\n    }\n\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        newUser: function (userToSend) {\n            console.log('je suis dans le NEW USER REDUCER', userToSend)\n            dispatch({ type: 'setUser', user: userToSend })\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Success);","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst PopUpRetrievePassSent = (props) => {\n    const [toShop, settoShop] = useState(false);\n    const [toCart, settoCart] = useState(false);\n\n    if (toShop) {\n        return (\n            <Redirect to={props.link} />\n        );\n\n    } else {\n        return (\n            <div className='popup'>\n                <div className='popupinner'>\n                    <div className=\"popupmsg\" style={{ display: \"flex\" }}>\n                        <FontAwesomeIcon className=\"fa-2x icon\" icon={faPaperPlane} />\n                        <p>{props.content}</p>\n                        <FontAwesomeIcon className=\"fa-2x icon\" icon={faPaperPlane} />\n                    </div>\n                    <div>\n                        <button className=\"checkInOut\" onClick={() => { settoShop(true) }}>OK</button>\n                        {/* <button className=\"checkInOut\" onClick={() => { settoCart(true) }}>CHECKOUT</button> */}\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n};\n\nexport default PopUpRetrievePassSent;","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport PopUpRetrievePassSent from '../../Components/PopUpRetrievePassSent';\n\nconst AskForNewPass = (props) => {\n    const [olduser, setolduser] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [isSent, setisSent] = useState(false);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    // j'envoie un mail pour reset le password user \n    const resetpass = (e) => {\n        e.preventDefault();\n\n        let url = '/api/askfornewpass';\n        fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, //encodage\n            body: `email=${olduser.email}`\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('hello reset ============', data)\n                if (data.status) {\n                    if (data.msg === 'success') {\n                        setisSent(true)\n                    } else {\n                        alert(\"Error ! Please try again\");\n                    }\n                } else {\n                    function myFunction() {\n                        alert(\"There is no account registered with this email !\");\n                    }\n                    myFunction();\n                }\n            });\n    };\n\n\n    return (\n        <div className=\"blocSignIn content\">\n            {isSent ? <PopUpRetrievePassSent content=\"Thank You ! You will receive an email to reset your password in a few minutes\" link=\"/signin\" /> : null}\n            <form className=\"formfull\" onSubmit={(e) => resetpass(e)}>\n                <h2>FORGOT YOUR PASSWORD?</h2>\n                <span className=\"logContent\">\n                    <h5>If you cannot remember your password, enter your email address and we'll send you details on how to recover it.</h5>\n\n                    <label>Email</label>\n                    <input\n                        type=\"email\"\n                        className=\"Login-input\"\n                        name=\"login_email\"\n                        placeholder=\"Votre email\"\n                        onChange={(e) => setolduser({ ...olduser, email: e.target.value })}\n                        value={olduser.email}\n                        required\n                    />\n\n                    <div>\n                        <Link className=\"resetPass L\" to=\"/signin\">Remember it ? Sign In</Link>\n                        <Link className=\"resetPass R\" to={{ pathname: '/signin', query: { notRegistered: true } }}>Not registered yet ? Create an Account</Link>\n                    </div>\n                </span>\n                <input className=\"button log\" type=\"submit\" method=\"post\" value=\"RETRIEVE PASSWORD\" />\n            </form>\n\n        </div >\n    );\n\n}\n\nexport default AskForNewPass;","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport useLocalStorage from '../../Functions/useLocalStore';\nimport checkIfExist from '../../Functions/checkIfExist';\nimport PopUpRetrievePassSent from '../../Components/PopUpRetrievePassSent';\nimport { set } from 'mongoose';\n\n\n\nconst ResetPass = (props) => {\n    const [user, setuser] = useState({\n        newpass: \"\",\n        confirmpass: \"\"\n    });\n\n    const [isSent, setisSent] = useState(false);\n    const [showNo, setshowNo] = useState(false);\n    const [popUp, setpopUp] = useState({\n        status: false,\n        content: '',\n        link: ''\n    });\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    // j'envoie un mail pour reset le password user \n    const resetpass = (e) => {\n        e.preventDefault();\n\n        if (user.confirmpass === user.newpass) {\n            let url = '/api/resetpassword';\n            fetch(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, //encodage\n                body: `token=${props.match.params.token}&newpass=${user.newpass}`\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    console.log('hello reset ============', data)\n                    if (data.status) {\n                        setpopUp({ status: true, content: \"Your password has been successfully changed !\", link: \"/signin\" })\n                    } else {\n                        setpopUp({ status: true, content: \"Your reset password link is expired. Please try again\", link: \"/askfornewpass\" })\n                    }\n\n                    //     update();\n                    //     setisSent(true);\n                    // } else {\n                    //     function myFunction() {\n                    //         alert(\"Un compte est déjà associé à cet email\");\n                    //     }\n                    //     myFunction();\n                    // }\n                });\n        } else {\n            setshowNo(true)\n        }\n    };\n\n    return (\n        <div className=\"blocSignIn content\">\n            {popUp.status ? <PopUpRetrievePassSent content={popUp.content} link={popUp.link} /> : null}\n            <form className=\"formfull\" onSubmit={(e) => resetpass(e)}>\n                <h2>RESET PASSWORD</h2>\n                <span className=\"logContent\">\n                    <label>New Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"Login-input\"\n                        name=\"login_password\"\n                        placeholder=\"enter new password\"\n                        onChange={(e) => setuser({ ...user, newpass: e.target.value })}\n                        value={user.newpass}\n                        required\n                    />\n                    <label>Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"Login-input\"\n                        name=\"login_password\"\n                        placeholder=\"confirm new password\"\n                        onChange={(e) => setuser({ ...user, confirmpass: e.target.value })}\n                        value={user.confirmpass}\n                        required\n                    />\n                    {showNo ? <h5 style={{ color: \"red\" }}>Passwords do not match. Please try again</h5> : null}\n                    {/* <div>\n                            <Link className=\"resetPass L\" to=\"/signin\">Remember it ? Sign In</Link>\n                            <Link className=\"resetPass R\" onClick={(e) => setnotRegistered(true)}>Not registered yet ? Create an Account</Link>\n                        </div> */}\n                </span>\n                <input className=\"button log\" type=\"submit\" method=\"post\" value=\"UPDATE PASSWORD\" />\n            </form>\n\n        </div >\n    );\n\n}\n\n\nexport default ResetPass;","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Products from './Page/Shop/Products';\nimport Form from './Page/Form';\nimport Login from './Page/Login';\nimport Logout from './Page/Logout';\nimport Header from './Nav/Header';\nimport Change from './Page/Change';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport allOptions from './Functions/allOptions';\n\nimport HomePage from './Page/HomePage';\nimport About from './Page/About';\nimport Collection from './Page/CollectionFW20';\nimport Cart from './Page/Shop/Cart';\nimport ProductCard from './Page/Shop/ProductCard';\nimport Contact from './Page/Contact';\nimport Checkout from './Page/Checkout/Checkout';\nimport ShippingInfo from './Page/Checkout/ShippingInfo';\nimport MyAccount from './Page/Account/MyAccount';\nimport MySettings from './Page/Account/MySettings';\nimport Payment from './Page/Checkout/Payment';\nimport headCount from './Functions/headCount';\nimport useLocalStorage from './Functions/useLocalStore';\nimport SettingsForm from './Page/Account/SettingsForm';\nimport UpdatePassword from './Page/Account/UpdatePassword';\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport checkIfExist from './Functions/checkIfExist';\nimport Success from './Page/Checkout/Success';\nimport AskForNewPass from './Page/Account/AskForNewPass';\nimport ResetPassword from './Page/Account/ResetPassword';\n\nlibrary.add(fas);\n\n\nfunction mapStateToProps(state) {\n  console.log('APP get store', state)\n  return { userName: state.user, count: state.count }\n}\n\nfunction App(props) {\n  const [userID, setuserID] = useLocalStorage('user', '');\n  const [orderID, setorderID] = useLocalStorage('order', '');\n  const [productList, setproductList] = useState([]);\n  const [user, setuser] = useState('')\n  const [countBasket, setcountBasket] = useState(0);\n\n  useEffect(() => {\n    props.newOrder(orderID);\n    props.newUser(userID);\n\n\n    const fetchData = async () => {\n      let url = '/api/get-order-and-user-from-storage';\n      await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: `order=${orderID}&user=${userID}`\n      })\n        .then((response) => response.json())\n        .then(async (data) => {\n          await setproductList(data.basket);\n          await props.newBasket(data.basket);\n          await props.newCount(headCount(data.basket));\n          await setcountBasket(headCount(data.basket));\n          await localStorage.setItem('count', JSON.stringify(headCount(data.basket)));\n          if (checkIfExist(data.orderID)) {\n            await localStorage.setItem('order', JSON.stringify(data.orderID));\n          }\n        });\n    };\n    fetchData();\n\n    props.newCount(countBasket)\n  }, []);\n\n  if (checkIfExist(props.userName)) {\n    console.log('je passe dans le if APP', props.userName)\n    return (\n      <div className=\"App\">\n\n        <Router>\n          <Switch>\n            <div>\n              <Header count={props.count} user={checkIfExist(props.userName)} />\n              {/* <Route\n                path='/dashboard'\n                render={(props) => <Dashboard {...props} isAuthed={true} />}\n              /> */}\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/products\" exact component={Products} />\n              <Route path=\"/form\" component={Form} />\n              <Route path=\"/signout\" component={Logout} />\n              <Route path=\"/signin\" component={Login} />\n              <Route path=\"/change\" component={Change} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/collection\" component={Collection} />\n              <Route path=\"/cart\" component={Cart} />\n              <Route path=\"/prodcard/:id\" component={ProductCard} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/shippinginfo\" component={ShippingInfo} />\n              <Route path=\"/signout\" component={Logout} />\n              {/* <Route\n                path='/signout'\n                render={(props) => <Logout {...props} user={checkIfExist(props.userName)} />}\n              /> */}\n              <Route path=\"/myaccount\" component={MyAccount} />\n              <Route path=\"/payment\" component={Payment} />\n              <Route path=\"/mysettings\" component={MySettings} />\n              <Route path=\"/settingsform/:form\" component={SettingsForm} />\n              <Route path=\"/updatepass\" component={UpdatePassword} />\n              <Route path=\"/success\" component={Success} />\n              <Route path=\"/resetpass/:token\" component={ResetPassword} />\n            </div>\n          </Switch>\n        </Router>\n      </div>\n    )\n  } else {\n    console.log('je passe dans le else APP', props.userName)\n    return (\n      <div className=\"App\">\n\n        <Router>\n          <Switch>\n            <div>\n              <Header count={props.count} user={checkIfExist(props.userName)} />\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/products\" exact component={Products} />\n              <Route path=\"/form\" component={Form} />\n              <Route path=\"/signout\" component={Logout} />\n              <Route path=\"/signin\" component={Login} />\n              <Route path=\"/change\" component={Change} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/collection\" component={Collection} />\n              <Route path=\"/cart\" component={Cart} />\n              <Route path=\"/prodcard/:id\" component={ProductCard} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route path=\"/askfornewpass\" component={AskForNewPass} />\n              <Route path=\"/resetpass/:token\" component={ResetPassword} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/shippinginfo\" component={ShippingInfo} />\n              <Route path=\"/payment\" component={Payment} />\n              <Route path=\"/success\" component={Success} />\n\n            </div>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    newUser: function (userToSend) {\n      console.log('je suis dans le NEW USER REDUCER', userToSend)\n      dispatch({ type: 'setUser', user: userToSend })\n    },\n    newCount: function (countToSend) {\n      console.log('je suis dans le NEW COUNT REDUCER', countToSend)\n      dispatch({ type: 'setCount', count: countToSend })\n    },\n    newBasket: function (basketToSend) {\n      console.log('je suis dans le NEW BASKET REDUCERS', basketToSend)\n      dispatch({ type: 'updateBasket', basket: basketToSend })\n    },\n    newOrder: function (orderToSend) {\n      console.log('je suis dans le NEW ORDER REDUCER', orderToSend)\n      dispatch({ type: 'setOrder', order: orderToSend })\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function (user = '', action) {\n    // signup\n    if (action.type === 'setUser') {\n        console.log(action.user)\n        return action.user;\n        // } else if (action.type === 'decoUser') {\n        //     console.log('==============================deco user', action, user);\n        //     return user;\n    } else {\n        return user;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport user from './Reducers/user.reducer';\nimport basket from './Reducers/shop.reducer';\nimport count from './Reducers/count.reducer';\nimport order from './Reducers/order.reducer';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nconst store = createStore(combineReducers({ user, basket, count, order }));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default function (basket = [], action) {\n    //console.log('action redux shop', action);\n    // signup\n    if (action.type === 'setBasket') {\n        basket.push(action.basket);\n        return basket;\n    } else if (action.type === 'updateBasket') {\n        console.log('updateBasket =========', action.basket)\n        return action.basket;\n    } else if (action.type === 'deleteBasket') {\n        //console.log('retour du front au reducer', action);\n        return action.basket;\n    } else {\n        return basket;\n    }\n}\n","export default function (count = 0, action) {\n    //console.log('action redux shop', action);\n    // signup\n    if (action.type === 'setCount') {\n        //console.log('redux count', action.count);\n        return action.count;\n    } else {\n        return count;\n    }\n}\n","import checkIfExist from \"../Functions/checkIfExist\";\n\nexport default function (order = '', action) {\n    //console.log('action redux shop', action);\n    // signup\n    if (action.type === 'setOrder') {\n        if (checkIfExist(action.order)) {\n            return action.order;\n        } else {\n            return order\n        }\n\n    } else {\n        return order;\n    }\n}\n"],"sourceRoot":""}